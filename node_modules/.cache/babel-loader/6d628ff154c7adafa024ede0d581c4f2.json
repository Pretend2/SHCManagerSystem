{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { computed } from 'vue';\nimport { getColKey, createCustomWidthStyle } from './utils';\n\nfunction getRowsAndCols(columns) {\n  const rows = [];\n  const cols = [];\n  const dataRelatedCols = [];\n  const rowItemMap = new WeakMap();\n  let maxDepth = -1;\n  let totalRowSpan = 0;\n  let hasEllipsis = false;\n\n  function ensureMaxDepth(columns, currentDepth) {\n    if (currentDepth > maxDepth) {\n      rows[currentDepth] = [];\n      maxDepth = currentDepth;\n    }\n\n    for (const column of columns) {\n      if ('children' in column) {\n        ensureMaxDepth(column.children, currentDepth + 1);\n      } else {\n        cols.push({\n          key: getColKey(column),\n          style: createCustomWidthStyle(column),\n          column\n        });\n        totalRowSpan += 1;\n\n        if (!hasEllipsis) {\n          hasEllipsis = !!column.ellipsis;\n        }\n\n        dataRelatedCols.push(column);\n      }\n    }\n  }\n\n  ensureMaxDepth(columns, 0);\n  let currentLeafIndex = 0;\n\n  function ensureColLayout(columns, currentDepth) {\n    let hideUntilIndex = 0;\n    columns.forEach((column, index) => {\n      var _a;\n\n      if ('children' in column) {\n        // do not allow colSpan > 1 for non-leaf th\n        // we will execute the calculation logic\n        const cachedCurrentLeafIndex = currentLeafIndex;\n        const rowItem = {\n          column,\n          colSpan: 0,\n          rowSpan: 1,\n          isLast: false\n        };\n        ensureColLayout(column.children, currentDepth + 1);\n        column.children.forEach(childColumn => {\n          var _a, _b;\n\n          rowItem.colSpan += (_b = (_a = rowItemMap.get(childColumn)) === null || _a === void 0 ? void 0 : _a.colSpan) !== null && _b !== void 0 ? _b : 0;\n        });\n\n        if (cachedCurrentLeafIndex + rowItem.colSpan === totalRowSpan) {\n          rowItem.isLast = true;\n        }\n\n        rowItemMap.set(column, rowItem);\n        rows[currentDepth].push(rowItem);\n      } else {\n        if (currentLeafIndex < hideUntilIndex) {\n          currentLeafIndex += 1;\n          return;\n        }\n\n        let colSpan = 1;\n\n        if ('titleColSpan' in column) {\n          colSpan = (_a = column.titleColSpan) !== null && _a !== void 0 ? _a : 1;\n        }\n\n        if (colSpan > 1) {\n          hideUntilIndex = currentLeafIndex + colSpan;\n        }\n\n        const isLast = currentLeafIndex + colSpan === totalRowSpan;\n        const rowItem = {\n          column,\n          colSpan,\n          rowSpan: maxDepth - currentDepth + 1,\n          isLast\n        };\n        rowItemMap.set(column, rowItem);\n        rows[currentDepth].push(rowItem);\n        currentLeafIndex += 1;\n      }\n    });\n  }\n\n  ensureColLayout(columns, 0);\n  return {\n    hasEllipsis,\n    rows,\n    cols,\n    dataRelatedCols\n  };\n}\n\nexport function useGroupHeader(props) {\n  const rowsAndCols = computed(() => getRowsAndCols(props.columns));\n  return {\n    rowsRef: computed(() => rowsAndCols.value.rows),\n    colsRef: computed(() => rowsAndCols.value.cols),\n    hasEllipsisRef: computed(() => rowsAndCols.value.hasEllipsis),\n    dataRelatedColsRef: computed(() => rowsAndCols.value.dataRelatedCols)\n  };\n}","map":{"version":3,"names":["computed","getColKey","createCustomWidthStyle","getRowsAndCols","columns","rows","cols","dataRelatedCols","rowItemMap","WeakMap","maxDepth","totalRowSpan","hasEllipsis","ensureMaxDepth","currentDepth","column","children","push","key","style","ellipsis","currentLeafIndex","ensureColLayout","hideUntilIndex","forEach","index","_a","cachedCurrentLeafIndex","rowItem","colSpan","rowSpan","isLast","childColumn","_b","get","set","titleColSpan","useGroupHeader","props","rowsAndCols","rowsRef","value","colsRef","hasEllipsisRef","dataRelatedColsRef"],"sources":["D:/VCode/SHC社区管理系统/shc_community_manager_system/node_modules/naive-ui/es/data-table/src/use-group-header.js"],"sourcesContent":["import { computed } from 'vue';\nimport { getColKey, createCustomWidthStyle } from './utils';\nfunction getRowsAndCols(columns) {\n    const rows = [];\n    const cols = [];\n    const dataRelatedCols = [];\n    const rowItemMap = new WeakMap();\n    let maxDepth = -1;\n    let totalRowSpan = 0;\n    let hasEllipsis = false;\n    function ensureMaxDepth(columns, currentDepth) {\n        if (currentDepth > maxDepth) {\n            rows[currentDepth] = [];\n            maxDepth = currentDepth;\n        }\n        for (const column of columns) {\n            if ('children' in column) {\n                ensureMaxDepth(column.children, currentDepth + 1);\n            }\n            else {\n                cols.push({\n                    key: getColKey(column),\n                    style: createCustomWidthStyle(column),\n                    column\n                });\n                totalRowSpan += 1;\n                if (!hasEllipsis) {\n                    hasEllipsis = !!column.ellipsis;\n                }\n                dataRelatedCols.push(column);\n            }\n        }\n    }\n    ensureMaxDepth(columns, 0);\n    let currentLeafIndex = 0;\n    function ensureColLayout(columns, currentDepth) {\n        let hideUntilIndex = 0;\n        columns.forEach((column, index) => {\n            var _a;\n            if ('children' in column) {\n                // do not allow colSpan > 1 for non-leaf th\n                // we will execute the calculation logic\n                const cachedCurrentLeafIndex = currentLeafIndex;\n                const rowItem = {\n                    column,\n                    colSpan: 0,\n                    rowSpan: 1,\n                    isLast: false\n                };\n                ensureColLayout(column.children, currentDepth + 1);\n                column.children.forEach((childColumn) => {\n                    var _a, _b;\n                    rowItem.colSpan += (_b = (_a = rowItemMap.get(childColumn)) === null || _a === void 0 ? void 0 : _a.colSpan) !== null && _b !== void 0 ? _b : 0;\n                });\n                if (cachedCurrentLeafIndex + rowItem.colSpan === totalRowSpan) {\n                    rowItem.isLast = true;\n                }\n                rowItemMap.set(column, rowItem);\n                rows[currentDepth].push(rowItem);\n            }\n            else {\n                if (currentLeafIndex < hideUntilIndex) {\n                    currentLeafIndex += 1;\n                    return;\n                }\n                let colSpan = 1;\n                if ('titleColSpan' in column) {\n                    colSpan = (_a = column.titleColSpan) !== null && _a !== void 0 ? _a : 1;\n                }\n                if (colSpan > 1) {\n                    hideUntilIndex = currentLeafIndex + colSpan;\n                }\n                const isLast = currentLeafIndex + colSpan === totalRowSpan;\n                const rowItem = {\n                    column,\n                    colSpan,\n                    rowSpan: maxDepth - currentDepth + 1,\n                    isLast\n                };\n                rowItemMap.set(column, rowItem);\n                rows[currentDepth].push(rowItem);\n                currentLeafIndex += 1;\n            }\n        });\n    }\n    ensureColLayout(columns, 0);\n    return {\n        hasEllipsis,\n        rows,\n        cols,\n        dataRelatedCols\n    };\n}\nexport function useGroupHeader(props) {\n    const rowsAndCols = computed(() => getRowsAndCols(props.columns));\n    return {\n        rowsRef: computed(() => rowsAndCols.value.rows),\n        colsRef: computed(() => rowsAndCols.value.cols),\n        hasEllipsisRef: computed(() => rowsAndCols.value.hasEllipsis),\n        dataRelatedColsRef: computed(() => rowsAndCols.value.dataRelatedCols)\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}