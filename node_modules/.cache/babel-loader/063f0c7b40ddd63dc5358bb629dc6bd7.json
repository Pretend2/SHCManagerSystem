{"ast":null,"code":"import { h, defineComponent, ref, toRef, watch, computed, watchEffect } from 'vue';\nimport { rgba } from 'seemly';\nimport { useMemo, useMergedState } from 'vooks';\nimport { on } from 'evtd';\nimport { RemoveIcon, AddIcon } from '../../_internal/icons';\nimport { NInput } from '../../input';\nimport { NBaseIcon } from '../../_internal';\nimport { NxButton } from '../../button';\nimport { useTheme, useFormItem, useLocale, useConfig } from '../../_mixins';\nimport { warnOnce, call, resolveSlot, resolveWrappedSlot } from '../../_utils';\nimport { inputNumberLight } from '../styles';\nimport { parse, validator, format, parseNumber, isWipValue } from './utils';\nimport style from './styles/input-number.cssr';\nimport { useRtl } from '../../_mixins/use-rtl';\nconst HOLDING_CHANGE_THRESHOLD = 800;\nconst HOLDING_CHANGE_INTERVAL = 100;\nexport const inputNumberProps = Object.assign(Object.assign({}, useTheme.props), {\n  autofocus: Boolean,\n  loading: {\n    type: Boolean,\n    default: undefined\n  },\n  placeholder: String,\n  defaultValue: {\n    type: Number,\n    default: null\n  },\n  value: Number,\n  step: {\n    type: [Number, String],\n    default: 1\n  },\n  min: [Number, String],\n  max: [Number, String],\n  size: String,\n  disabled: {\n    type: Boolean,\n    default: undefined\n  },\n  validator: Function,\n  bordered: {\n    type: Boolean,\n    default: undefined\n  },\n  showButton: {\n    type: Boolean,\n    default: true\n  },\n  buttonPlacement: {\n    type: String,\n    default: 'right'\n  },\n  readonly: Boolean,\n  clearable: Boolean,\n  keyboard: {\n    type: Object,\n    default: {}\n  },\n  updateValueOnInput: {\n    type: Boolean,\n    default: true\n  },\n  parse: Function,\n  format: Function,\n  precision: Number,\n  status: String,\n  'onUpdate:value': [Function, Array],\n  onUpdateValue: [Function, Array],\n  onFocus: [Function, Array],\n  onBlur: [Function, Array],\n  onClear: [Function, Array],\n  // deprecated\n  onChange: [Function, Array]\n});\nexport default defineComponent({\n  name: 'InputNumber',\n  props: inputNumberProps,\n\n  setup(props) {\n    if (process.env.NODE_ENV !== 'production') {\n      watchEffect(() => {\n        if (props.onChange !== undefined) {\n          warnOnce('input-number', '`on-change` is deprecated, please use `on-update:value` instead');\n        }\n      });\n    }\n\n    const {\n      mergedBorderedRef,\n      mergedClsPrefixRef,\n      mergedRtlRef\n    } = useConfig(props);\n    const themeRef = useTheme('InputNumber', '-input-number', style, inputNumberLight, props, mergedClsPrefixRef);\n    const {\n      localeRef\n    } = useLocale('InputNumber');\n    const formItem = useFormItem(props);\n    const {\n      mergedSizeRef,\n      mergedDisabledRef,\n      mergedStatusRef\n    } = formItem; // dom ref\n\n    const inputInstRef = ref(null);\n    const minusButtonInstRef = ref(null);\n    const addButtonInstRef = ref(null); // value\n\n    const uncontrolledValueRef = ref(props.defaultValue);\n    const controlledValueRef = toRef(props, 'value');\n    const mergedValueRef = useMergedState(controlledValueRef, uncontrolledValueRef);\n    const displayedValueRef = ref('');\n\n    const getPrecision = value => {\n      const fraction = String(value).split('.')[1];\n      return fraction ? fraction.length : 0;\n    };\n\n    const getMaxPrecision = currentValue => {\n      const precisions = [props.min, props.max, props.step, currentValue].map(value => {\n        if (value === undefined) return 0;\n        return getPrecision(value);\n      });\n      return Math.max(...precisions);\n    };\n\n    const mergedPlaceholderRef = useMemo(() => {\n      const {\n        placeholder\n      } = props;\n      if (placeholder !== undefined) return placeholder;\n      return localeRef.value.placeholder;\n    });\n    const mergedStepRef = useMemo(() => {\n      const parsedNumber = parseNumber(props.step);\n\n      if (parsedNumber !== null) {\n        return parsedNumber === 0 ? 1 : Math.abs(parsedNumber);\n      }\n\n      return 1;\n    });\n    const mergedMinRef = useMemo(() => {\n      const parsedNumber = parseNumber(props.min);\n      if (parsedNumber !== null) return parsedNumber;else return null;\n    });\n    const mergedMaxRef = useMemo(() => {\n      const parsedNumber = parseNumber(props.max);\n      if (parsedNumber !== null) return parsedNumber;else return null;\n    });\n\n    const doUpdateValue = value => {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n\n      if (value === mergedValue) {\n        deriveDisplayedValueFromValue();\n        return;\n      }\n\n      const {\n        'onUpdate:value': _onUpdateValue,\n        onUpdateValue,\n        onChange\n      } = props;\n      const {\n        nTriggerFormInput,\n        nTriggerFormChange\n      } = formItem;\n      if (onChange) call(onChange, value);\n      if (onUpdateValue) call(onUpdateValue, value);\n      if (_onUpdateValue) call(_onUpdateValue, value);\n      uncontrolledValueRef.value = value;\n      nTriggerFormInput();\n      nTriggerFormChange();\n    };\n\n    const deriveValueFromDisplayedValue = ({\n      offset,\n      doUpdateIfValid,\n      fixPrecision,\n      isInputing\n    }) => {\n      const {\n        value: displayedValue\n      } = displayedValueRef;\n\n      if (isInputing && isWipValue(displayedValue)) {\n        return false;\n      }\n\n      const parsedValue = (props.parse || parse)(displayedValue);\n\n      if (parsedValue === null) {\n        if (doUpdateIfValid) doUpdateValue(null);\n        return null;\n      }\n\n      if (validator(parsedValue)) {\n        const currentPrecision = getPrecision(parsedValue);\n        const {\n          precision\n        } = props;\n\n        if (precision !== undefined && precision < currentPrecision && !fixPrecision) {\n          return false;\n        }\n\n        let nextValue = parseFloat((parsedValue + offset).toFixed(precision !== null && precision !== void 0 ? precision : getMaxPrecision(parsedValue)));\n\n        if (validator(nextValue)) {\n          const {\n            value: mergedMax\n          } = mergedMaxRef;\n          const {\n            value: mergedMin\n          } = mergedMinRef;\n\n          if (mergedMax !== null && nextValue > mergedMax) {\n            if (!doUpdateIfValid || isInputing) return false; // if doUpdateIfValid=true, we try to make it a valid value\n\n            nextValue = mergedMax;\n          }\n\n          if (mergedMin !== null && nextValue < mergedMin) {\n            if (!doUpdateIfValid || isInputing) return false; // if doUpdateIfValid=true, we try to make it a valid value\n\n            nextValue = mergedMin;\n          }\n\n          if (props.validator && !props.validator(nextValue)) return false;\n          if (doUpdateIfValid) doUpdateValue(nextValue);\n          return nextValue;\n        }\n      }\n\n      return false;\n    };\n\n    const deriveDisplayedValueFromValue = () => {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n\n      if (validator(mergedValue)) {\n        const {\n          format: formatProp,\n          precision\n        } = props;\n\n        if (formatProp) {\n          displayedValueRef.value = formatProp(mergedValue);\n        } else {\n          if (mergedValue === null || precision === undefined || // precision overflow\n          getPrecision(mergedValue) > precision) {\n            displayedValueRef.value = format(mergedValue, undefined);\n          } else {\n            displayedValueRef.value = format(mergedValue, precision);\n          }\n        }\n      } else {\n        // null can pass the validator check\n        // so mergedValue is a number\n        displayedValueRef.value = String(mergedValue);\n      }\n    };\n\n    deriveDisplayedValueFromValue();\n    const displayedValueInvalidRef = useMemo(() => {\n      const derivedValue = deriveValueFromDisplayedValue({\n        offset: 0,\n        doUpdateIfValid: false,\n        isInputing: false,\n        fixPrecision: false\n      });\n      return derivedValue === false;\n    });\n    const minusableRef = useMemo(() => {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n\n      if (props.validator && mergedValue === null) {\n        return false;\n      }\n\n      const {\n        value: mergedStep\n      } = mergedStepRef;\n      const derivedNextValue = deriveValueFromDisplayedValue({\n        offset: -mergedStep,\n        doUpdateIfValid: false,\n        isInputing: false,\n        fixPrecision: false\n      });\n      return derivedNextValue !== false;\n    });\n    const addableRef = useMemo(() => {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n\n      if (props.validator && mergedValue === null) {\n        return false;\n      }\n\n      const {\n        value: mergedStep\n      } = mergedStepRef;\n      const derivedNextValue = deriveValueFromDisplayedValue({\n        offset: +mergedStep,\n        doUpdateIfValid: false,\n        isInputing: false,\n        fixPrecision: false\n      });\n      return derivedNextValue !== false;\n    });\n\n    function doFocus(e) {\n      const {\n        onFocus\n      } = props;\n      const {\n        nTriggerFormFocus\n      } = formItem;\n      if (onFocus) call(onFocus, e);\n      nTriggerFormFocus();\n    }\n\n    function doBlur(e) {\n      var _a, _b;\n\n      if (e.target === ((_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.wrapperElRef)) {\n        // hit input wrapper\n        // which means not activated\n        return;\n      }\n\n      const value = deriveValueFromDisplayedValue({\n        offset: 0,\n        doUpdateIfValid: true,\n        isInputing: false,\n        fixPrecision: true\n      }); // If valid, update event has been emitted\n      // make sure e.target.value is correct in blur callback\n\n      if (value !== false) {\n        const inputElRef = (_b = inputInstRef.value) === null || _b === void 0 ? void 0 : _b.inputElRef;\n\n        if (inputElRef) {\n          inputElRef.value = String(value || '');\n        } // If value is not changed, the displayed value may be greater than or\n        // less than the current value. The derived value is reformatted so the\n        // value is not changed. We can simply derive a new displayed value\n\n\n        if (mergedValueRef.value === value) {\n          deriveDisplayedValueFromValue();\n        }\n      } else {\n        // If not valid, nothing will be emitted, so derive displayed value from\n        // origin value\n        deriveDisplayedValueFromValue();\n      }\n\n      const {\n        onBlur\n      } = props;\n      const {\n        nTriggerFormBlur\n      } = formItem;\n      if (onBlur) call(onBlur, e);\n      nTriggerFormBlur();\n    }\n\n    function doClear(e) {\n      const {\n        onClear\n      } = props;\n      if (onClear) call(onClear, e);\n    }\n\n    function doAdd() {\n      const {\n        value: addable\n      } = addableRef;\n\n      if (!addable) {\n        clearAddHoldTimeout();\n        return;\n      }\n\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n\n      if (mergedValue === null) {\n        if (!props.validator) {\n          doUpdateValue(createValidValue());\n        }\n      } else {\n        const {\n          value: mergedStep\n        } = mergedStepRef;\n        deriveValueFromDisplayedValue({\n          offset: mergedStep,\n          doUpdateIfValid: true,\n          isInputing: false,\n          fixPrecision: true\n        });\n      }\n    }\n\n    function doMinus() {\n      const {\n        value: minusable\n      } = minusableRef;\n\n      if (!minusable) {\n        clearMinusHoldTimeout();\n        return;\n      }\n\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n\n      if (mergedValue === null) {\n        if (!props.validator) {\n          doUpdateValue(createValidValue());\n        }\n      } else {\n        const {\n          value: mergedStep\n        } = mergedStepRef;\n        deriveValueFromDisplayedValue({\n          offset: -mergedStep,\n          doUpdateIfValid: true,\n          isInputing: false,\n          fixPrecision: true\n        });\n      }\n    }\n\n    const handleFocus = doFocus;\n    const handleBlur = doBlur;\n\n    function createValidValue() {\n      if (props.validator) return null;\n      const {\n        value: mergedMin\n      } = mergedMinRef;\n      const {\n        value: mergedMax\n      } = mergedMaxRef;\n\n      if (mergedMin !== null) {\n        return Math.max(0, mergedMin);\n      } else if (mergedMax !== null) {\n        return Math.min(0, mergedMax);\n      } else {\n        return 0;\n      }\n    }\n\n    function handleClear(e) {\n      doClear(e);\n      doUpdateValue(null);\n    }\n\n    function handleMouseDown(e) {\n      var _a, _b, _c;\n\n      if ((_a = addButtonInstRef.value) === null || _a === void 0 ? void 0 : _a.$el.contains(e.target)) {\n        e.preventDefault();\n      }\n\n      if ((_b = minusButtonInstRef.value) === null || _b === void 0 ? void 0 : _b.$el.contains(e.target)) {\n        e.preventDefault();\n      }\n\n      (_c = inputInstRef.value) === null || _c === void 0 ? void 0 : _c.activate();\n    }\n\n    let minusHoldStateIntervalId = null;\n    let addHoldStateIntervalId = null;\n    let firstMinusMousedownId = null;\n\n    function clearMinusHoldTimeout() {\n      if (firstMinusMousedownId) {\n        window.clearTimeout(firstMinusMousedownId);\n        firstMinusMousedownId = null;\n      }\n\n      if (minusHoldStateIntervalId) {\n        window.clearInterval(minusHoldStateIntervalId);\n        minusHoldStateIntervalId = null;\n      }\n    }\n\n    function clearAddHoldTimeout() {\n      if (firstAddMousedownId) {\n        window.clearTimeout(firstAddMousedownId);\n        firstAddMousedownId = null;\n      }\n\n      if (addHoldStateIntervalId) {\n        window.clearInterval(addHoldStateIntervalId);\n        addHoldStateIntervalId = null;\n      }\n    }\n\n    function handleMinusMousedown() {\n      clearMinusHoldTimeout();\n      firstMinusMousedownId = window.setTimeout(() => {\n        minusHoldStateIntervalId = window.setInterval(() => {\n          doMinus();\n        }, HOLDING_CHANGE_INTERVAL);\n      }, HOLDING_CHANGE_THRESHOLD);\n      on('mouseup', document, clearMinusHoldTimeout, {\n        once: true\n      });\n    }\n\n    let firstAddMousedownId = null;\n\n    function handleAddMousedown() {\n      clearAddHoldTimeout();\n      firstAddMousedownId = window.setTimeout(() => {\n        addHoldStateIntervalId = window.setInterval(() => {\n          doAdd();\n        }, HOLDING_CHANGE_INTERVAL);\n      }, HOLDING_CHANGE_THRESHOLD);\n      on('mouseup', document, clearAddHoldTimeout, {\n        once: true\n      });\n    }\n\n    const handleAddClick = () => {\n      if (addHoldStateIntervalId) return;\n      doAdd();\n    };\n\n    const handleMinusClick = () => {\n      if (minusHoldStateIntervalId) return;\n      doMinus();\n    };\n\n    function handleKeyDown(e) {\n      var _a, _b;\n\n      if (e.key === 'Enter') {\n        if (e.target === ((_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.wrapperElRef)) {\n          // hit input wrapper\n          // which means not activated\n          return;\n        }\n\n        const value = deriveValueFromDisplayedValue({\n          offset: 0,\n          doUpdateIfValid: true,\n          isInputing: false,\n          fixPrecision: true\n        });\n\n        if (value !== false) {\n          (_b = inputInstRef.value) === null || _b === void 0 ? void 0 : _b.deactivate();\n        }\n      } else if (e.key === 'ArrowUp') {\n        if (!addableRef.value) return;\n        if (props.keyboard.ArrowUp === false) return;\n        e.preventDefault();\n        const value = deriveValueFromDisplayedValue({\n          offset: 0,\n          doUpdateIfValid: true,\n          isInputing: false,\n          fixPrecision: true\n        });\n\n        if (value !== false) {\n          doAdd();\n        }\n      } else if (e.key === 'ArrowDown') {\n        if (!minusableRef.value) return;\n        if (props.keyboard.ArrowDown === false) return;\n        e.preventDefault();\n        const value = deriveValueFromDisplayedValue({\n          offset: 0,\n          doUpdateIfValid: true,\n          isInputing: false,\n          fixPrecision: true\n        });\n\n        if (value !== false) {\n          doMinus();\n        }\n      }\n    }\n\n    function handleUpdateDisplayedValue(value) {\n      displayedValueRef.value = value;\n\n      if (props.updateValueOnInput && !props.format && !props.parse && props.precision === undefined) {\n        deriveValueFromDisplayedValue({\n          offset: 0,\n          doUpdateIfValid: true,\n          isInputing: true,\n          fixPrecision: false\n        });\n      }\n    }\n\n    watch(mergedValueRef, () => {\n      deriveDisplayedValueFromValue();\n    });\n    const exposedMethods = {\n      focus: () => {\n        var _a;\n\n        return (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n      },\n      blur: () => {\n        var _a;\n\n        return (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.blur();\n      }\n    };\n    const rtlEnabledRef = useRtl('InputNumber', mergedRtlRef, mergedClsPrefixRef);\n    return Object.assign(Object.assign({}, exposedMethods), {\n      rtlEnabled: rtlEnabledRef,\n      inputInstRef,\n      minusButtonInstRef,\n      addButtonInstRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      mergedBordered: mergedBorderedRef,\n      uncontrolledValue: uncontrolledValueRef,\n      mergedValue: mergedValueRef,\n      mergedPlaceholder: mergedPlaceholderRef,\n      displayedValueInvalid: displayedValueInvalidRef,\n      mergedSize: mergedSizeRef,\n      mergedDisabled: mergedDisabledRef,\n      displayedValue: displayedValueRef,\n      addable: addableRef,\n      minusable: minusableRef,\n      mergedStatus: mergedStatusRef,\n      handleFocus,\n      handleBlur,\n      handleClear,\n      handleMouseDown,\n      handleAddClick,\n      handleMinusClick,\n      handleAddMousedown,\n      handleMinusMousedown,\n      handleKeyDown,\n      handleUpdateDisplayedValue,\n      // theme\n      mergedTheme: themeRef,\n      inputThemeOverrides: {\n        paddingSmall: '0 8px 0 10px',\n        paddingMedium: '0 8px 0 12px',\n        paddingLarge: '0 8px 0 14px'\n      },\n      buttonThemeOverrides: computed(() => {\n        const {\n          self: {\n            iconColorDisabled\n          }\n        } = themeRef.value;\n        const [r, g, b, a] = rgba(iconColorDisabled);\n        return {\n          textColorTextDisabled: `rgb(${r}, ${g}, ${b})`,\n          opacityDisabled: `${a}`\n        };\n      })\n    });\n  },\n\n  render() {\n    const {\n      mergedClsPrefix,\n      $slots\n    } = this;\n\n    const renderMinusButton = () => {\n      return h(NxButton, {\n        text: true,\n        disabled: !this.minusable || this.mergedDisabled || this.readonly,\n        focusable: false,\n        theme: this.mergedTheme.peers.Button,\n        themeOverrides: this.mergedTheme.peerOverrides.Button,\n        builtinThemeOverrides: this.buttonThemeOverrides,\n        onClick: this.handleMinusClick,\n        onMousedown: this.handleMinusMousedown,\n        ref: \"minusButtonInstRef\"\n      }, {\n        icon: () => resolveSlot($slots['minus-icon'], () => [h(NBaseIcon, {\n          clsPrefix: mergedClsPrefix\n        }, {\n          default: () => h(RemoveIcon, null)\n        })])\n      });\n    };\n\n    const renderAddButton = () => {\n      return h(NxButton, {\n        text: true,\n        disabled: !this.addable || this.mergedDisabled || this.readonly,\n        focusable: false,\n        theme: this.mergedTheme.peers.Button,\n        themeOverrides: this.mergedTheme.peerOverrides.Button,\n        builtinThemeOverrides: this.buttonThemeOverrides,\n        onClick: this.handleAddClick,\n        onMousedown: this.handleAddMousedown,\n        ref: \"addButtonInstRef\"\n      }, {\n        icon: () => resolveSlot($slots['add-icon'], () => [h(NBaseIcon, {\n          clsPrefix: mergedClsPrefix\n        }, {\n          default: () => h(AddIcon, null)\n        })])\n      });\n    };\n\n    return h(\"div\", {\n      class: [`${mergedClsPrefix}-input-number`, this.rtlEnabled && `${mergedClsPrefix}-input-number--rtl`]\n    }, h(NInput, {\n      ref: \"inputInstRef\",\n      autofocus: this.autofocus,\n      status: this.mergedStatus,\n      bordered: this.mergedBordered,\n      loading: this.loading,\n      value: this.displayedValue,\n      onUpdateValue: this.handleUpdateDisplayedValue,\n      theme: this.mergedTheme.peers.Input,\n      themeOverrides: this.mergedTheme.peerOverrides.Input,\n      builtinThemeOverrides: this.inputThemeOverrides,\n      size: this.mergedSize,\n      placeholder: this.mergedPlaceholder,\n      disabled: this.mergedDisabled,\n      readonly: this.readonly,\n      textDecoration: this.displayedValueInvalid ? 'line-through' : undefined,\n      onFocus: this.handleFocus,\n      onBlur: this.handleBlur,\n      onKeydown: this.handleKeyDown,\n      onMousedown: this.handleMouseDown,\n      onClear: this.handleClear,\n      clearable: this.clearable,\n      internalLoadingBeforeSuffix: true\n    }, {\n      prefix: () => {\n        var _a;\n\n        return this.showButton && this.buttonPlacement === 'both' ? [renderMinusButton(), resolveWrappedSlot($slots.prefix, children => {\n          if (children) {\n            return h(\"span\", {\n              class: `${mergedClsPrefix}-input-number-prefix`\n            }, children);\n          }\n\n          return null;\n        })] : (_a = $slots.prefix) === null || _a === void 0 ? void 0 : _a.call($slots);\n      },\n      suffix: () => {\n        var _a;\n\n        return this.showButton ? [resolveWrappedSlot($slots.suffix, children => {\n          if (children) {\n            return h(\"span\", {\n              class: `${mergedClsPrefix}-input-number-suffix`\n            }, children);\n          }\n\n          return null;\n        }), this.buttonPlacement === 'right' ? renderMinusButton() : null, renderAddButton()] : (_a = $slots.suffix) === null || _a === void 0 ? void 0 : _a.call($slots);\n      }\n    }));\n  }\n\n});","map":{"version":3,"names":["h","defineComponent","ref","toRef","watch","computed","watchEffect","rgba","useMemo","useMergedState","on","RemoveIcon","AddIcon","NInput","NBaseIcon","NxButton","useTheme","useFormItem","useLocale","useConfig","warnOnce","call","resolveSlot","resolveWrappedSlot","inputNumberLight","parse","validator","format","parseNumber","isWipValue","style","useRtl","HOLDING_CHANGE_THRESHOLD","HOLDING_CHANGE_INTERVAL","inputNumberProps","Object","assign","props","autofocus","Boolean","loading","type","default","undefined","placeholder","String","defaultValue","Number","value","step","min","max","size","disabled","Function","bordered","showButton","buttonPlacement","readonly","clearable","keyboard","updateValueOnInput","precision","status","Array","onUpdateValue","onFocus","onBlur","onClear","onChange","name","setup","process","env","NODE_ENV","mergedBorderedRef","mergedClsPrefixRef","mergedRtlRef","themeRef","localeRef","formItem","mergedSizeRef","mergedDisabledRef","mergedStatusRef","inputInstRef","minusButtonInstRef","addButtonInstRef","uncontrolledValueRef","controlledValueRef","mergedValueRef","displayedValueRef","getPrecision","fraction","split","length","getMaxPrecision","currentValue","precisions","map","Math","mergedPlaceholderRef","mergedStepRef","parsedNumber","abs","mergedMinRef","mergedMaxRef","doUpdateValue","mergedValue","deriveDisplayedValueFromValue","_onUpdateValue","nTriggerFormInput","nTriggerFormChange","deriveValueFromDisplayedValue","offset","doUpdateIfValid","fixPrecision","isInputing","displayedValue","parsedValue","currentPrecision","nextValue","parseFloat","toFixed","mergedMax","mergedMin","formatProp","displayedValueInvalidRef","derivedValue","minusableRef","mergedStep","derivedNextValue","addableRef","doFocus","e","nTriggerFormFocus","doBlur","_a","_b","target","wrapperElRef","inputElRef","nTriggerFormBlur","doClear","doAdd","addable","clearAddHoldTimeout","createValidValue","doMinus","minusable","clearMinusHoldTimeout","handleFocus","handleBlur","handleClear","handleMouseDown","_c","$el","contains","preventDefault","activate","minusHoldStateIntervalId","addHoldStateIntervalId","firstMinusMousedownId","window","clearTimeout","clearInterval","firstAddMousedownId","handleMinusMousedown","setTimeout","setInterval","document","once","handleAddMousedown","handleAddClick","handleMinusClick","handleKeyDown","key","deactivate","ArrowUp","ArrowDown","handleUpdateDisplayedValue","exposedMethods","focus","blur","rtlEnabledRef","rtlEnabled","mergedClsPrefix","mergedBordered","uncontrolledValue","mergedPlaceholder","displayedValueInvalid","mergedSize","mergedDisabled","mergedStatus","mergedTheme","inputThemeOverrides","paddingSmall","paddingMedium","paddingLarge","buttonThemeOverrides","self","iconColorDisabled","r","g","b","a","textColorTextDisabled","opacityDisabled","render","$slots","renderMinusButton","text","focusable","theme","peers","Button","themeOverrides","peerOverrides","builtinThemeOverrides","onClick","onMousedown","icon","clsPrefix","renderAddButton","class","Input","textDecoration","onKeydown","internalLoadingBeforeSuffix","prefix","children","suffix"],"sources":["D:/VCode/SHC社区管理系统/shc_community_manager_system/node_modules/naive-ui/es/input-number/src/InputNumber.js"],"sourcesContent":["import { h, defineComponent, ref, toRef, watch, computed, watchEffect } from 'vue';\nimport { rgba } from 'seemly';\nimport { useMemo, useMergedState } from 'vooks';\nimport { on } from 'evtd';\nimport { RemoveIcon, AddIcon } from '../../_internal/icons';\nimport { NInput } from '../../input';\nimport { NBaseIcon } from '../../_internal';\nimport { NxButton } from '../../button';\nimport { useTheme, useFormItem, useLocale, useConfig } from '../../_mixins';\nimport { warnOnce, call, resolveSlot, resolveWrappedSlot } from '../../_utils';\nimport { inputNumberLight } from '../styles';\nimport { parse, validator, format, parseNumber, isWipValue } from './utils';\nimport style from './styles/input-number.cssr';\nimport { useRtl } from '../../_mixins/use-rtl';\nconst HOLDING_CHANGE_THRESHOLD = 800;\nconst HOLDING_CHANGE_INTERVAL = 100;\nexport const inputNumberProps = Object.assign(Object.assign({}, useTheme.props), { autofocus: Boolean, loading: {\n        type: Boolean,\n        default: undefined\n    }, placeholder: String, defaultValue: {\n        type: Number,\n        default: null\n    }, value: Number, step: {\n        type: [Number, String],\n        default: 1\n    }, min: [Number, String], max: [Number, String], size: String, disabled: {\n        type: Boolean,\n        default: undefined\n    }, validator: Function, bordered: {\n        type: Boolean,\n        default: undefined\n    }, showButton: {\n        type: Boolean,\n        default: true\n    }, buttonPlacement: {\n        type: String,\n        default: 'right'\n    }, readonly: Boolean, clearable: Boolean, keyboard: {\n        type: Object,\n        default: {}\n    }, updateValueOnInput: {\n        type: Boolean,\n        default: true\n    }, parse: Function, format: Function, precision: Number, status: String, 'onUpdate:value': [Function, Array], onUpdateValue: [Function, Array], onFocus: [Function, Array], onBlur: [Function, Array], onClear: [Function, Array], \n    // deprecated\n    onChange: [Function, Array] });\nexport default defineComponent({\n    name: 'InputNumber',\n    props: inputNumberProps,\n    setup(props) {\n        if (process.env.NODE_ENV !== 'production') {\n            watchEffect(() => {\n                if (props.onChange !== undefined) {\n                    warnOnce('input-number', '`on-change` is deprecated, please use `on-update:value` instead');\n                }\n            });\n        }\n        const { mergedBorderedRef, mergedClsPrefixRef, mergedRtlRef } = useConfig(props);\n        const themeRef = useTheme('InputNumber', '-input-number', style, inputNumberLight, props, mergedClsPrefixRef);\n        const { localeRef } = useLocale('InputNumber');\n        const formItem = useFormItem(props);\n        const { mergedSizeRef, mergedDisabledRef, mergedStatusRef } = formItem;\n        // dom ref\n        const inputInstRef = ref(null);\n        const minusButtonInstRef = ref(null);\n        const addButtonInstRef = ref(null);\n        // value\n        const uncontrolledValueRef = ref(props.defaultValue);\n        const controlledValueRef = toRef(props, 'value');\n        const mergedValueRef = useMergedState(controlledValueRef, uncontrolledValueRef);\n        const displayedValueRef = ref('');\n        const getPrecision = (value) => {\n            const fraction = String(value).split('.')[1];\n            return fraction ? fraction.length : 0;\n        };\n        const getMaxPrecision = (currentValue) => {\n            const precisions = [props.min, props.max, props.step, currentValue].map((value) => {\n                if (value === undefined)\n                    return 0;\n                return getPrecision(value);\n            });\n            return Math.max(...precisions);\n        };\n        const mergedPlaceholderRef = useMemo(() => {\n            const { placeholder } = props;\n            if (placeholder !== undefined)\n                return placeholder;\n            return localeRef.value.placeholder;\n        });\n        const mergedStepRef = useMemo(() => {\n            const parsedNumber = parseNumber(props.step);\n            if (parsedNumber !== null) {\n                return parsedNumber === 0 ? 1 : Math.abs(parsedNumber);\n            }\n            return 1;\n        });\n        const mergedMinRef = useMemo(() => {\n            const parsedNumber = parseNumber(props.min);\n            if (parsedNumber !== null)\n                return parsedNumber;\n            else\n                return null;\n        });\n        const mergedMaxRef = useMemo(() => {\n            const parsedNumber = parseNumber(props.max);\n            if (parsedNumber !== null)\n                return parsedNumber;\n            else\n                return null;\n        });\n        const doUpdateValue = (value) => {\n            const { value: mergedValue } = mergedValueRef;\n            if (value === mergedValue) {\n                deriveDisplayedValueFromValue();\n                return;\n            }\n            const { 'onUpdate:value': _onUpdateValue, onUpdateValue, onChange } = props;\n            const { nTriggerFormInput, nTriggerFormChange } = formItem;\n            if (onChange)\n                call(onChange, value);\n            if (onUpdateValue)\n                call(onUpdateValue, value);\n            if (_onUpdateValue)\n                call(_onUpdateValue, value);\n            uncontrolledValueRef.value = value;\n            nTriggerFormInput();\n            nTriggerFormChange();\n        };\n        const deriveValueFromDisplayedValue = ({ offset, doUpdateIfValid, fixPrecision, isInputing }) => {\n            const { value: displayedValue } = displayedValueRef;\n            if (isInputing && isWipValue(displayedValue)) {\n                return false;\n            }\n            const parsedValue = (props.parse || parse)(displayedValue);\n            if (parsedValue === null) {\n                if (doUpdateIfValid)\n                    doUpdateValue(null);\n                return null;\n            }\n            if (validator(parsedValue)) {\n                const currentPrecision = getPrecision(parsedValue);\n                const { precision } = props;\n                if (precision !== undefined &&\n                    precision < currentPrecision &&\n                    !fixPrecision) {\n                    return false;\n                }\n                let nextValue = parseFloat((parsedValue + offset).toFixed(precision !== null && precision !== void 0 ? precision : getMaxPrecision(parsedValue)));\n                if (validator(nextValue)) {\n                    const { value: mergedMax } = mergedMaxRef;\n                    const { value: mergedMin } = mergedMinRef;\n                    if (mergedMax !== null && nextValue > mergedMax) {\n                        if (!doUpdateIfValid || isInputing)\n                            return false;\n                        // if doUpdateIfValid=true, we try to make it a valid value\n                        nextValue = mergedMax;\n                    }\n                    if (mergedMin !== null && nextValue < mergedMin) {\n                        if (!doUpdateIfValid || isInputing)\n                            return false;\n                        // if doUpdateIfValid=true, we try to make it a valid value\n                        nextValue = mergedMin;\n                    }\n                    if (props.validator && !props.validator(nextValue))\n                        return false;\n                    if (doUpdateIfValid)\n                        doUpdateValue(nextValue);\n                    return nextValue;\n                }\n            }\n            return false;\n        };\n        const deriveDisplayedValueFromValue = () => {\n            const { value: mergedValue } = mergedValueRef;\n            if (validator(mergedValue)) {\n                const { format: formatProp, precision } = props;\n                if (formatProp) {\n                    displayedValueRef.value = formatProp(mergedValue);\n                }\n                else {\n                    if (mergedValue === null ||\n                        precision === undefined ||\n                        // precision overflow\n                        getPrecision(mergedValue) > precision) {\n                        displayedValueRef.value = format(mergedValue, undefined);\n                    }\n                    else {\n                        displayedValueRef.value = format(mergedValue, precision);\n                    }\n                }\n            }\n            else {\n                // null can pass the validator check\n                // so mergedValue is a number\n                displayedValueRef.value = String(mergedValue);\n            }\n        };\n        deriveDisplayedValueFromValue();\n        const displayedValueInvalidRef = useMemo(() => {\n            const derivedValue = deriveValueFromDisplayedValue({\n                offset: 0,\n                doUpdateIfValid: false,\n                isInputing: false,\n                fixPrecision: false\n            });\n            return derivedValue === false;\n        });\n        const minusableRef = useMemo(() => {\n            const { value: mergedValue } = mergedValueRef;\n            if (props.validator && mergedValue === null) {\n                return false;\n            }\n            const { value: mergedStep } = mergedStepRef;\n            const derivedNextValue = deriveValueFromDisplayedValue({\n                offset: -mergedStep,\n                doUpdateIfValid: false,\n                isInputing: false,\n                fixPrecision: false\n            });\n            return derivedNextValue !== false;\n        });\n        const addableRef = useMemo(() => {\n            const { value: mergedValue } = mergedValueRef;\n            if (props.validator && mergedValue === null) {\n                return false;\n            }\n            const { value: mergedStep } = mergedStepRef;\n            const derivedNextValue = deriveValueFromDisplayedValue({\n                offset: +mergedStep,\n                doUpdateIfValid: false,\n                isInputing: false,\n                fixPrecision: false\n            });\n            return derivedNextValue !== false;\n        });\n        function doFocus(e) {\n            const { onFocus } = props;\n            const { nTriggerFormFocus } = formItem;\n            if (onFocus)\n                call(onFocus, e);\n            nTriggerFormFocus();\n        }\n        function doBlur(e) {\n            var _a, _b;\n            if (e.target === ((_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.wrapperElRef)) {\n                // hit input wrapper\n                // which means not activated\n                return;\n            }\n            const value = deriveValueFromDisplayedValue({\n                offset: 0,\n                doUpdateIfValid: true,\n                isInputing: false,\n                fixPrecision: true\n            });\n            // If valid, update event has been emitted\n            // make sure e.target.value is correct in blur callback\n            if (value !== false) {\n                const inputElRef = (_b = inputInstRef.value) === null || _b === void 0 ? void 0 : _b.inputElRef;\n                if (inputElRef) {\n                    inputElRef.value = String(value || '');\n                }\n                // If value is not changed, the displayed value may be greater than or\n                // less than the current value. The derived value is reformatted so the\n                // value is not changed. We can simply derive a new displayed value\n                if (mergedValueRef.value === value) {\n                    deriveDisplayedValueFromValue();\n                }\n            }\n            else {\n                // If not valid, nothing will be emitted, so derive displayed value from\n                // origin value\n                deriveDisplayedValueFromValue();\n            }\n            const { onBlur } = props;\n            const { nTriggerFormBlur } = formItem;\n            if (onBlur)\n                call(onBlur, e);\n            nTriggerFormBlur();\n        }\n        function doClear(e) {\n            const { onClear } = props;\n            if (onClear)\n                call(onClear, e);\n        }\n        function doAdd() {\n            const { value: addable } = addableRef;\n            if (!addable) {\n                clearAddHoldTimeout();\n                return;\n            }\n            const { value: mergedValue } = mergedValueRef;\n            if (mergedValue === null) {\n                if (!props.validator) {\n                    doUpdateValue(createValidValue());\n                }\n            }\n            else {\n                const { value: mergedStep } = mergedStepRef;\n                deriveValueFromDisplayedValue({\n                    offset: mergedStep,\n                    doUpdateIfValid: true,\n                    isInputing: false,\n                    fixPrecision: true\n                });\n            }\n        }\n        function doMinus() {\n            const { value: minusable } = minusableRef;\n            if (!minusable) {\n                clearMinusHoldTimeout();\n                return;\n            }\n            const { value: mergedValue } = mergedValueRef;\n            if (mergedValue === null) {\n                if (!props.validator) {\n                    doUpdateValue(createValidValue());\n                }\n            }\n            else {\n                const { value: mergedStep } = mergedStepRef;\n                deriveValueFromDisplayedValue({\n                    offset: -mergedStep,\n                    doUpdateIfValid: true,\n                    isInputing: false,\n                    fixPrecision: true\n                });\n            }\n        }\n        const handleFocus = doFocus;\n        const handleBlur = doBlur;\n        function createValidValue() {\n            if (props.validator)\n                return null;\n            const { value: mergedMin } = mergedMinRef;\n            const { value: mergedMax } = mergedMaxRef;\n            if (mergedMin !== null) {\n                return Math.max(0, mergedMin);\n            }\n            else if (mergedMax !== null) {\n                return Math.min(0, mergedMax);\n            }\n            else {\n                return 0;\n            }\n        }\n        function handleClear(e) {\n            doClear(e);\n            doUpdateValue(null);\n        }\n        function handleMouseDown(e) {\n            var _a, _b, _c;\n            if ((_a = addButtonInstRef.value) === null || _a === void 0 ? void 0 : _a.$el.contains(e.target)) {\n                e.preventDefault();\n            }\n            if ((_b = minusButtonInstRef.value) === null || _b === void 0 ? void 0 : _b.$el.contains(e.target)) {\n                e.preventDefault();\n            }\n            (_c = inputInstRef.value) === null || _c === void 0 ? void 0 : _c.activate();\n        }\n        let minusHoldStateIntervalId = null;\n        let addHoldStateIntervalId = null;\n        let firstMinusMousedownId = null;\n        function clearMinusHoldTimeout() {\n            if (firstMinusMousedownId) {\n                window.clearTimeout(firstMinusMousedownId);\n                firstMinusMousedownId = null;\n            }\n            if (minusHoldStateIntervalId) {\n                window.clearInterval(minusHoldStateIntervalId);\n                minusHoldStateIntervalId = null;\n            }\n        }\n        function clearAddHoldTimeout() {\n            if (firstAddMousedownId) {\n                window.clearTimeout(firstAddMousedownId);\n                firstAddMousedownId = null;\n            }\n            if (addHoldStateIntervalId) {\n                window.clearInterval(addHoldStateIntervalId);\n                addHoldStateIntervalId = null;\n            }\n        }\n        function handleMinusMousedown() {\n            clearMinusHoldTimeout();\n            firstMinusMousedownId = window.setTimeout(() => {\n                minusHoldStateIntervalId = window.setInterval(() => {\n                    doMinus();\n                }, HOLDING_CHANGE_INTERVAL);\n            }, HOLDING_CHANGE_THRESHOLD);\n            on('mouseup', document, clearMinusHoldTimeout, {\n                once: true\n            });\n        }\n        let firstAddMousedownId = null;\n        function handleAddMousedown() {\n            clearAddHoldTimeout();\n            firstAddMousedownId = window.setTimeout(() => {\n                addHoldStateIntervalId = window.setInterval(() => {\n                    doAdd();\n                }, HOLDING_CHANGE_INTERVAL);\n            }, HOLDING_CHANGE_THRESHOLD);\n            on('mouseup', document, clearAddHoldTimeout, {\n                once: true\n            });\n        }\n        const handleAddClick = () => {\n            if (addHoldStateIntervalId)\n                return;\n            doAdd();\n        };\n        const handleMinusClick = () => {\n            if (minusHoldStateIntervalId)\n                return;\n            doMinus();\n        };\n        function handleKeyDown(e) {\n            var _a, _b;\n            if (e.key === 'Enter') {\n                if (e.target === ((_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.wrapperElRef)) {\n                    // hit input wrapper\n                    // which means not activated\n                    return;\n                }\n                const value = deriveValueFromDisplayedValue({\n                    offset: 0,\n                    doUpdateIfValid: true,\n                    isInputing: false,\n                    fixPrecision: true\n                });\n                if (value !== false) {\n                    (_b = inputInstRef.value) === null || _b === void 0 ? void 0 : _b.deactivate();\n                }\n            }\n            else if (e.key === 'ArrowUp') {\n                if (!addableRef.value)\n                    return;\n                if (props.keyboard.ArrowUp === false)\n                    return;\n                e.preventDefault();\n                const value = deriveValueFromDisplayedValue({\n                    offset: 0,\n                    doUpdateIfValid: true,\n                    isInputing: false,\n                    fixPrecision: true\n                });\n                if (value !== false) {\n                    doAdd();\n                }\n            }\n            else if (e.key === 'ArrowDown') {\n                if (!minusableRef.value)\n                    return;\n                if (props.keyboard.ArrowDown === false)\n                    return;\n                e.preventDefault();\n                const value = deriveValueFromDisplayedValue({\n                    offset: 0,\n                    doUpdateIfValid: true,\n                    isInputing: false,\n                    fixPrecision: true\n                });\n                if (value !== false) {\n                    doMinus();\n                }\n            }\n        }\n        function handleUpdateDisplayedValue(value) {\n            displayedValueRef.value = value;\n            if (props.updateValueOnInput &&\n                !props.format &&\n                !props.parse &&\n                props.precision === undefined) {\n                deriveValueFromDisplayedValue({\n                    offset: 0,\n                    doUpdateIfValid: true,\n                    isInputing: true,\n                    fixPrecision: false\n                });\n            }\n        }\n        watch(mergedValueRef, () => {\n            deriveDisplayedValueFromValue();\n        });\n        const exposedMethods = {\n            focus: () => { var _a; return (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.focus(); },\n            blur: () => { var _a; return (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.blur(); }\n        };\n        const rtlEnabledRef = useRtl('InputNumber', mergedRtlRef, mergedClsPrefixRef);\n        return Object.assign(Object.assign({}, exposedMethods), { rtlEnabled: rtlEnabledRef, inputInstRef,\n            minusButtonInstRef,\n            addButtonInstRef, mergedClsPrefix: mergedClsPrefixRef, mergedBordered: mergedBorderedRef, uncontrolledValue: uncontrolledValueRef, mergedValue: mergedValueRef, mergedPlaceholder: mergedPlaceholderRef, displayedValueInvalid: displayedValueInvalidRef, mergedSize: mergedSizeRef, mergedDisabled: mergedDisabledRef, displayedValue: displayedValueRef, addable: addableRef, minusable: minusableRef, mergedStatus: mergedStatusRef, handleFocus,\n            handleBlur,\n            handleClear,\n            handleMouseDown,\n            handleAddClick,\n            handleMinusClick,\n            handleAddMousedown,\n            handleMinusMousedown,\n            handleKeyDown,\n            handleUpdateDisplayedValue, \n            // theme\n            mergedTheme: themeRef, inputThemeOverrides: {\n                paddingSmall: '0 8px 0 10px',\n                paddingMedium: '0 8px 0 12px',\n                paddingLarge: '0 8px 0 14px'\n            }, buttonThemeOverrides: computed(() => {\n                const { self: { iconColorDisabled } } = themeRef.value;\n                const [r, g, b, a] = rgba(iconColorDisabled);\n                return {\n                    textColorTextDisabled: `rgb(${r}, ${g}, ${b})`,\n                    opacityDisabled: `${a}`\n                };\n            }) });\n    },\n    render() {\n        const { mergedClsPrefix, $slots } = this;\n        const renderMinusButton = () => {\n            return (h(NxButton, { text: true, disabled: !this.minusable || this.mergedDisabled || this.readonly, focusable: false, theme: this.mergedTheme.peers.Button, themeOverrides: this.mergedTheme.peerOverrides.Button, builtinThemeOverrides: this.buttonThemeOverrides, onClick: this.handleMinusClick, onMousedown: this.handleMinusMousedown, ref: \"minusButtonInstRef\" }, {\n                icon: () => resolveSlot($slots['minus-icon'], () => [\n                    h(NBaseIcon, { clsPrefix: mergedClsPrefix }, {\n                        default: () => h(RemoveIcon, null)\n                    })\n                ])\n            }));\n        };\n        const renderAddButton = () => {\n            return (h(NxButton, { text: true, disabled: !this.addable || this.mergedDisabled || this.readonly, focusable: false, theme: this.mergedTheme.peers.Button, themeOverrides: this.mergedTheme.peerOverrides.Button, builtinThemeOverrides: this.buttonThemeOverrides, onClick: this.handleAddClick, onMousedown: this.handleAddMousedown, ref: \"addButtonInstRef\" }, {\n                icon: () => resolveSlot($slots['add-icon'], () => [\n                    h(NBaseIcon, { clsPrefix: mergedClsPrefix }, {\n                        default: () => h(AddIcon, null)\n                    })\n                ])\n            }));\n        };\n        return (h(\"div\", { class: [\n                `${mergedClsPrefix}-input-number`,\n                this.rtlEnabled && `${mergedClsPrefix}-input-number--rtl`\n            ] },\n            h(NInput, { ref: \"inputInstRef\", autofocus: this.autofocus, status: this.mergedStatus, bordered: this.mergedBordered, loading: this.loading, value: this.displayedValue, onUpdateValue: this.handleUpdateDisplayedValue, theme: this.mergedTheme.peers.Input, themeOverrides: this.mergedTheme.peerOverrides.Input, builtinThemeOverrides: this.inputThemeOverrides, size: this.mergedSize, placeholder: this.mergedPlaceholder, disabled: this.mergedDisabled, readonly: this.readonly, textDecoration: this.displayedValueInvalid ? 'line-through' : undefined, onFocus: this.handleFocus, onBlur: this.handleBlur, onKeydown: this.handleKeyDown, onMousedown: this.handleMouseDown, onClear: this.handleClear, clearable: this.clearable, internalLoadingBeforeSuffix: true }, {\n                prefix: () => {\n                    var _a;\n                    return this.showButton && this.buttonPlacement === 'both'\n                        ? [\n                            renderMinusButton(),\n                            resolveWrappedSlot($slots.prefix, (children) => {\n                                if (children) {\n                                    return (h(\"span\", { class: `${mergedClsPrefix}-input-number-prefix` }, children));\n                                }\n                                return null;\n                            })\n                        ]\n                        : (_a = $slots.prefix) === null || _a === void 0 ? void 0 : _a.call($slots);\n                },\n                suffix: () => {\n                    var _a;\n                    return this.showButton\n                        ? [\n                            resolveWrappedSlot($slots.suffix, (children) => {\n                                if (children) {\n                                    return (h(\"span\", { class: `${mergedClsPrefix}-input-number-suffix` }, children));\n                                }\n                                return null;\n                            }),\n                            this.buttonPlacement === 'right'\n                                ? renderMinusButton()\n                                : null,\n                            renderAddButton()\n                        ]\n                        : (_a = $slots.suffix) === null || _a === void 0 ? void 0 : _a.call($slots);\n                }\n            })));\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}