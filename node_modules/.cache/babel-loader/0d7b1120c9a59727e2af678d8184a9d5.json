{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport { Fragment, createTextVNode, Comment } from 'vue';\nexport function getSlot(scope, slots, slotName = 'default') {\n  const slot = slots[slotName];\n\n  if (slot === undefined) {\n    throw new Error(`[vueuc/${scope}]: slot[${slotName}] is empty.`);\n  }\n\n  return slot();\n} // o(n) flatten\n\nexport function flatten(vNodes, filterCommentNode = true, result = []) {\n  vNodes.forEach(vNode => {\n    if (vNode === null) return;\n\n    if (typeof vNode !== 'object') {\n      if (typeof vNode === 'string' || typeof vNode === 'number') {\n        result.push(createTextVNode(String(vNode)));\n      }\n\n      return;\n    }\n\n    if (Array.isArray(vNode)) {\n      flatten(vNode, filterCommentNode, result);\n      return;\n    }\n\n    if (vNode.type === Fragment) {\n      if (vNode.children === null) return;\n\n      if (Array.isArray(vNode.children)) {\n        flatten(vNode.children, filterCommentNode, result);\n      } // rawSlot\n\n    } else if (vNode.type !== Comment) {\n      result.push(vNode);\n    }\n  });\n  return result;\n}\nexport function getFirstVNode(scope, slots, slotName = 'default') {\n  const slot = slots[slotName];\n\n  if (slot === undefined) {\n    throw new Error(`[vueuc/${scope}]: slot[${slotName}] is empty.`);\n  }\n\n  const content = flatten(slot()); // vue will normalize the slot, so slot must be an array\n\n  if (content.length === 1) {\n    return content[0];\n  } else {\n    throw new Error(`[vueuc/${scope}]: slot[${slotName}] should have exactly one child.`);\n  }\n}","map":{"version":3,"names":["Fragment","createTextVNode","Comment","getSlot","scope","slots","slotName","slot","undefined","Error","flatten","vNodes","filterCommentNode","result","forEach","vNode","push","String","Array","isArray","type","children","getFirstVNode","content","length"],"sources":["D:/VCode/SHC社区管理系统/shc_community_manager_system/node_modules/vueuc/es/shared/v-node.js"],"sourcesContent":["import { Fragment, createTextVNode, Comment } from 'vue';\nexport function getSlot(scope, slots, slotName = 'default') {\n    const slot = slots[slotName];\n    if (slot === undefined) {\n        throw new Error(`[vueuc/${scope}]: slot[${slotName}] is empty.`);\n    }\n    return slot();\n}\n// o(n) flatten\nexport function flatten(vNodes, filterCommentNode = true, result = []) {\n    vNodes.forEach((vNode) => {\n        if (vNode === null)\n            return;\n        if (typeof vNode !== 'object') {\n            if (typeof vNode === 'string' || typeof vNode === 'number') {\n                result.push(createTextVNode(String(vNode)));\n            }\n            return;\n        }\n        if (Array.isArray(vNode)) {\n            flatten(vNode, filterCommentNode, result);\n            return;\n        }\n        if (vNode.type === Fragment) {\n            if (vNode.children === null)\n                return;\n            if (Array.isArray(vNode.children)) {\n                flatten(vNode.children, filterCommentNode, result);\n            }\n            // rawSlot\n        }\n        else if (vNode.type !== Comment) {\n            result.push(vNode);\n        }\n    });\n    return result;\n}\nexport function getFirstVNode(scope, slots, slotName = 'default') {\n    const slot = slots[slotName];\n    if (slot === undefined) {\n        throw new Error(`[vueuc/${scope}]: slot[${slotName}] is empty.`);\n    }\n    const content = flatten(slot());\n    // vue will normalize the slot, so slot must be an array\n    if (content.length === 1) {\n        return content[0];\n    }\n    else {\n        throw new Error(`[vueuc/${scope}]: slot[${slotName}] should have exactly one child.`);\n    }\n}\n"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,eAAnB,EAAoCC,OAApC,QAAmD,KAAnD;AACA,OAAO,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,KAAxB,EAA+BC,QAAQ,GAAG,SAA1C,EAAqD;EACxD,MAAMC,IAAI,GAAGF,KAAK,CAACC,QAAD,CAAlB;;EACA,IAAIC,IAAI,KAAKC,SAAb,EAAwB;IACpB,MAAM,IAAIC,KAAJ,CAAW,UAASL,KAAM,WAAUE,QAAS,aAA7C,CAAN;EACH;;EACD,OAAOC,IAAI,EAAX;AACH,C,CACD;;AACA,OAAO,SAASG,OAAT,CAAiBC,MAAjB,EAAyBC,iBAAiB,GAAG,IAA7C,EAAmDC,MAAM,GAAG,EAA5D,EAAgE;EACnEF,MAAM,CAACG,OAAP,CAAgBC,KAAD,IAAW;IACtB,IAAIA,KAAK,KAAK,IAAd,EACI;;IACJ,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;MAC3B,IAAI,OAAOA,KAAP,KAAiB,QAAjB,IAA6B,OAAOA,KAAP,KAAiB,QAAlD,EAA4D;QACxDF,MAAM,CAACG,IAAP,CAAYf,eAAe,CAACgB,MAAM,CAACF,KAAD,CAAP,CAA3B;MACH;;MACD;IACH;;IACD,IAAIG,KAAK,CAACC,OAAN,CAAcJ,KAAd,CAAJ,EAA0B;MACtBL,OAAO,CAACK,KAAD,EAAQH,iBAAR,EAA2BC,MAA3B,CAAP;MACA;IACH;;IACD,IAAIE,KAAK,CAACK,IAAN,KAAepB,QAAnB,EAA6B;MACzB,IAAIe,KAAK,CAACM,QAAN,KAAmB,IAAvB,EACI;;MACJ,IAAIH,KAAK,CAACC,OAAN,CAAcJ,KAAK,CAACM,QAApB,CAAJ,EAAmC;QAC/BX,OAAO,CAACK,KAAK,CAACM,QAAP,EAAiBT,iBAAjB,EAAoCC,MAApC,CAAP;MACH,CALwB,CAMzB;;IACH,CAPD,MAQK,IAAIE,KAAK,CAACK,IAAN,KAAelB,OAAnB,EAA4B;MAC7BW,MAAM,CAACG,IAAP,CAAYD,KAAZ;IACH;EACJ,CAxBD;EAyBA,OAAOF,MAAP;AACH;AACD,OAAO,SAASS,aAAT,CAAuBlB,KAAvB,EAA8BC,KAA9B,EAAqCC,QAAQ,GAAG,SAAhD,EAA2D;EAC9D,MAAMC,IAAI,GAAGF,KAAK,CAACC,QAAD,CAAlB;;EACA,IAAIC,IAAI,KAAKC,SAAb,EAAwB;IACpB,MAAM,IAAIC,KAAJ,CAAW,UAASL,KAAM,WAAUE,QAAS,aAA7C,CAAN;EACH;;EACD,MAAMiB,OAAO,GAAGb,OAAO,CAACH,IAAI,EAAL,CAAvB,CAL8D,CAM9D;;EACA,IAAIgB,OAAO,CAACC,MAAR,KAAmB,CAAvB,EAA0B;IACtB,OAAOD,OAAO,CAAC,CAAD,CAAd;EACH,CAFD,MAGK;IACD,MAAM,IAAId,KAAJ,CAAW,UAASL,KAAM,WAAUE,QAAS,kCAA7C,CAAN;EACH;AACJ"},"metadata":{},"sourceType":"module"}