{"ast":null,"code":"import { h, defineComponent, computed, inject, ref, toRef, watchEffect } from 'vue';\nimport { useMergedState, useMemo } from 'vooks';\nimport { createId } from 'seemly';\nimport { on } from 'evtd';\nimport { useConfig, useFormItem, useTheme, useThemeClass } from '../../_mixins';\nimport { NIconSwitchTransition } from '../../_internal';\nimport { call, createKey, warnOnce } from '../../_utils';\nimport { checkboxLight } from '../styles';\nimport CheckMark from './CheckMark';\nimport LineMark from './LineMark';\nimport { checkboxGroupInjectionKey } from './CheckboxGroup';\nimport style from './styles/index.cssr';\nimport { useRtl } from '../../_mixins/use-rtl';\nexport const checkboxProps = Object.assign(Object.assign({}, useTheme.props), {\n  size: String,\n  checked: {\n    type: [Boolean, String, Number],\n    default: undefined\n  },\n  defaultChecked: {\n    type: [Boolean, String, Number],\n    default: false\n  },\n  value: [String, Number],\n  disabled: {\n    type: Boolean,\n    default: undefined\n  },\n  indeterminate: Boolean,\n  label: String,\n  focusable: {\n    type: Boolean,\n    default: true\n  },\n  checkedValue: {\n    type: [Boolean, String, Number],\n    default: true\n  },\n  uncheckedValue: {\n    type: [Boolean, String, Number],\n    default: false\n  },\n  'onUpdate:checked': [Function, Array],\n  onUpdateChecked: [Function, Array],\n  // private\n  privateInsideTable: Boolean,\n  // deprecated\n  onChange: [Function, Array]\n});\nexport default defineComponent({\n  name: 'Checkbox',\n  props: checkboxProps,\n\n  setup(props) {\n    if (process.env.NODE_ENV !== 'production') {\n      watchEffect(() => {\n        if (props.onChange) {\n          warnOnce('checkbox', '`on-change` is deprecated, please use `on-update:checked` instead.');\n        }\n      });\n    }\n\n    const selfRef = ref(null);\n    const {\n      mergedClsPrefixRef,\n      inlineThemeDisabled,\n      mergedRtlRef\n    } = useConfig(props);\n    const formItem = useFormItem(props, {\n      mergedSize(NFormItem) {\n        const {\n          size\n        } = props;\n        if (size !== undefined) return size;\n\n        if (NCheckboxGroup) {\n          const {\n            value: mergedSize\n          } = NCheckboxGroup.mergedSizeRef;\n\n          if (mergedSize !== undefined) {\n            return mergedSize;\n          }\n        }\n\n        if (NFormItem) {\n          const {\n            mergedSize\n          } = NFormItem;\n          if (mergedSize !== undefined) return mergedSize.value;\n        }\n\n        return 'medium';\n      },\n\n      mergedDisabled(NFormItem) {\n        const {\n          disabled\n        } = props;\n        if (disabled !== undefined) return disabled;\n\n        if (NCheckboxGroup) {\n          if (NCheckboxGroup.disabledRef.value) return true;\n          const {\n            maxRef: {\n              value: max\n            },\n            checkedCountRef\n          } = NCheckboxGroup;\n\n          if (max !== undefined && checkedCountRef.value >= max && !renderedCheckedRef.value) {\n            return true;\n          }\n\n          const {\n            minRef: {\n              value: min\n            }\n          } = NCheckboxGroup;\n\n          if (min !== undefined && checkedCountRef.value <= min && renderedCheckedRef.value) {\n            return true;\n          }\n        }\n\n        if (NFormItem) {\n          return NFormItem.disabled.value;\n        }\n\n        return false;\n      }\n\n    });\n    const {\n      mergedDisabledRef,\n      mergedSizeRef\n    } = formItem;\n    const NCheckboxGroup = inject(checkboxGroupInjectionKey, null);\n    const uncontrolledCheckedRef = ref(props.defaultChecked);\n    const controlledCheckedRef = toRef(props, 'checked');\n    const mergedCheckedRef = useMergedState(controlledCheckedRef, uncontrolledCheckedRef);\n    const renderedCheckedRef = useMemo(() => {\n      if (NCheckboxGroup) {\n        const groupValueSet = NCheckboxGroup.valueSetRef.value;\n\n        if (groupValueSet && props.value !== undefined) {\n          return groupValueSet.has(props.value);\n        }\n\n        return false;\n      } else {\n        return mergedCheckedRef.value === props.checkedValue;\n      }\n    });\n    const themeRef = useTheme('Checkbox', '-checkbox', style, checkboxLight, props, mergedClsPrefixRef);\n\n    function toggle(e) {\n      if (NCheckboxGroup && props.value !== undefined) {\n        NCheckboxGroup.toggleCheckbox(!renderedCheckedRef.value, props.value);\n      } else {\n        const {\n          onChange,\n          'onUpdate:checked': _onUpdateCheck,\n          onUpdateChecked\n        } = props;\n        const {\n          nTriggerFormInput,\n          nTriggerFormChange\n        } = formItem;\n        const nextChecked = renderedCheckedRef.value ? props.uncheckedValue : props.checkedValue;\n\n        if (_onUpdateCheck) {\n          call(_onUpdateCheck, nextChecked, e);\n        }\n\n        if (onUpdateChecked) {\n          call(onUpdateChecked, nextChecked, e);\n        }\n\n        if (onChange) call(onChange, nextChecked, e); // deprecated\n\n        nTriggerFormInput();\n        nTriggerFormChange();\n        uncontrolledCheckedRef.value = nextChecked;\n      }\n    }\n\n    function handleClick(e) {\n      if (!mergedDisabledRef.value) {\n        toggle(e);\n      }\n    }\n\n    function handleKeyUp(e) {\n      if (mergedDisabledRef.value) return;\n\n      switch (e.key) {\n        case ' ':\n        case 'Enter':\n          toggle(e);\n      }\n    }\n\n    function handleKeyDown(e) {\n      switch (e.key) {\n        case ' ':\n          e.preventDefault();\n      }\n    }\n\n    const exposedMethods = {\n      focus: () => {\n        var _a;\n\n        (_a = selfRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n      },\n      blur: () => {\n        var _a;\n\n        (_a = selfRef.value) === null || _a === void 0 ? void 0 : _a.blur();\n      }\n    };\n    const rtlEnabledRef = useRtl('Checkbox', mergedRtlRef, mergedClsPrefixRef);\n    const cssVarsRef = computed(() => {\n      const {\n        value: mergedSize\n      } = mergedSizeRef;\n      const {\n        common: {\n          cubicBezierEaseInOut\n        },\n        self: {\n          borderRadius,\n          color,\n          colorChecked,\n          colorDisabled,\n          colorTableHeader,\n          colorTableHeaderModal,\n          colorTableHeaderPopover,\n          checkMarkColor,\n          checkMarkColorDisabled,\n          border,\n          borderFocus,\n          borderDisabled,\n          borderChecked,\n          boxShadowFocus,\n          textColor,\n          textColorDisabled,\n          checkMarkColorDisabledChecked,\n          colorDisabledChecked,\n          borderDisabledChecked,\n          labelPadding,\n          labelLineHeight,\n          [createKey('fontSize', mergedSize)]: fontSize,\n          [createKey('size', mergedSize)]: size\n        }\n      } = themeRef.value;\n      return {\n        '--n-label-line-height': labelLineHeight,\n        '--n-size': size,\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-border-radius': borderRadius,\n        '--n-border': border,\n        '--n-border-checked': borderChecked,\n        '--n-border-focus': borderFocus,\n        '--n-border-disabled': borderDisabled,\n        '--n-border-disabled-checked': borderDisabledChecked,\n        '--n-box-shadow-focus': boxShadowFocus,\n        '--n-color': color,\n        '--n-color-checked': colorChecked,\n        '--n-color-table': colorTableHeader,\n        '--n-color-table-modal': colorTableHeaderModal,\n        '--n-color-table-popover': colorTableHeaderPopover,\n        '--n-color-disabled': colorDisabled,\n        '--n-color-disabled-checked': colorDisabledChecked,\n        '--n-text-color': textColor,\n        '--n-text-color-disabled': textColorDisabled,\n        '--n-check-mark-color': checkMarkColor,\n        '--n-check-mark-color-disabled': checkMarkColorDisabled,\n        '--n-check-mark-color-disabled-checked': checkMarkColorDisabledChecked,\n        '--n-font-size': fontSize,\n        '--n-label-padding': labelPadding\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('checkbox', computed(() => mergedSizeRef.value[0]), cssVarsRef, props) : undefined;\n    return Object.assign(formItem, exposedMethods, {\n      rtlEnabled: rtlEnabledRef,\n      selfRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      mergedDisabled: mergedDisabledRef,\n      renderedChecked: renderedCheckedRef,\n      mergedTheme: themeRef,\n      labelId: createId(),\n      handleClick,\n      handleKeyUp,\n      handleKeyDown,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    });\n  },\n\n  render() {\n    var _a;\n\n    const {\n      $slots,\n      renderedChecked,\n      mergedDisabled,\n      indeterminate,\n      privateInsideTable,\n      cssVars,\n      labelId,\n      label,\n      mergedClsPrefix,\n      focusable,\n      handleKeyUp,\n      handleKeyDown,\n      handleClick\n    } = this;\n    (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n    return h(\"div\", {\n      ref: \"selfRef\",\n      class: [`${mergedClsPrefix}-checkbox`, this.themeClass, this.rtlEnabled && `${mergedClsPrefix}-checkbox--rtl`, renderedChecked && `${mergedClsPrefix}-checkbox--checked`, mergedDisabled && `${mergedClsPrefix}-checkbox--disabled`, indeterminate && `${mergedClsPrefix}-checkbox--indeterminate`, privateInsideTable && `${mergedClsPrefix}-checkbox--inside-table`],\n      tabindex: mergedDisabled || !focusable ? undefined : 0,\n      role: \"checkbox\",\n      \"aria-checked\": indeterminate ? 'mixed' : renderedChecked,\n      \"aria-labelledby\": labelId,\n      style: cssVars,\n      onKeyup: handleKeyUp,\n      onKeydown: handleKeyDown,\n      onClick: handleClick,\n      onMousedown: () => {\n        on('selectstart', window, e => {\n          e.preventDefault();\n        }, {\n          once: true\n        });\n      }\n    }, h(\"div\", {\n      class: `${mergedClsPrefix}-checkbox-box-wrapper`\n    }, \"\\u00A0\", h(\"div\", {\n      class: `${mergedClsPrefix}-checkbox-box`\n    }, h(NIconSwitchTransition, null, {\n      default: () => this.indeterminate ? h(\"div\", {\n        key: \"indeterminate\",\n        class: `${mergedClsPrefix}-checkbox-icon`\n      }, LineMark) : h(\"div\", {\n        key: \"check\",\n        class: `${mergedClsPrefix}-checkbox-icon`\n      }, CheckMark)\n    }), h(\"div\", {\n      class: `${mergedClsPrefix}-checkbox-box__border`\n    }))), label !== null || $slots.default ? h(\"span\", {\n      class: `${mergedClsPrefix}-checkbox__label`,\n      id: labelId\n    }, $slots.default ? $slots.default() : label) : null);\n  }\n\n});","map":{"version":3,"names":["h","defineComponent","computed","inject","ref","toRef","watchEffect","useMergedState","useMemo","createId","on","useConfig","useFormItem","useTheme","useThemeClass","NIconSwitchTransition","call","createKey","warnOnce","checkboxLight","CheckMark","LineMark","checkboxGroupInjectionKey","style","useRtl","checkboxProps","Object","assign","props","size","String","checked","type","Boolean","Number","default","undefined","defaultChecked","value","disabled","indeterminate","label","focusable","checkedValue","uncheckedValue","Function","Array","onUpdateChecked","privateInsideTable","onChange","name","setup","process","env","NODE_ENV","selfRef","mergedClsPrefixRef","inlineThemeDisabled","mergedRtlRef","formItem","mergedSize","NFormItem","NCheckboxGroup","mergedSizeRef","mergedDisabled","disabledRef","maxRef","max","checkedCountRef","renderedCheckedRef","minRef","min","mergedDisabledRef","uncontrolledCheckedRef","controlledCheckedRef","mergedCheckedRef","groupValueSet","valueSetRef","has","themeRef","toggle","e","toggleCheckbox","_onUpdateCheck","nTriggerFormInput","nTriggerFormChange","nextChecked","handleClick","handleKeyUp","key","handleKeyDown","preventDefault","exposedMethods","focus","_a","blur","rtlEnabledRef","cssVarsRef","common","cubicBezierEaseInOut","self","borderRadius","color","colorChecked","colorDisabled","colorTableHeader","colorTableHeaderModal","colorTableHeaderPopover","checkMarkColor","checkMarkColorDisabled","border","borderFocus","borderDisabled","borderChecked","boxShadowFocus","textColor","textColorDisabled","checkMarkColorDisabledChecked","colorDisabledChecked","borderDisabledChecked","labelPadding","labelLineHeight","fontSize","themeClassHandle","rtlEnabled","mergedClsPrefix","renderedChecked","mergedTheme","labelId","cssVars","themeClass","onRender","render","$slots","class","tabindex","role","onKeyup","onKeydown","onClick","onMousedown","window","once","id"],"sources":["D:/VCode/SHC社区管理系统/shc_community_manager_system/node_modules/naive-ui/es/checkbox/src/Checkbox.js"],"sourcesContent":["import { h, defineComponent, computed, inject, ref, toRef, watchEffect } from 'vue';\nimport { useMergedState, useMemo } from 'vooks';\nimport { createId } from 'seemly';\nimport { on } from 'evtd';\nimport { useConfig, useFormItem, useTheme, useThemeClass } from '../../_mixins';\nimport { NIconSwitchTransition } from '../../_internal';\nimport { call, createKey, warnOnce } from '../../_utils';\nimport { checkboxLight } from '../styles';\nimport CheckMark from './CheckMark';\nimport LineMark from './LineMark';\nimport { checkboxGroupInjectionKey } from './CheckboxGroup';\nimport style from './styles/index.cssr';\nimport { useRtl } from '../../_mixins/use-rtl';\nexport const checkboxProps = Object.assign(Object.assign({}, useTheme.props), { size: String, checked: {\n        type: [Boolean, String, Number],\n        default: undefined\n    }, defaultChecked: {\n        type: [Boolean, String, Number],\n        default: false\n    }, value: [String, Number], disabled: {\n        type: Boolean,\n        default: undefined\n    }, indeterminate: Boolean, label: String, focusable: {\n        type: Boolean,\n        default: true\n    }, checkedValue: {\n        type: [Boolean, String, Number],\n        default: true\n    }, uncheckedValue: {\n        type: [Boolean, String, Number],\n        default: false\n    }, 'onUpdate:checked': [Function, Array], onUpdateChecked: [Function, Array], \n    // private\n    privateInsideTable: Boolean, \n    // deprecated\n    onChange: [Function, Array] });\nexport default defineComponent({\n    name: 'Checkbox',\n    props: checkboxProps,\n    setup(props) {\n        if (process.env.NODE_ENV !== 'production') {\n            watchEffect(() => {\n                if (props.onChange) {\n                    warnOnce('checkbox', '`on-change` is deprecated, please use `on-update:checked` instead.');\n                }\n            });\n        }\n        const selfRef = ref(null);\n        const { mergedClsPrefixRef, inlineThemeDisabled, mergedRtlRef } = useConfig(props);\n        const formItem = useFormItem(props, {\n            mergedSize(NFormItem) {\n                const { size } = props;\n                if (size !== undefined)\n                    return size;\n                if (NCheckboxGroup) {\n                    const { value: mergedSize } = NCheckboxGroup.mergedSizeRef;\n                    if (mergedSize !== undefined) {\n                        return mergedSize;\n                    }\n                }\n                if (NFormItem) {\n                    const { mergedSize } = NFormItem;\n                    if (mergedSize !== undefined)\n                        return mergedSize.value;\n                }\n                return 'medium';\n            },\n            mergedDisabled(NFormItem) {\n                const { disabled } = props;\n                if (disabled !== undefined)\n                    return disabled;\n                if (NCheckboxGroup) {\n                    if (NCheckboxGroup.disabledRef.value)\n                        return true;\n                    const { maxRef: { value: max }, checkedCountRef } = NCheckboxGroup;\n                    if (max !== undefined &&\n                        checkedCountRef.value >= max &&\n                        !renderedCheckedRef.value) {\n                        return true;\n                    }\n                    const { minRef: { value: min } } = NCheckboxGroup;\n                    if (min !== undefined &&\n                        checkedCountRef.value <= min &&\n                        renderedCheckedRef.value) {\n                        return true;\n                    }\n                }\n                if (NFormItem) {\n                    return NFormItem.disabled.value;\n                }\n                return false;\n            }\n        });\n        const { mergedDisabledRef, mergedSizeRef } = formItem;\n        const NCheckboxGroup = inject(checkboxGroupInjectionKey, null);\n        const uncontrolledCheckedRef = ref(props.defaultChecked);\n        const controlledCheckedRef = toRef(props, 'checked');\n        const mergedCheckedRef = useMergedState(controlledCheckedRef, uncontrolledCheckedRef);\n        const renderedCheckedRef = useMemo(() => {\n            if (NCheckboxGroup) {\n                const groupValueSet = NCheckboxGroup.valueSetRef.value;\n                if (groupValueSet && props.value !== undefined) {\n                    return groupValueSet.has(props.value);\n                }\n                return false;\n            }\n            else {\n                return mergedCheckedRef.value === props.checkedValue;\n            }\n        });\n        const themeRef = useTheme('Checkbox', '-checkbox', style, checkboxLight, props, mergedClsPrefixRef);\n        function toggle(e) {\n            if (NCheckboxGroup && props.value !== undefined) {\n                NCheckboxGroup.toggleCheckbox(!renderedCheckedRef.value, props.value);\n            }\n            else {\n                const { onChange, 'onUpdate:checked': _onUpdateCheck, onUpdateChecked } = props;\n                const { nTriggerFormInput, nTriggerFormChange } = formItem;\n                const nextChecked = renderedCheckedRef.value\n                    ? props.uncheckedValue\n                    : props.checkedValue;\n                if (_onUpdateCheck) {\n                    call(_onUpdateCheck, nextChecked, e);\n                }\n                if (onUpdateChecked) {\n                    call(onUpdateChecked, nextChecked, e);\n                }\n                if (onChange)\n                    call(onChange, nextChecked, e); // deprecated\n                nTriggerFormInput();\n                nTriggerFormChange();\n                uncontrolledCheckedRef.value = nextChecked;\n            }\n        }\n        function handleClick(e) {\n            if (!mergedDisabledRef.value) {\n                toggle(e);\n            }\n        }\n        function handleKeyUp(e) {\n            if (mergedDisabledRef.value)\n                return;\n            switch (e.key) {\n                case ' ':\n                case 'Enter':\n                    toggle(e);\n            }\n        }\n        function handleKeyDown(e) {\n            switch (e.key) {\n                case ' ':\n                    e.preventDefault();\n            }\n        }\n        const exposedMethods = {\n            focus: () => {\n                var _a;\n                (_a = selfRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n            },\n            blur: () => {\n                var _a;\n                (_a = selfRef.value) === null || _a === void 0 ? void 0 : _a.blur();\n            }\n        };\n        const rtlEnabledRef = useRtl('Checkbox', mergedRtlRef, mergedClsPrefixRef);\n        const cssVarsRef = computed(() => {\n            const { value: mergedSize } = mergedSizeRef;\n            const { common: { cubicBezierEaseInOut }, self: { borderRadius, color, colorChecked, colorDisabled, colorTableHeader, colorTableHeaderModal, colorTableHeaderPopover, checkMarkColor, checkMarkColorDisabled, border, borderFocus, borderDisabled, borderChecked, boxShadowFocus, textColor, textColorDisabled, checkMarkColorDisabledChecked, colorDisabledChecked, borderDisabledChecked, labelPadding, labelLineHeight, [createKey('fontSize', mergedSize)]: fontSize, [createKey('size', mergedSize)]: size } } = themeRef.value;\n            return {\n                '--n-label-line-height': labelLineHeight,\n                '--n-size': size,\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-border-radius': borderRadius,\n                '--n-border': border,\n                '--n-border-checked': borderChecked,\n                '--n-border-focus': borderFocus,\n                '--n-border-disabled': borderDisabled,\n                '--n-border-disabled-checked': borderDisabledChecked,\n                '--n-box-shadow-focus': boxShadowFocus,\n                '--n-color': color,\n                '--n-color-checked': colorChecked,\n                '--n-color-table': colorTableHeader,\n                '--n-color-table-modal': colorTableHeaderModal,\n                '--n-color-table-popover': colorTableHeaderPopover,\n                '--n-color-disabled': colorDisabled,\n                '--n-color-disabled-checked': colorDisabledChecked,\n                '--n-text-color': textColor,\n                '--n-text-color-disabled': textColorDisabled,\n                '--n-check-mark-color': checkMarkColor,\n                '--n-check-mark-color-disabled': checkMarkColorDisabled,\n                '--n-check-mark-color-disabled-checked': checkMarkColorDisabledChecked,\n                '--n-font-size': fontSize,\n                '--n-label-padding': labelPadding\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('checkbox', computed(() => mergedSizeRef.value[0]), cssVarsRef, props)\n            : undefined;\n        return Object.assign(formItem, exposedMethods, {\n            rtlEnabled: rtlEnabledRef,\n            selfRef,\n            mergedClsPrefix: mergedClsPrefixRef,\n            mergedDisabled: mergedDisabledRef,\n            renderedChecked: renderedCheckedRef,\n            mergedTheme: themeRef,\n            labelId: createId(),\n            handleClick,\n            handleKeyUp,\n            handleKeyDown,\n            cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n            themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n            onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n        });\n    },\n    render() {\n        var _a;\n        const { $slots, renderedChecked, mergedDisabled, indeterminate, privateInsideTable, cssVars, labelId, label, mergedClsPrefix, focusable, handleKeyUp, handleKeyDown, handleClick } = this;\n        (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n        return (h(\"div\", { ref: \"selfRef\", class: [\n                `${mergedClsPrefix}-checkbox`,\n                this.themeClass,\n                this.rtlEnabled && `${mergedClsPrefix}-checkbox--rtl`,\n                renderedChecked && `${mergedClsPrefix}-checkbox--checked`,\n                mergedDisabled && `${mergedClsPrefix}-checkbox--disabled`,\n                indeterminate && `${mergedClsPrefix}-checkbox--indeterminate`,\n                privateInsideTable && `${mergedClsPrefix}-checkbox--inside-table`\n            ], tabindex: mergedDisabled || !focusable ? undefined : 0, role: \"checkbox\", \"aria-checked\": indeterminate ? 'mixed' : renderedChecked, \"aria-labelledby\": labelId, style: cssVars, onKeyup: handleKeyUp, onKeydown: handleKeyDown, onClick: handleClick, onMousedown: () => {\n                on('selectstart', window, (e) => {\n                    e.preventDefault();\n                }, {\n                    once: true\n                });\n            } },\n            h(\"div\", { class: `${mergedClsPrefix}-checkbox-box-wrapper` },\n                \"\\u00A0\",\n                h(\"div\", { class: `${mergedClsPrefix}-checkbox-box` },\n                    h(NIconSwitchTransition, null, {\n                        default: () => this.indeterminate ? (h(\"div\", { key: \"indeterminate\", class: `${mergedClsPrefix}-checkbox-icon` }, LineMark)) : (h(\"div\", { key: \"check\", class: `${mergedClsPrefix}-checkbox-icon` }, CheckMark))\n                    }),\n                    h(\"div\", { class: `${mergedClsPrefix}-checkbox-box__border` }))),\n            label !== null || $slots.default ? (h(\"span\", { class: `${mergedClsPrefix}-checkbox__label`, id: labelId }, $slots.default ? $slots.default() : label)) : null));\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}