{"ast":null,"code":"// string => string (expected, not implemented)\n// string => number (legacy)\nexport function parse(value) {\n  if (value === undefined || value === null || typeof value === 'string' && value.trim() === '') {\n    return null;\n  }\n\n  return Number(value);\n} // can be parsed to number but shouldn't be applied when inputing\n// when value includes `.`, ending with 0 and`.`, doesn't update, if 0 parse func will remove 0\n\nexport function isWipValue(value) {\n  return value.includes('.') && (/^(-)?\\d+.*(\\.|0)$/.test(value) || /^\\.\\d+$/.test(value));\n} // string => boolean (expected, not implemented)\n// number => boolean (legacy)\n\nexport function validator(value) {\n  if (value === undefined || value === null) return true;\n  if (Number.isNaN(value)) return false;\n  return true;\n} // string => string (expected, not implemented)\n// number => string (legacy)\n\nexport function format(value, precision) {\n  if (value === undefined || value === null) return '';\n  return precision === undefined ? String(value) : value.toFixed(precision);\n}\nexport function parseNumber(number) {\n  if (number === null) return null;\n\n  if (typeof number === 'number') {\n    return number;\n  } else {\n    const parsedNumber = Number(number);\n    if (Number.isNaN(parsedNumber)) return null;else {\n      return parsedNumber;\n    }\n  }\n}","map":{"version":3,"names":["parse","value","undefined","trim","Number","isWipValue","includes","test","validator","isNaN","format","precision","String","toFixed","parseNumber","number","parsedNumber"],"sources":["E:/VCode/SHC社区管理系统/shc_community_manager_system/node_modules/naive-ui/es/input-number/src/utils.js"],"sourcesContent":["// string => string (expected, not implemented)\n// string => number (legacy)\nexport function parse(value) {\n    if (value === undefined ||\n        value === null ||\n        (typeof value === 'string' && value.trim() === '')) {\n        return null;\n    }\n    return Number(value);\n}\n// can be parsed to number but shouldn't be applied when inputing\n// when value includes `.`, ending with 0 and`.`, doesn't update, if 0 parse func will remove 0\nexport function isWipValue(value) {\n    return (value.includes('.') &&\n        (/^(-)?\\d+.*(\\.|0)$/.test(value) || /^\\.\\d+$/.test(value)));\n}\n// string => boolean (expected, not implemented)\n// number => boolean (legacy)\nexport function validator(value) {\n    if (value === undefined || value === null)\n        return true;\n    if (Number.isNaN(value))\n        return false;\n    return true;\n}\n// string => string (expected, not implemented)\n// number => string (legacy)\nexport function format(value, precision) {\n    if (value === undefined || value === null)\n        return '';\n    return precision === undefined ? String(value) : value.toFixed(precision);\n}\nexport function parseNumber(number) {\n    if (number === null)\n        return null;\n    if (typeof number === 'number') {\n        return number;\n    }\n    else {\n        const parsedNumber = Number(number);\n        if (Number.isNaN(parsedNumber))\n            return null;\n        else {\n            return parsedNumber;\n        }\n    }\n}\n"],"mappings":"AAAA;AACA;AACA,OAAO,SAASA,KAAT,CAAeC,KAAf,EAAsB;EACzB,IAAIA,KAAK,KAAKC,SAAV,IACAD,KAAK,KAAK,IADV,IAEC,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAACE,IAAN,OAAiB,EAFnD,EAEwD;IACpD,OAAO,IAAP;EACH;;EACD,OAAOC,MAAM,CAACH,KAAD,CAAb;AACH,C,CACD;AACA;;AACA,OAAO,SAASI,UAAT,CAAoBJ,KAApB,EAA2B;EAC9B,OAAQA,KAAK,CAACK,QAAN,CAAe,GAAf,MACH,oBAAoBC,IAApB,CAAyBN,KAAzB,KAAmC,UAAUM,IAAV,CAAeN,KAAf,CADhC,CAAR;AAEH,C,CACD;AACA;;AACA,OAAO,SAASO,SAAT,CAAmBP,KAAnB,EAA0B;EAC7B,IAAIA,KAAK,KAAKC,SAAV,IAAuBD,KAAK,KAAK,IAArC,EACI,OAAO,IAAP;EACJ,IAAIG,MAAM,CAACK,KAAP,CAAaR,KAAb,CAAJ,EACI,OAAO,KAAP;EACJ,OAAO,IAAP;AACH,C,CACD;AACA;;AACA,OAAO,SAASS,MAAT,CAAgBT,KAAhB,EAAuBU,SAAvB,EAAkC;EACrC,IAAIV,KAAK,KAAKC,SAAV,IAAuBD,KAAK,KAAK,IAArC,EACI,OAAO,EAAP;EACJ,OAAOU,SAAS,KAAKT,SAAd,GAA0BU,MAAM,CAACX,KAAD,CAAhC,GAA0CA,KAAK,CAACY,OAAN,CAAcF,SAAd,CAAjD;AACH;AACD,OAAO,SAASG,WAAT,CAAqBC,MAArB,EAA6B;EAChC,IAAIA,MAAM,KAAK,IAAf,EACI,OAAO,IAAP;;EACJ,IAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;IAC5B,OAAOA,MAAP;EACH,CAFD,MAGK;IACD,MAAMC,YAAY,GAAGZ,MAAM,CAACW,MAAD,CAA3B;IACA,IAAIX,MAAM,CAACK,KAAP,CAAaO,YAAb,CAAJ,EACI,OAAO,IAAP,CADJ,KAEK;MACD,OAAOA,YAAP;IACH;EACJ;AACJ"},"metadata":{},"sourceType":"module"}