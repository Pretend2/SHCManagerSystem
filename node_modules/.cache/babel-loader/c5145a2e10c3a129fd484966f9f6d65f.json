{"ast":null,"code":"import { h, defineComponent, computed } from 'vue';\n\nfunction circlePath(r, sw, vw = 100) {\n  return `m ${vw / 2} ${vw / 2 - r} a ${r} ${r} 0 1 1 0 ${2 * r} a ${r} ${r} 0 1 1 0 -${2 * r}`;\n}\n\nexport default defineComponent({\n  name: 'ProgressMultipleCircle',\n  props: {\n    clsPrefix: {\n      type: String,\n      required: true\n    },\n    viewBoxWidth: {\n      type: Number,\n      required: true\n    },\n    percentage: {\n      type: Array,\n      default: [0]\n    },\n    strokeWidth: {\n      type: Number,\n      required: true\n    },\n    circleGap: {\n      type: Number,\n      required: true\n    },\n    showIndicator: {\n      type: Boolean,\n      required: true\n    },\n    fillColor: {\n      type: Array,\n      default: () => []\n    },\n    railColor: {\n      type: Array,\n      default: () => []\n    },\n    railStyle: {\n      type: Array,\n      default: () => []\n    }\n  },\n\n  setup(props, {\n    slots\n  }) {\n    const strokeDasharrayRef = computed(() => {\n      const strokeDasharrays = props.percentage.map((v, i) => `${Math.PI * v / 100 * (props.viewBoxWidth / 2 - props.strokeWidth / 2 * (1 + 2 * i) - props.circleGap * i) * 2}, ${props.viewBoxWidth * 8}`);\n      return strokeDasharrays;\n    });\n    return () => {\n      const {\n        viewBoxWidth,\n        strokeWidth,\n        circleGap,\n        showIndicator,\n        fillColor,\n        railColor,\n        railStyle,\n        percentage,\n        clsPrefix\n      } = props;\n      return h(\"div\", {\n        class: `${clsPrefix}-progress-content`,\n        role: \"none\"\n      }, h(\"div\", {\n        class: `${clsPrefix}-progress-graph`,\n        \"aria-hidden\": true\n      }, h(\"div\", {\n        class: `${clsPrefix}-progress-graph-circle`\n      }, h(\"svg\", {\n        viewBox: `0 0 ${viewBoxWidth} ${viewBoxWidth}`\n      }, percentage.map((p, index) => {\n        return h(\"g\", {\n          key: index\n        }, h(\"path\", {\n          class: `${clsPrefix}-progress-graph-circle-rail`,\n          d: circlePath(viewBoxWidth / 2 - strokeWidth / 2 * (1 + 2 * index) - circleGap * index, strokeWidth, viewBoxWidth),\n          \"stroke-width\": strokeWidth,\n          \"stroke-linecap\": \"round\",\n          fill: \"none\",\n          style: [{\n            strokeDashoffset: 0,\n            stroke: railColor[index]\n          }, railStyle[index]]\n        }), h(\"path\", {\n          class: [`${clsPrefix}-progress-graph-circle-fill`, p === 0 && `${clsPrefix}-progress-graph-circle-fill--empty`],\n          d: circlePath(viewBoxWidth / 2 - strokeWidth / 2 * (1 + 2 * index) - circleGap * index, strokeWidth, viewBoxWidth),\n          \"stroke-width\": strokeWidth,\n          \"stroke-linecap\": \"round\",\n          fill: \"none\",\n          style: {\n            strokeDasharray: strokeDasharrayRef.value[index],\n            strokeDashoffset: 0,\n            stroke: fillColor[index]\n          }\n        }));\n      })))), showIndicator && slots.default ? h(\"div\", null, h(\"div\", {\n        class: `${clsPrefix}-progress-text`\n      }, slots.default())) : null);\n    };\n  }\n\n});","map":{"version":3,"names":["h","defineComponent","computed","circlePath","r","sw","vw","name","props","clsPrefix","type","String","required","viewBoxWidth","Number","percentage","Array","default","strokeWidth","circleGap","showIndicator","Boolean","fillColor","railColor","railStyle","setup","slots","strokeDasharrayRef","strokeDasharrays","map","v","i","Math","PI","class","role","viewBox","p","index","key","d","fill","style","strokeDashoffset","stroke","strokeDasharray","value"],"sources":["E:/VCode/SHC社区管理系统/shc_community_manager_system/node_modules/naive-ui/es/progress/src/MultipleCircle.js"],"sourcesContent":["import { h, defineComponent, computed } from 'vue';\nfunction circlePath(r, sw, vw = 100) {\n    return `m ${vw / 2} ${vw / 2 - r} a ${r} ${r} 0 1 1 0 ${2 * r} a ${r} ${r} 0 1 1 0 -${2 * r}`;\n}\nexport default defineComponent({\n    name: 'ProgressMultipleCircle',\n    props: {\n        clsPrefix: {\n            type: String,\n            required: true\n        },\n        viewBoxWidth: {\n            type: Number,\n            required: true\n        },\n        percentage: {\n            type: Array,\n            default: [0]\n        },\n        strokeWidth: {\n            type: Number,\n            required: true\n        },\n        circleGap: {\n            type: Number,\n            required: true\n        },\n        showIndicator: {\n            type: Boolean,\n            required: true\n        },\n        fillColor: {\n            type: Array,\n            default: () => []\n        },\n        railColor: {\n            type: Array,\n            default: () => []\n        },\n        railStyle: {\n            type: Array,\n            default: () => []\n        }\n    },\n    setup(props, { slots }) {\n        const strokeDasharrayRef = computed(() => {\n            const strokeDasharrays = props.percentage.map((v, i) => `${((Math.PI * v) / 100) *\n                (props.viewBoxWidth / 2 -\n                    (props.strokeWidth / 2) * (1 + 2 * i) -\n                    props.circleGap * i) *\n                2}, ${props.viewBoxWidth * 8}`);\n            return strokeDasharrays;\n        });\n        return () => {\n            const { viewBoxWidth, strokeWidth, circleGap, showIndicator, fillColor, railColor, railStyle, percentage, clsPrefix } = props;\n            return (h(\"div\", { class: `${clsPrefix}-progress-content`, role: \"none\" },\n                h(\"div\", { class: `${clsPrefix}-progress-graph`, \"aria-hidden\": true },\n                    h(\"div\", { class: `${clsPrefix}-progress-graph-circle` },\n                        h(\"svg\", { viewBox: `0 0 ${viewBoxWidth} ${viewBoxWidth}` }, percentage.map((p, index) => {\n                            return (h(\"g\", { key: index },\n                                h(\"path\", { class: `${clsPrefix}-progress-graph-circle-rail`, d: circlePath(viewBoxWidth / 2 -\n                                        (strokeWidth / 2) * (1 + 2 * index) -\n                                        circleGap * index, strokeWidth, viewBoxWidth), \"stroke-width\": strokeWidth, \"stroke-linecap\": \"round\", fill: \"none\", style: [\n                                        {\n                                            strokeDashoffset: 0,\n                                            stroke: railColor[index]\n                                        },\n                                        railStyle[index]\n                                    ] }),\n                                h(\"path\", { class: [\n                                        `${clsPrefix}-progress-graph-circle-fill`,\n                                        p === 0 &&\n                                            `${clsPrefix}-progress-graph-circle-fill--empty`\n                                    ], d: circlePath(viewBoxWidth / 2 -\n                                        (strokeWidth / 2) * (1 + 2 * index) -\n                                        circleGap * index, strokeWidth, viewBoxWidth), \"stroke-width\": strokeWidth, \"stroke-linecap\": \"round\", fill: \"none\", style: {\n                                        strokeDasharray: strokeDasharrayRef.value[index],\n                                        strokeDashoffset: 0,\n                                        stroke: fillColor[index]\n                                    } })));\n                        })))),\n                showIndicator && slots.default ? (h(\"div\", null,\n                    h(\"div\", { class: `${clsPrefix}-progress-text` }, slots.default()))) : null));\n        };\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}