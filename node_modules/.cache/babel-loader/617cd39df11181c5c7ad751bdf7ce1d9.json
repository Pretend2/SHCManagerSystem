{"ast":null,"code":"import { computed, inject, ref, nextTick } from 'vue';\nimport { useKeyboard } from 'vooks';\nimport { datePickerInjectionKey } from '../interface';\nconst TIME_FORMAT = 'HH:mm:ss';\nconst usePanelCommonProps = {\n  active: Boolean,\n  dateFormat: String,\n  timeFormat: {\n    type: String,\n    value: TIME_FORMAT\n  },\n  value: {\n    type: [Array, Number],\n    default: null\n  },\n  shortcuts: Object,\n  defaultTime: [Number, String, Array],\n  onClear: Function,\n  onConfirm: Function,\n  onClose: Function,\n  onTabOut: Function,\n  onUpdateValue: {\n    type: Function,\n    required: true\n  },\n  themeClass: String,\n  onRender: Function,\n  panel: Boolean\n}; // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n\nfunction usePanelCommon(props) {\n  const {\n    dateLocaleRef,\n    timePickerSizeRef,\n    timePickerPropsRef,\n    localeRef,\n    mergedClsPrefixRef,\n    mergedThemeRef // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n  } = inject(datePickerInjectionKey);\n  const dateFnsOptionsRef = computed(() => {\n    return {\n      locale: dateLocaleRef.value.locale\n    };\n  });\n  const selfRef = ref(null);\n  const keyboardState = useKeyboard();\n\n  function doClear() {\n    const {\n      onClear\n    } = props;\n    if (onClear) onClear();\n  }\n\n  function doConfirm() {\n    const {\n      onConfirm,\n      value\n    } = props;\n    if (onConfirm) onConfirm(value);\n  }\n\n  function doUpdateValue(value, doUpdate) {\n    const {\n      onUpdateValue\n    } = props;\n    onUpdateValue(value, doUpdate);\n  }\n\n  function doClose(disableUpdateOnClose = false) {\n    const {\n      onClose\n    } = props;\n    if (onClose) onClose(disableUpdateOnClose);\n  }\n\n  function doTabOut() {\n    const {\n      onTabOut\n    } = props;\n    if (onTabOut) onTabOut();\n  }\n\n  function handleClearClick() {\n    doUpdateValue(null, true);\n    doClose(true);\n    doClear();\n  }\n\n  function handleFocusDetectorFocus() {\n    doTabOut();\n  }\n\n  function disableTransitionOneTick() {\n    if (props.active || props.panel) {\n      void nextTick(() => {\n        const {\n          value: selfEl\n        } = selfRef;\n        if (!selfEl) return;\n        const dateEls = selfEl.querySelectorAll('[data-n-date]');\n        dateEls.forEach(el => {\n          el.classList.add('transition-disabled');\n        });\n        void selfEl.offsetWidth;\n        dateEls.forEach(el => {\n          el.classList.remove('transition-disabled');\n        });\n      });\n    }\n  }\n\n  function handlePanelKeyDown(e) {\n    if (e.key === 'Tab' && e.target === selfRef.value && keyboardState.shift) {\n      e.preventDefault();\n      doTabOut();\n    }\n  }\n\n  function handlePanelFocus(e) {\n    const {\n      value: el\n    } = selfRef;\n\n    if (keyboardState.tab && e.target === el && (el === null || el === void 0 ? void 0 : el.contains(e.relatedTarget))) {\n      doTabOut();\n    }\n  }\n\n  let cachedValue = null;\n  let cached = false;\n\n  function cachePendingValue() {\n    cachedValue = props.value;\n    cached = true;\n  }\n\n  function clearPendingValue() {\n    cached = false;\n  }\n\n  function restorePendingValue() {\n    if (cached) {\n      doUpdateValue(cachedValue, false);\n      cached = false;\n    }\n  }\n\n  function getShortcutValue(shortcut) {\n    if (typeof shortcut === 'function') {\n      return shortcut();\n    }\n\n    return shortcut;\n  }\n\n  const showMonthYearPanel = ref(false);\n\n  function handleOpenQuickSelectMonthPanel() {\n    showMonthYearPanel.value = !showMonthYearPanel.value;\n  }\n\n  return {\n    mergedTheme: mergedThemeRef,\n    mergedClsPrefix: mergedClsPrefixRef,\n    dateFnsOptions: dateFnsOptionsRef,\n    timePickerSize: timePickerSizeRef,\n    timePickerProps: timePickerPropsRef,\n    selfRef,\n    locale: localeRef,\n    doConfirm,\n    doClose,\n    doUpdateValue,\n    doTabOut,\n    handleClearClick,\n    handleFocusDetectorFocus,\n    disableTransitionOneTick,\n    handlePanelKeyDown,\n    handlePanelFocus,\n    cachePendingValue,\n    clearPendingValue,\n    restorePendingValue,\n    getShortcutValue,\n    handleShortcutMouseleave: restorePendingValue,\n    showMonthYearPanel,\n    handleOpenQuickSelectMonthPanel\n  };\n}\n\nexport { usePanelCommon, usePanelCommonProps };","map":{"version":3,"names":["computed","inject","ref","nextTick","useKeyboard","datePickerInjectionKey","TIME_FORMAT","usePanelCommonProps","active","Boolean","dateFormat","String","timeFormat","type","value","Array","Number","default","shortcuts","Object","defaultTime","onClear","Function","onConfirm","onClose","onTabOut","onUpdateValue","required","themeClass","onRender","panel","usePanelCommon","props","dateLocaleRef","timePickerSizeRef","timePickerPropsRef","localeRef","mergedClsPrefixRef","mergedThemeRef","dateFnsOptionsRef","locale","selfRef","keyboardState","doClear","doConfirm","doUpdateValue","doUpdate","doClose","disableUpdateOnClose","doTabOut","handleClearClick","handleFocusDetectorFocus","disableTransitionOneTick","selfEl","dateEls","querySelectorAll","forEach","el","classList","add","offsetWidth","remove","handlePanelKeyDown","e","key","target","shift","preventDefault","handlePanelFocus","tab","contains","relatedTarget","cachedValue","cached","cachePendingValue","clearPendingValue","restorePendingValue","getShortcutValue","shortcut","showMonthYearPanel","handleOpenQuickSelectMonthPanel","mergedTheme","mergedClsPrefix","dateFnsOptions","timePickerSize","timePickerProps","handleShortcutMouseleave"],"sources":["E:/VCode/SHC社区管理系统/shc_community_manager_system/node_modules/naive-ui/es/date-picker/src/panel/use-panel-common.js"],"sourcesContent":["import { computed, inject, ref, nextTick } from 'vue';\nimport { useKeyboard } from 'vooks';\nimport { datePickerInjectionKey } from '../interface';\nconst TIME_FORMAT = 'HH:mm:ss';\nconst usePanelCommonProps = {\n    active: Boolean,\n    dateFormat: String,\n    timeFormat: {\n        type: String,\n        value: TIME_FORMAT\n    },\n    value: {\n        type: [Array, Number],\n        default: null\n    },\n    shortcuts: Object,\n    defaultTime: [Number, String, Array],\n    onClear: Function,\n    onConfirm: Function,\n    onClose: Function,\n    onTabOut: Function,\n    onUpdateValue: {\n        type: Function,\n        required: true\n    },\n    themeClass: String,\n    onRender: Function,\n    panel: Boolean\n};\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nfunction usePanelCommon(props) {\n    const { dateLocaleRef, timePickerSizeRef, timePickerPropsRef, localeRef, mergedClsPrefixRef, mergedThemeRef\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n     } = inject(datePickerInjectionKey);\n    const dateFnsOptionsRef = computed(() => {\n        return {\n            locale: dateLocaleRef.value.locale\n        };\n    });\n    const selfRef = ref(null);\n    const keyboardState = useKeyboard();\n    function doClear() {\n        const { onClear } = props;\n        if (onClear)\n            onClear();\n    }\n    function doConfirm() {\n        const { onConfirm, value } = props;\n        if (onConfirm)\n            onConfirm(value);\n    }\n    function doUpdateValue(value, doUpdate) {\n        const { onUpdateValue } = props;\n        onUpdateValue(value, doUpdate);\n    }\n    function doClose(disableUpdateOnClose = false) {\n        const { onClose } = props;\n        if (onClose)\n            onClose(disableUpdateOnClose);\n    }\n    function doTabOut() {\n        const { onTabOut } = props;\n        if (onTabOut)\n            onTabOut();\n    }\n    function handleClearClick() {\n        doUpdateValue(null, true);\n        doClose(true);\n        doClear();\n    }\n    function handleFocusDetectorFocus() {\n        doTabOut();\n    }\n    function disableTransitionOneTick() {\n        if (props.active || props.panel) {\n            void nextTick(() => {\n                const { value: selfEl } = selfRef;\n                if (!selfEl)\n                    return;\n                const dateEls = selfEl.querySelectorAll('[data-n-date]');\n                dateEls.forEach((el) => {\n                    el.classList.add('transition-disabled');\n                });\n                void selfEl.offsetWidth;\n                dateEls.forEach((el) => {\n                    el.classList.remove('transition-disabled');\n                });\n            });\n        }\n    }\n    function handlePanelKeyDown(e) {\n        if (e.key === 'Tab' && e.target === selfRef.value && keyboardState.shift) {\n            e.preventDefault();\n            doTabOut();\n        }\n    }\n    function handlePanelFocus(e) {\n        const { value: el } = selfRef;\n        if (keyboardState.tab &&\n            e.target === el &&\n            (el === null || el === void 0 ? void 0 : el.contains(e.relatedTarget))) {\n            doTabOut();\n        }\n    }\n    let cachedValue = null;\n    let cached = false;\n    function cachePendingValue() {\n        cachedValue = props.value;\n        cached = true;\n    }\n    function clearPendingValue() {\n        cached = false;\n    }\n    function restorePendingValue() {\n        if (cached) {\n            doUpdateValue(cachedValue, false);\n            cached = false;\n        }\n    }\n    function getShortcutValue(shortcut) {\n        if (typeof shortcut === 'function') {\n            return shortcut();\n        }\n        return shortcut;\n    }\n    const showMonthYearPanel = ref(false);\n    function handleOpenQuickSelectMonthPanel() {\n        showMonthYearPanel.value = !showMonthYearPanel.value;\n    }\n    return {\n        mergedTheme: mergedThemeRef,\n        mergedClsPrefix: mergedClsPrefixRef,\n        dateFnsOptions: dateFnsOptionsRef,\n        timePickerSize: timePickerSizeRef,\n        timePickerProps: timePickerPropsRef,\n        selfRef,\n        locale: localeRef,\n        doConfirm,\n        doClose,\n        doUpdateValue,\n        doTabOut,\n        handleClearClick,\n        handleFocusDetectorFocus,\n        disableTransitionOneTick,\n        handlePanelKeyDown,\n        handlePanelFocus,\n        cachePendingValue,\n        clearPendingValue,\n        restorePendingValue,\n        getShortcutValue,\n        handleShortcutMouseleave: restorePendingValue,\n        showMonthYearPanel,\n        handleOpenQuickSelectMonthPanel\n    };\n}\nexport { usePanelCommon, usePanelCommonProps };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}