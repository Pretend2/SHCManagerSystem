{"ast":null,"code":"import { h, defineComponent, inject } from 'vue';\nimport { NCheckbox } from '../../checkbox';\nimport { treeInjectionKey } from './interface';\nexport default defineComponent({\n  name: 'NTreeNodeCheckbox',\n  props: {\n    clsPrefix: {\n      type: String,\n      required: true\n    },\n    right: Boolean,\n    focusable: Boolean,\n    disabled: Boolean,\n    checked: Boolean,\n    indeterminate: Boolean,\n    onCheck: Function\n  },\n\n  setup(props) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const NTree = inject(treeInjectionKey);\n\n    function doCheck(value) {\n      const {\n        onCheck\n      } = props;\n      if (onCheck) return onCheck(value);\n    }\n\n    function handleUpdateValue(value) {\n      if (props.indeterminate) {\n        doCheck(false);\n      } else {\n        doCheck(value);\n      }\n    }\n\n    return {\n      handleUpdateValue,\n      mergedTheme: NTree.mergedThemeRef\n    };\n  },\n\n  render() {\n    const {\n      clsPrefix,\n      mergedTheme,\n      checked,\n      indeterminate,\n      disabled,\n      focusable,\n      handleUpdateValue\n    } = this;\n    return h(\"span\", {\n      class: [`${clsPrefix}-tree-node-checkbox`, this.right && `${clsPrefix}-tree-node-checkbox--right`],\n      \"data-checkbox\": true\n    }, h(NCheckbox, {\n      focusable: focusable,\n      disabled: disabled,\n      theme: mergedTheme.peers.Checkbox,\n      themeOverrides: mergedTheme.peerOverrides.Checkbox,\n      checked: checked,\n      indeterminate: indeterminate,\n      onUpdateChecked: handleUpdateValue\n    }));\n  }\n\n});","map":{"version":3,"names":["h","defineComponent","inject","NCheckbox","treeInjectionKey","name","props","clsPrefix","type","String","required","right","Boolean","focusable","disabled","checked","indeterminate","onCheck","Function","setup","NTree","doCheck","value","handleUpdateValue","mergedTheme","mergedThemeRef","render","class","theme","peers","Checkbox","themeOverrides","peerOverrides","onUpdateChecked"],"sources":["E:/VCode/SHC社区管理系统/shc_community_manager_system/node_modules/naive-ui/es/tree/src/TreeNodeCheckbox.js"],"sourcesContent":["import { h, defineComponent, inject } from 'vue';\nimport { NCheckbox } from '../../checkbox';\nimport { treeInjectionKey } from './interface';\nexport default defineComponent({\n    name: 'NTreeNodeCheckbox',\n    props: {\n        clsPrefix: {\n            type: String,\n            required: true\n        },\n        right: Boolean,\n        focusable: Boolean,\n        disabled: Boolean,\n        checked: Boolean,\n        indeterminate: Boolean,\n        onCheck: Function\n    },\n    setup(props) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const NTree = inject(treeInjectionKey);\n        function doCheck(value) {\n            const { onCheck } = props;\n            if (onCheck)\n                return onCheck(value);\n        }\n        function handleUpdateValue(value) {\n            if (props.indeterminate) {\n                doCheck(false);\n            }\n            else {\n                doCheck(value);\n            }\n        }\n        return {\n            handleUpdateValue,\n            mergedTheme: NTree.mergedThemeRef\n        };\n    },\n    render() {\n        const { clsPrefix, mergedTheme, checked, indeterminate, disabled, focusable, handleUpdateValue } = this;\n        return (h(\"span\", { class: [\n                `${clsPrefix}-tree-node-checkbox`,\n                this.right && `${clsPrefix}-tree-node-checkbox--right`\n            ], \"data-checkbox\": true },\n            h(NCheckbox, { focusable: focusable, disabled: disabled, theme: mergedTheme.peers.Checkbox, themeOverrides: mergedTheme.peerOverrides.Checkbox, checked: checked, indeterminate: indeterminate, onUpdateChecked: handleUpdateValue })));\n    }\n});\n"],"mappings":"AAAA,SAASA,CAAT,EAAYC,eAAZ,EAA6BC,MAA7B,QAA2C,KAA3C;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,gBAAT,QAAiC,aAAjC;AACA,eAAeH,eAAe,CAAC;EAC3BI,IAAI,EAAE,mBADqB;EAE3BC,KAAK,EAAE;IACHC,SAAS,EAAE;MACPC,IAAI,EAAEC,MADC;MAEPC,QAAQ,EAAE;IAFH,CADR;IAKHC,KAAK,EAAEC,OALJ;IAMHC,SAAS,EAAED,OANR;IAOHE,QAAQ,EAAEF,OAPP;IAQHG,OAAO,EAAEH,OARN;IASHI,aAAa,EAAEJ,OATZ;IAUHK,OAAO,EAAEC;EAVN,CAFoB;;EAc3BC,KAAK,CAACb,KAAD,EAAQ;IACT;IACA,MAAMc,KAAK,GAAGlB,MAAM,CAACE,gBAAD,CAApB;;IACA,SAASiB,OAAT,CAAiBC,KAAjB,EAAwB;MACpB,MAAM;QAAEL;MAAF,IAAcX,KAApB;MACA,IAAIW,OAAJ,EACI,OAAOA,OAAO,CAACK,KAAD,CAAd;IACP;;IACD,SAASC,iBAAT,CAA2BD,KAA3B,EAAkC;MAC9B,IAAIhB,KAAK,CAACU,aAAV,EAAyB;QACrBK,OAAO,CAAC,KAAD,CAAP;MACH,CAFD,MAGK;QACDA,OAAO,CAACC,KAAD,CAAP;MACH;IACJ;;IACD,OAAO;MACHC,iBADG;MAEHC,WAAW,EAAEJ,KAAK,CAACK;IAFhB,CAAP;EAIH,CAlC0B;;EAmC3BC,MAAM,GAAG;IACL,MAAM;MAAEnB,SAAF;MAAaiB,WAAb;MAA0BT,OAA1B;MAAmCC,aAAnC;MAAkDF,QAAlD;MAA4DD,SAA5D;MAAuEU;IAAvE,IAA6F,IAAnG;IACA,OAAQvB,CAAC,CAAC,MAAD,EAAS;MAAE2B,KAAK,EAAE,CAClB,GAAEpB,SAAU,qBADM,EAEnB,KAAKI,KAAL,IAAe,GAAEJ,SAAU,4BAFR,CAAT;MAGX,iBAAiB;IAHN,CAAT,EAILP,CAAC,CAACG,SAAD,EAAY;MAAEU,SAAS,EAAEA,SAAb;MAAwBC,QAAQ,EAAEA,QAAlC;MAA4Cc,KAAK,EAAEJ,WAAW,CAACK,KAAZ,CAAkBC,QAArE;MAA+EC,cAAc,EAAEP,WAAW,CAACQ,aAAZ,CAA0BF,QAAzH;MAAmIf,OAAO,EAAEA,OAA5I;MAAqJC,aAAa,EAAEA,aAApK;MAAmLiB,eAAe,EAAEV;IAApM,CAAZ,CAJI,CAAT;EAKH;;AA1C0B,CAAD,CAA9B"},"metadata":{},"sourceType":"module"}