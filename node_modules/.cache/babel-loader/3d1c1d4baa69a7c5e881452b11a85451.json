{"ast":null,"code":"const __default__ = {\n  name: \"ActionBar\"\n};\nimport { ref, toRefs } from 'vue'; // 引入naive ui组件\n\nimport { NGrid, NGridItem, NEl, NDivider, NIcon, NButton, NBreadcrumb, NBreadcrumbItem, NDropdown } from 'naive-ui'; // 引入 vicon 组件\n\nimport { MenuFoldOutlined as MenuIcon, MenuUnfoldOutlined as MenuUnIcon } from '@vicons/antd';\nimport { mergeObject } from '../../../util/BaseUtil'; // props 参数\n\nexport default /*#__PURE__*/Object.assign(__default__, {\n  props: {\n    title: {\n      // 接收标题参数\n      type: Array,\n      // 参数类型为 Array 类型\n      default: [{\n        lable: '标题',\n        list: [{\n          label: \"子标题一\",\n          key: 1\n        }, {\n          label: \"子标题二\",\n          key: 2\n        }]\n      }] // 默认值\n\n    },\n    menuStatus: {\n      // 接收菜单按钮状态参数\n      type: Boolean,\n      // 参数类型为 Boolean 类型\n      default: true // 默认值\n\n    },\n    menuEnable: {\n      // 接收菜单按钮状态参数\n      type: Boolean,\n      // 参数类型为 Boolean 类型\n      default: true // 默认值\n\n    }\n  },\n  emits: ['menuClick'],\n\n  setup(__props, {\n    expose,\n    emit: emits\n  }) {\n    expose();\n    const props = __props; // 引入 vue\n    // 接收响应式数据\n\n    const {\n      title,\n      menuStatus,\n      menuEnable\n    } = toRefs(props); // 自定义事件\n    // Menu 按钮点击事件\n\n    const menuClick = () => {\n      emits('menuClick');\n    }; // Menu 按钮相关操作\n\n\n    const __returned__ = {\n      props,\n      title,\n      menuStatus,\n      menuEnable,\n      emits,\n      menuClick,\n      ref,\n      toRefs,\n      NGrid,\n      NGridItem,\n      NEl,\n      NDivider,\n      NIcon,\n      NButton,\n      NBreadcrumb,\n      NBreadcrumbItem,\n      NDropdown,\n      MenuIcon,\n      MenuUnIcon,\n      mergeObject\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n});","map":{"version":3,"mappings":"AAsGA,oBAAe;EACXA,IAAI,EAAE;AADK,CAAf;AA3DA,SAASC,GAAT,EAAcC,MAAd,QAA4B,KAA5B,C,CACA;;AACA,SACIC,KADJ,EACUC,SADV,EACoBC,GADpB,EACwBC,QADxB,EACiCC,KADjC,EACuCC,OADvC,EAC+CC,WAD/C,EAEIC,eAFJ,EAEoBC,SAFpB,QAGO,UAHP,C,CAKA;;AACA,SACIC,gBAAgB,IAAIC,QADxB,EAEIC,kBAAkB,IAAIC,UAF1B,QAGO,cAHP;AAKA,SAASC,WAAT,QAA4B,wBAA5B,C,CAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2BAhBA;IA4CA;;IACA,MAAM;MAAEC,KAAF;MAASC,UAAT;MAAqBC;IAArB,IAAoCjB,MAAM,CAACkB,KAAD,CAAhD,EAEA;IAEA;;IACA,MAAMC,SAAS,GAAG,MAAM;MACpBC,KAAK,CAAC,WAAD,CAAL;IACH,CAFD,EAIA","names":["name","ref","toRefs","NGrid","NGridItem","NEl","NDivider","NIcon","NButton","NBreadcrumb","NBreadcrumbItem","NDropdown","MenuFoldOutlined","MenuIcon","MenuUnfoldOutlined","MenuUnIcon","mergeObject","title","menuStatus","menuEnable","props","menuClick","emits"],"sources":["E:/VCode/SHC社区管理系统/shc_community_manager_system/src/components/ActionBar.vue"],"sourcesContent":["<template>\r\n    <n-grid cols=\"1\" item-responsive>\r\n        <n-grid-item>\r\n            <!-- ActionBar 容器 -->\r\n            <n-el tag=\"div\" class=\"action-bar\">\r\n                <!-- Menu 按钮容器 -->\r\n                <div class=\"menu-btn\" v-if=\"menuEnable\">\r\n                    <!-- Menu 按钮 -->\r\n                    <n-button @click=\"menuClick\" style=\"width:var(--height-medium);height:var(--height-medium);\" quaternary circle>\r\n                        <!-- Menu 图片插槽 -->\r\n                        <template #icon>\r\n                            <n-icon>\r\n                                <menu-icon v-show=\"menuStatus\" />\r\n                                <menu-un-icon v-show=\"!menuStatus\" />\r\n                            </n-icon>\r\n                        </template>\r\n                    </n-button>\r\n                </div>\r\n                <!-- title 容器 -->\r\n                <div class=\"title-box\" :style=\"!menuEnable ? 'padding-left: 16px' : ''\">\r\n                    <!-- 面包屑标题 -->\r\n                    <n-breadcrumb>\r\n                        <n-breadcrumb-item :key=\"index\" v-for=\"(item,index) in title\">\r\n                            <n-dropdown :options=\"item.list\">\r\n                                <div class=\"trigger\">\r\n                                    {{item.lable}}\r\n                                </div>\r\n                            </n-dropdown>\r\n                        </n-breadcrumb-item>\r\n                    </n-breadcrumb>\r\n                </div>\r\n                <!-- 其他功能容器 -->\r\n                <div class=\"action-other\">\r\n                    <!-- 插槽 -->\r\n                    <slot></slot>\r\n                </div>\r\n            </n-el>\r\n        </n-grid-item>\r\n    </n-grid>\r\n</template>\r\n\r\n<script setup>\r\n// 引入 vue\r\nimport { ref, toRefs } from 'vue'\r\n// 引入naive ui组件\r\nimport {\r\n    NGrid,NGridItem,NEl,NDivider,NIcon,NButton,NBreadcrumb,\r\n    NBreadcrumbItem,NDropdown,\r\n} from 'naive-ui'\r\n\r\n// 引入 vicon 组件\r\nimport {\r\n    MenuFoldOutlined as MenuIcon,\r\n    MenuUnfoldOutlined as MenuUnIcon,\r\n} from '@vicons/antd'\r\n\r\nimport { mergeObject } from '../../../util/BaseUtil'\r\n\r\n// props 参数\r\nconst props = defineProps({\r\n    title: { // 接收标题参数\r\n        type: Array, // 参数类型为 Array 类型\r\n        default: [{\r\n            lable: '标题',\r\n            list: [\r\n                {\r\n                    label: \"子标题一\",\r\n                    key: 1\r\n                },\r\n                {\r\n                    label: \"子标题二\",\r\n                    key: 2\r\n                }\r\n            ]\r\n        }] // 默认值\r\n    },\r\n    menuStatus: { // 接收菜单按钮状态参数\r\n        type: Boolean, // 参数类型为 Boolean 类型\r\n        default: true // 默认值\r\n    },\r\n    menuEnable: { // 接收菜单按钮状态参数\r\n        type: Boolean, // 参数类型为 Boolean 类型\r\n        default: true // 默认值\r\n    },\r\n})\r\n\r\n// 接收响应式数据\r\nconst { title, menuStatus, menuEnable } = toRefs(props);\r\n\r\n// 自定义事件\r\nconst emits = defineEmits(['menuClick'])\r\n// Menu 按钮点击事件\r\nconst menuClick = () => {\r\n    emits('menuClick')\r\n}\r\n\r\n// Menu 按钮相关操作\r\n\r\n</script>\r\n\r\n<!-- 定义组件名称 -->\r\n<script>\r\nexport default {\r\n    name: \"ActionBar\"\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.action-bar {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    height: var(--height-large);\r\n    background-color: var(--card-color);\r\n    border-bottom: 1px solid var(--divider-color);\r\n}\r\n\r\n.menu-btn {\r\n    width: var(--height-large);\r\n    height: var(--height-large);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n\r\n.trigger {\r\n  padding: 4px;\r\n  margin: -4px;\r\n  border-radius: inherit;\r\n}\r\n\r\n.title-box {\r\n    max-width: 320px;\r\n}\r\n\r\n.action-other {\r\n    box-sizing: border-box;\r\n    padding-right: 16px;\r\n    flex: 1;\r\n    display: flex;\r\n    justify-content: right;\r\n    align-items: center;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}