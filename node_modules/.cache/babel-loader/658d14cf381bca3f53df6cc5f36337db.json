{"ast":null,"code":"const oppositionPositions = {\n  top: 'bottom',\n  bottom: 'top',\n  left: 'right',\n  right: 'left'\n};\nconst oppositeAligns = {\n  start: 'end',\n  center: 'center',\n  end: 'start'\n};\nconst propToCompare = {\n  top: 'height',\n  bottom: 'height',\n  left: 'width',\n  right: 'width'\n};\nconst transformOrigins = {\n  'bottom-start': 'top left',\n  bottom: 'top center',\n  'bottom-end': 'top right',\n  'top-start': 'bottom left',\n  top: 'bottom center',\n  'top-end': 'bottom right',\n  'right-start': 'top left',\n  right: 'center left',\n  'right-end': 'bottom left',\n  'left-start': 'top right',\n  left: 'center right',\n  'left-end': 'bottom right'\n};\nconst overlapTransformOrigin = {\n  'bottom-start': 'bottom left',\n  bottom: 'bottom center',\n  'bottom-end': 'bottom right',\n  'top-start': 'top left',\n  top: 'top center',\n  'top-end': 'top right',\n  'right-start': 'top right',\n  right: 'center right',\n  'right-end': 'bottom right',\n  'left-start': 'top left',\n  left: 'center left',\n  'left-end': 'bottom left'\n};\nconst oppositeAlignCssPositionProps = {\n  'bottom-start': 'right',\n  'bottom-end': 'left',\n  'top-start': 'right',\n  'top-end': 'left',\n  'right-start': 'bottom',\n  'right-end': 'top',\n  'left-start': 'bottom',\n  'left-end': 'top'\n};\nconst keepOffsetDirection = {\n  top: true,\n  bottom: false,\n  left: true,\n  right: false // left--\n\n};\nconst cssPositionToOppositeAlign = {\n  top: 'end',\n  bottom: 'start',\n  left: 'end',\n  right: 'start'\n};\nexport function getPlacementAndOffsetOfFollower(placement, targetRect, followerRect, shift, flip, overlap) {\n  if (!flip || overlap) {\n    return {\n      placement: placement,\n      top: 0,\n      left: 0\n    };\n  }\n\n  const [position, align] = placement.split('-');\n  let properAlign = align !== null && align !== void 0 ? align : 'center';\n  let properOffset = {\n    top: 0,\n    left: 0\n  };\n\n  const deriveOffset = (oppositeAlignCssSizeProp, alignCssPositionProp, offsetVertically) => {\n    let left = 0;\n    let top = 0;\n    const diff = followerRect[oppositeAlignCssSizeProp] - targetRect[alignCssPositionProp] - targetRect[oppositeAlignCssSizeProp];\n\n    if (diff > 0 && shift) {\n      if (offsetVertically) {\n        //       screen border\n        // |-----------------------------------------|\n        // |                    | f  |               |\n        // |                    | o  |               |\n        // |                    | l  |               |\n        // |                    | l  |----           |\n        // |                    | o  |tar |          |\n        // |                    | w  |get |          |\n        // |                    | e  |    |          |\n        // |                    | r  |----           |\n        // |                     ----                |\n        // |-----------------------------------------|\n        top = keepOffsetDirection[alignCssPositionProp] ? diff : -diff;\n      } else {\n        //       screen border\n        // |----------------------------------------|\n        // |                                        |\n        // |          ----------                    |\n        // |          | target |                    |\n        // |       ----------------------------------\n        // |       |       follower                 |\n        // |       ----------------------------------\n        // |                                        |\n        // |----------------------------------------|\n        left = keepOffsetDirection[alignCssPositionProp] ? diff : -diff;\n      }\n    }\n\n    return {\n      left,\n      top\n    };\n  };\n\n  const offsetVertically = position === 'left' || position === 'right'; // choose proper placement for non-center align\n\n  if (properAlign !== 'center') {\n    const oppositeAlignCssPositionProp = oppositeAlignCssPositionProps[placement];\n    const currentAlignCssPositionProp = oppositionPositions[oppositeAlignCssPositionProp];\n    const oppositeAlignCssSizeProp = propToCompare[oppositeAlignCssPositionProp]; // if follower rect is larger than target rect in align direction\n    // ----------[ target ]---------|\n    // ----------[     follower     ]\n\n    if (followerRect[oppositeAlignCssSizeProp] > targetRect[oppositeAlignCssSizeProp]) {\n      if ( // current space is not enough\n      // ----------[ target ]---------|\n      // -------[     follower        ]\n      targetRect[oppositeAlignCssPositionProp] + targetRect[oppositeAlignCssSizeProp] < followerRect[oppositeAlignCssSizeProp]) {\n        const followerOverTargetSize = (followerRect[oppositeAlignCssSizeProp] - targetRect[oppositeAlignCssSizeProp]) / 2;\n\n        if (targetRect[oppositeAlignCssPositionProp] < followerOverTargetSize || targetRect[currentAlignCssPositionProp] < followerOverTargetSize) {\n          // opposite align has larger space\n          // -------[ target ]-----------|\n          // -------[     follower     ]-|\n          if (targetRect[oppositeAlignCssPositionProp] < targetRect[currentAlignCssPositionProp]) {\n            properAlign = oppositeAligns[align];\n            properOffset = deriveOffset(oppositeAlignCssSizeProp, currentAlignCssPositionProp, offsetVertically);\n          } else {\n            // ----------------[ target ]----|\n            // --------[   follower     ]----|\n            properOffset = deriveOffset(oppositeAlignCssSizeProp, oppositeAlignCssPositionProp, offsetVertically);\n          }\n        } else {\n          // 'center' align is better\n          // ------------[ target ]--------|\n          // -------[       follower    ]--|\n          properAlign = 'center';\n        }\n      }\n    } else if (followerRect[oppositeAlignCssSizeProp] < targetRect[oppositeAlignCssSizeProp]) {\n      // TODO: maybe center is better\n      if (targetRect[currentAlignCssPositionProp] < 0 && // opposite align has larger space\n      // ------------[   target   ]\n      // ----------------[follower]\n      targetRect[oppositeAlignCssPositionProp] > targetRect[currentAlignCssPositionProp]) {\n        properAlign = oppositeAligns[align];\n      }\n    }\n  } else {\n    const possibleAlternativeAlignCssPositionProp1 = position === 'bottom' || position === 'top' ? 'left' : 'top';\n    const possibleAlternativeAlignCssPositionProp2 = oppositionPositions[possibleAlternativeAlignCssPositionProp1];\n    const alternativeAlignCssSizeProp = propToCompare[possibleAlternativeAlignCssPositionProp1];\n    const followerOverTargetSize = (followerRect[alternativeAlignCssSizeProp] - targetRect[alternativeAlignCssSizeProp]) / 2;\n\n    if ( // center is not enough\n    // ----------- [ target ]--|\n    // -------[     follower     ]\n    targetRect[possibleAlternativeAlignCssPositionProp1] < followerOverTargetSize || targetRect[possibleAlternativeAlignCssPositionProp2] < followerOverTargetSize) {\n      // alternative 2 position's space is larger\n      if (targetRect[possibleAlternativeAlignCssPositionProp1] > targetRect[possibleAlternativeAlignCssPositionProp2]) {\n        properAlign = cssPositionToOppositeAlign[possibleAlternativeAlignCssPositionProp1];\n        properOffset = deriveOffset(alternativeAlignCssSizeProp, possibleAlternativeAlignCssPositionProp1, offsetVertically);\n      } else {\n        // alternative 1 position's space is larger\n        properAlign = cssPositionToOppositeAlign[possibleAlternativeAlignCssPositionProp2];\n        properOffset = deriveOffset(alternativeAlignCssSizeProp, possibleAlternativeAlignCssPositionProp2, offsetVertically);\n      }\n    }\n  }\n\n  let properPosition = position;\n\n  if ( // space is not enough\n  targetRect[position] < followerRect[propToCompare[position]] && // opposite position's space is larger\n  targetRect[position] < targetRect[oppositionPositions[position]]) {\n    properPosition = oppositionPositions[position];\n  }\n\n  return {\n    placement: properAlign !== 'center' ? `${properPosition}-${properAlign}` : properPosition,\n    left: properOffset.left,\n    top: properOffset.top\n  };\n}\nexport function getProperTransformOrigin(placement, overlap) {\n  if (overlap) return overlapTransformOrigin[placement];\n  return transformOrigins[placement];\n} // ------------\n// |  offset  |\n// |          |\n// | [target] |\n// |          |\n// ------------\n// TODO: refactor it to remove dup logic\n\nexport function getOffset(placement, offsetRect, targetRect, offsetTopToStandardPlacement, offsetLeftToStandardPlacement, overlap) {\n  if (overlap) {\n    switch (placement) {\n      case 'bottom-start':\n        return {\n          top: `${Math.round(targetRect.top - offsetRect.top + targetRect.height)}px`,\n          left: `${Math.round(targetRect.left - offsetRect.left)}px`,\n          transform: 'translateY(-100%)'\n        };\n\n      case 'bottom-end':\n        return {\n          top: `${Math.round(targetRect.top - offsetRect.top + targetRect.height)}px`,\n          left: `${Math.round(targetRect.left - offsetRect.left + targetRect.width)}px`,\n          transform: 'translateX(-100%) translateY(-100%)'\n        };\n\n      case 'top-start':\n        return {\n          top: `${Math.round(targetRect.top - offsetRect.top)}px`,\n          left: `${Math.round(targetRect.left - offsetRect.left)}px`,\n          transform: ''\n        };\n\n      case 'top-end':\n        return {\n          top: `${Math.round(targetRect.top - offsetRect.top)}px`,\n          left: `${Math.round(targetRect.left - offsetRect.left + targetRect.width)}px`,\n          transform: 'translateX(-100%)'\n        };\n\n      case 'right-start':\n        return {\n          top: `${Math.round(targetRect.top - offsetRect.top)}px`,\n          left: `${Math.round(targetRect.left - offsetRect.left + targetRect.width)}px`,\n          transform: 'translateX(-100%)'\n        };\n\n      case 'right-end':\n        return {\n          top: `${Math.round(targetRect.top - offsetRect.top + targetRect.height)}px`,\n          left: `${Math.round(targetRect.left - offsetRect.left + targetRect.width)}px`,\n          transform: 'translateX(-100%) translateY(-100%)'\n        };\n\n      case 'left-start':\n        return {\n          top: `${Math.round(targetRect.top - offsetRect.top)}px`,\n          left: `${Math.round(targetRect.left - offsetRect.left)}px`,\n          transform: ''\n        };\n\n      case 'left-end':\n        return {\n          top: `${Math.round(targetRect.top - offsetRect.top + targetRect.height)}px`,\n          left: `${Math.round(targetRect.left - offsetRect.left)}px`,\n          transform: 'translateY(-100%)'\n        };\n\n      case 'top':\n        return {\n          top: `${Math.round(targetRect.top - offsetRect.top)}px`,\n          left: `${Math.round(targetRect.left - offsetRect.left + targetRect.width / 2)}px`,\n          transform: 'translateX(-50%)'\n        };\n\n      case 'right':\n        return {\n          top: `${Math.round(targetRect.top - offsetRect.top + targetRect.height / 2)}px`,\n          left: `${Math.round(targetRect.left - offsetRect.left + targetRect.width)}px`,\n          transform: 'translateX(-100%) translateY(-50%)'\n        };\n\n      case 'left':\n        return {\n          top: `${Math.round(targetRect.top - offsetRect.top + targetRect.height / 2)}px`,\n          left: `${Math.round(targetRect.left - offsetRect.left)}px`,\n          transform: 'translateY(-50%)'\n        };\n\n      case 'bottom':\n      default:\n        return {\n          top: `${Math.round(targetRect.top - offsetRect.top + targetRect.height)}px`,\n          left: `${Math.round(targetRect.left - offsetRect.left + targetRect.width / 2)}px`,\n          transform: 'translateX(-50%) translateY(-100%)'\n        };\n    }\n  }\n\n  switch (placement) {\n    case 'bottom-start':\n      return {\n        top: `${Math.round(targetRect.top - offsetRect.top + targetRect.height + offsetTopToStandardPlacement)}px`,\n        left: `${Math.round(targetRect.left - offsetRect.left + offsetLeftToStandardPlacement)}px`,\n        transform: ''\n      };\n\n    case 'bottom-end':\n      return {\n        top: `${Math.round(targetRect.top - offsetRect.top + targetRect.height + offsetTopToStandardPlacement)}px`,\n        left: `${Math.round(targetRect.left - offsetRect.left + targetRect.width + offsetLeftToStandardPlacement)}px`,\n        transform: 'translateX(-100%)'\n      };\n\n    case 'top-start':\n      return {\n        top: `${Math.round(targetRect.top - offsetRect.top + offsetTopToStandardPlacement)}px`,\n        left: `${Math.round(targetRect.left - offsetRect.left + offsetLeftToStandardPlacement)}px`,\n        transform: 'translateY(-100%)'\n      };\n\n    case 'top-end':\n      return {\n        top: `${Math.round(targetRect.top - offsetRect.top + offsetTopToStandardPlacement)}px`,\n        left: `${Math.round(targetRect.left - offsetRect.left + targetRect.width + offsetLeftToStandardPlacement)}px`,\n        transform: 'translateX(-100%) translateY(-100%)'\n      };\n\n    case 'right-start':\n      return {\n        top: `${Math.round(targetRect.top - offsetRect.top + offsetTopToStandardPlacement)}px`,\n        left: `${Math.round(targetRect.left - offsetRect.left + targetRect.width + offsetLeftToStandardPlacement)}px`,\n        transform: ''\n      };\n\n    case 'right-end':\n      return {\n        top: `${Math.round(targetRect.top - offsetRect.top + targetRect.height + offsetTopToStandardPlacement)}px`,\n        left: `${Math.round(targetRect.left - offsetRect.left + targetRect.width + offsetLeftToStandardPlacement)}px`,\n        transform: 'translateY(-100%)'\n      };\n\n    case 'left-start':\n      return {\n        top: `${Math.round(targetRect.top - offsetRect.top + offsetTopToStandardPlacement)}px`,\n        left: `${Math.round(targetRect.left - offsetRect.left + offsetLeftToStandardPlacement)}px`,\n        transform: 'translateX(-100%)'\n      };\n\n    case 'left-end':\n      return {\n        top: `${Math.round(targetRect.top - offsetRect.top + targetRect.height + offsetTopToStandardPlacement)}px`,\n        left: `${Math.round(targetRect.left - offsetRect.left + offsetLeftToStandardPlacement)}px`,\n        transform: 'translateX(-100%) translateY(-100%)'\n      };\n\n    case 'top':\n      return {\n        top: `${Math.round(targetRect.top - offsetRect.top + offsetTopToStandardPlacement)}px`,\n        left: `${Math.round(targetRect.left - offsetRect.left + targetRect.width / 2 + offsetLeftToStandardPlacement)}px`,\n        transform: 'translateY(-100%) translateX(-50%)'\n      };\n\n    case 'right':\n      return {\n        top: `${Math.round(targetRect.top - offsetRect.top + targetRect.height / 2 + offsetTopToStandardPlacement)}px`,\n        left: `${Math.round(targetRect.left - offsetRect.left + targetRect.width + offsetLeftToStandardPlacement)}px`,\n        transform: 'translateY(-50%)'\n      };\n\n    case 'left':\n      return {\n        top: `${Math.round(targetRect.top - offsetRect.top + targetRect.height / 2 + offsetTopToStandardPlacement)}px`,\n        left: `${Math.round(targetRect.left - offsetRect.left + offsetLeftToStandardPlacement)}px`,\n        transform: 'translateY(-50%) translateX(-100%)'\n      };\n\n    case 'bottom':\n    default:\n      return {\n        top: `${Math.round(targetRect.top - offsetRect.top + targetRect.height + offsetTopToStandardPlacement)}px`,\n        left: `${Math.round(targetRect.left - offsetRect.left + targetRect.width / 2 + offsetLeftToStandardPlacement)}px`,\n        transform: 'translateX(-50%)'\n      };\n  }\n}","map":{"version":3,"names":["oppositionPositions","top","bottom","left","right","oppositeAligns","start","center","end","propToCompare","transformOrigins","overlapTransformOrigin","oppositeAlignCssPositionProps","keepOffsetDirection","cssPositionToOppositeAlign","getPlacementAndOffsetOfFollower","placement","targetRect","followerRect","shift","flip","overlap","position","align","split","properAlign","properOffset","deriveOffset","oppositeAlignCssSizeProp","alignCssPositionProp","offsetVertically","diff","oppositeAlignCssPositionProp","currentAlignCssPositionProp","followerOverTargetSize","possibleAlternativeAlignCssPositionProp1","possibleAlternativeAlignCssPositionProp2","alternativeAlignCssSizeProp","properPosition","getProperTransformOrigin","getOffset","offsetRect","offsetTopToStandardPlacement","offsetLeftToStandardPlacement","Math","round","height","transform","width"],"sources":["E:/VCode/SHC社区管理系统/shc_community_manager_system/node_modules/vueuc/es/binder/src/get-placement-style.js"],"sourcesContent":["const oppositionPositions = {\n    top: 'bottom',\n    bottom: 'top',\n    left: 'right',\n    right: 'left'\n};\nconst oppositeAligns = {\n    start: 'end',\n    center: 'center',\n    end: 'start'\n};\nconst propToCompare = {\n    top: 'height',\n    bottom: 'height',\n    left: 'width',\n    right: 'width'\n};\nconst transformOrigins = {\n    'bottom-start': 'top left',\n    bottom: 'top center',\n    'bottom-end': 'top right',\n    'top-start': 'bottom left',\n    top: 'bottom center',\n    'top-end': 'bottom right',\n    'right-start': 'top left',\n    right: 'center left',\n    'right-end': 'bottom left',\n    'left-start': 'top right',\n    left: 'center right',\n    'left-end': 'bottom right'\n};\nconst overlapTransformOrigin = {\n    'bottom-start': 'bottom left',\n    bottom: 'bottom center',\n    'bottom-end': 'bottom right',\n    'top-start': 'top left',\n    top: 'top center',\n    'top-end': 'top right',\n    'right-start': 'top right',\n    right: 'center right',\n    'right-end': 'bottom right',\n    'left-start': 'top left',\n    left: 'center left',\n    'left-end': 'bottom left'\n};\nconst oppositeAlignCssPositionProps = {\n    'bottom-start': 'right',\n    'bottom-end': 'left',\n    'top-start': 'right',\n    'top-end': 'left',\n    'right-start': 'bottom',\n    'right-end': 'top',\n    'left-start': 'bottom',\n    'left-end': 'top'\n};\nconst keepOffsetDirection = {\n    top: true,\n    bottom: false,\n    left: true,\n    right: false // left--\n};\nconst cssPositionToOppositeAlign = {\n    top: 'end',\n    bottom: 'start',\n    left: 'end',\n    right: 'start'\n};\nexport function getPlacementAndOffsetOfFollower(placement, targetRect, followerRect, shift, flip, overlap) {\n    if (!flip || overlap) {\n        return { placement: placement, top: 0, left: 0 };\n    }\n    const [position, align] = placement.split('-');\n    let properAlign = align !== null && align !== void 0 ? align : 'center';\n    let properOffset = {\n        top: 0,\n        left: 0\n    };\n    const deriveOffset = (oppositeAlignCssSizeProp, alignCssPositionProp, offsetVertically) => {\n        let left = 0;\n        let top = 0;\n        const diff = followerRect[oppositeAlignCssSizeProp] -\n            targetRect[alignCssPositionProp] -\n            targetRect[oppositeAlignCssSizeProp];\n        if (diff > 0 && shift) {\n            if (offsetVertically) {\n                //       screen border\n                // |-----------------------------------------|\n                // |                    | f  |               |\n                // |                    | o  |               |\n                // |                    | l  |               |\n                // |                    | l  |----           |\n                // |                    | o  |tar |          |\n                // |                    | w  |get |          |\n                // |                    | e  |    |          |\n                // |                    | r  |----           |\n                // |                     ----                |\n                // |-----------------------------------------|\n                top = keepOffsetDirection[alignCssPositionProp] ? diff : -diff;\n            }\n            else {\n                //       screen border\n                // |----------------------------------------|\n                // |                                        |\n                // |          ----------                    |\n                // |          | target |                    |\n                // |       ----------------------------------\n                // |       |       follower                 |\n                // |       ----------------------------------\n                // |                                        |\n                // |----------------------------------------|\n                left = keepOffsetDirection[alignCssPositionProp] ? diff : -diff;\n            }\n        }\n        return {\n            left,\n            top\n        };\n    };\n    const offsetVertically = position === 'left' || position === 'right';\n    // choose proper placement for non-center align\n    if (properAlign !== 'center') {\n        const oppositeAlignCssPositionProp = oppositeAlignCssPositionProps[placement];\n        const currentAlignCssPositionProp = oppositionPositions[oppositeAlignCssPositionProp];\n        const oppositeAlignCssSizeProp = propToCompare[oppositeAlignCssPositionProp];\n        // if follower rect is larger than target rect in align direction\n        // ----------[ target ]---------|\n        // ----------[     follower     ]\n        if (followerRect[oppositeAlignCssSizeProp] >\n            targetRect[oppositeAlignCssSizeProp]) {\n            if (\n            // current space is not enough\n            // ----------[ target ]---------|\n            // -------[     follower        ]\n            targetRect[oppositeAlignCssPositionProp] +\n                targetRect[oppositeAlignCssSizeProp] <\n                followerRect[oppositeAlignCssSizeProp]) {\n                const followerOverTargetSize = (followerRect[oppositeAlignCssSizeProp] -\n                    targetRect[oppositeAlignCssSizeProp]) /\n                    2;\n                if (targetRect[oppositeAlignCssPositionProp] < followerOverTargetSize ||\n                    targetRect[currentAlignCssPositionProp] < followerOverTargetSize) {\n                    // opposite align has larger space\n                    // -------[ target ]-----------|\n                    // -------[     follower     ]-|\n                    if (targetRect[oppositeAlignCssPositionProp] <\n                        targetRect[currentAlignCssPositionProp]) {\n                        properAlign = oppositeAligns[align];\n                        properOffset = deriveOffset(oppositeAlignCssSizeProp, currentAlignCssPositionProp, offsetVertically);\n                    }\n                    else {\n                        // ----------------[ target ]----|\n                        // --------[   follower     ]----|\n                        properOffset = deriveOffset(oppositeAlignCssSizeProp, oppositeAlignCssPositionProp, offsetVertically);\n                    }\n                }\n                else {\n                    // 'center' align is better\n                    // ------------[ target ]--------|\n                    // -------[       follower    ]--|\n                    properAlign = 'center';\n                }\n            }\n        }\n        else if (followerRect[oppositeAlignCssSizeProp] <\n            targetRect[oppositeAlignCssSizeProp]) {\n            // TODO: maybe center is better\n            if (targetRect[currentAlignCssPositionProp] < 0 &&\n                // opposite align has larger space\n                // ------------[   target   ]\n                // ----------------[follower]\n                targetRect[oppositeAlignCssPositionProp] >\n                    targetRect[currentAlignCssPositionProp]) {\n                properAlign = oppositeAligns[align];\n            }\n        }\n    }\n    else {\n        const possibleAlternativeAlignCssPositionProp1 = position === 'bottom' || position === 'top' ? 'left' : 'top';\n        const possibleAlternativeAlignCssPositionProp2 = oppositionPositions[possibleAlternativeAlignCssPositionProp1];\n        const alternativeAlignCssSizeProp = propToCompare[possibleAlternativeAlignCssPositionProp1];\n        const followerOverTargetSize = (followerRect[alternativeAlignCssSizeProp] -\n            targetRect[alternativeAlignCssSizeProp]) /\n            2;\n        if (\n        // center is not enough\n        // ----------- [ target ]--|\n        // -------[     follower     ]\n        targetRect[possibleAlternativeAlignCssPositionProp1] <\n            followerOverTargetSize ||\n            targetRect[possibleAlternativeAlignCssPositionProp2] <\n                followerOverTargetSize) {\n            // alternative 2 position's space is larger\n            if (targetRect[possibleAlternativeAlignCssPositionProp1] >\n                targetRect[possibleAlternativeAlignCssPositionProp2]) {\n                properAlign =\n                    cssPositionToOppositeAlign[possibleAlternativeAlignCssPositionProp1];\n                properOffset = deriveOffset(alternativeAlignCssSizeProp, possibleAlternativeAlignCssPositionProp1, offsetVertically);\n            }\n            else {\n                // alternative 1 position's space is larger\n                properAlign =\n                    cssPositionToOppositeAlign[possibleAlternativeAlignCssPositionProp2];\n                properOffset = deriveOffset(alternativeAlignCssSizeProp, possibleAlternativeAlignCssPositionProp2, offsetVertically);\n            }\n        }\n    }\n    let properPosition = position;\n    if (\n    // space is not enough\n    targetRect[position] < followerRect[propToCompare[position]] &&\n        // opposite position's space is larger\n        targetRect[position] < targetRect[oppositionPositions[position]]) {\n        properPosition = oppositionPositions[position];\n    }\n    return {\n        placement: properAlign !== 'center'\n            ? `${properPosition}-${properAlign}`\n            : properPosition,\n        left: properOffset.left,\n        top: properOffset.top\n    };\n}\nexport function getProperTransformOrigin(placement, overlap) {\n    if (overlap)\n        return overlapTransformOrigin[placement];\n    return transformOrigins[placement];\n}\n// ------------\n// |  offset  |\n// |          |\n// | [target] |\n// |          |\n// ------------\n// TODO: refactor it to remove dup logic\nexport function getOffset(placement, offsetRect, targetRect, offsetTopToStandardPlacement, offsetLeftToStandardPlacement, overlap) {\n    if (overlap) {\n        switch (placement) {\n            case 'bottom-start':\n                return {\n                    top: `${Math.round(targetRect.top - offsetRect.top + targetRect.height)}px`,\n                    left: `${Math.round(targetRect.left - offsetRect.left)}px`,\n                    transform: 'translateY(-100%)'\n                };\n            case 'bottom-end':\n                return {\n                    top: `${Math.round(targetRect.top - offsetRect.top + targetRect.height)}px`,\n                    left: `${Math.round(targetRect.left - offsetRect.left + targetRect.width)}px`,\n                    transform: 'translateX(-100%) translateY(-100%)'\n                };\n            case 'top-start':\n                return {\n                    top: `${Math.round(targetRect.top - offsetRect.top)}px`,\n                    left: `${Math.round(targetRect.left - offsetRect.left)}px`,\n                    transform: ''\n                };\n            case 'top-end':\n                return {\n                    top: `${Math.round(targetRect.top - offsetRect.top)}px`,\n                    left: `${Math.round(targetRect.left - offsetRect.left + targetRect.width)}px`,\n                    transform: 'translateX(-100%)'\n                };\n            case 'right-start':\n                return {\n                    top: `${Math.round(targetRect.top - offsetRect.top)}px`,\n                    left: `${Math.round(targetRect.left - offsetRect.left + targetRect.width)}px`,\n                    transform: 'translateX(-100%)'\n                };\n            case 'right-end':\n                return {\n                    top: `${Math.round(targetRect.top - offsetRect.top + targetRect.height)}px`,\n                    left: `${Math.round(targetRect.left - offsetRect.left + targetRect.width)}px`,\n                    transform: 'translateX(-100%) translateY(-100%)'\n                };\n            case 'left-start':\n                return {\n                    top: `${Math.round(targetRect.top - offsetRect.top)}px`,\n                    left: `${Math.round(targetRect.left - offsetRect.left)}px`,\n                    transform: ''\n                };\n            case 'left-end':\n                return {\n                    top: `${Math.round(targetRect.top - offsetRect.top + targetRect.height)}px`,\n                    left: `${Math.round(targetRect.left - offsetRect.left)}px`,\n                    transform: 'translateY(-100%)'\n                };\n            case 'top':\n                return {\n                    top: `${Math.round(targetRect.top - offsetRect.top)}px`,\n                    left: `${Math.round(targetRect.left - offsetRect.left + targetRect.width / 2)}px`,\n                    transform: 'translateX(-50%)'\n                };\n            case 'right':\n                return {\n                    top: `${Math.round(targetRect.top - offsetRect.top + targetRect.height / 2)}px`,\n                    left: `${Math.round(targetRect.left - offsetRect.left + targetRect.width)}px`,\n                    transform: 'translateX(-100%) translateY(-50%)'\n                };\n            case 'left':\n                return {\n                    top: `${Math.round(targetRect.top - offsetRect.top + targetRect.height / 2)}px`,\n                    left: `${Math.round(targetRect.left - offsetRect.left)}px`,\n                    transform: 'translateY(-50%)'\n                };\n            case 'bottom':\n            default:\n                return {\n                    top: `${Math.round(targetRect.top - offsetRect.top + targetRect.height)}px`,\n                    left: `${Math.round(targetRect.left - offsetRect.left + targetRect.width / 2)}px`,\n                    transform: 'translateX(-50%) translateY(-100%)'\n                };\n        }\n    }\n    switch (placement) {\n        case 'bottom-start':\n            return {\n                top: `${Math.round(targetRect.top -\n                    offsetRect.top +\n                    targetRect.height +\n                    offsetTopToStandardPlacement)}px`,\n                left: `${Math.round(targetRect.left - offsetRect.left + offsetLeftToStandardPlacement)}px`,\n                transform: ''\n            };\n        case 'bottom-end':\n            return {\n                top: `${Math.round(targetRect.top -\n                    offsetRect.top +\n                    targetRect.height +\n                    offsetTopToStandardPlacement)}px`,\n                left: `${Math.round(targetRect.left -\n                    offsetRect.left +\n                    targetRect.width +\n                    offsetLeftToStandardPlacement)}px`,\n                transform: 'translateX(-100%)'\n            };\n        case 'top-start':\n            return {\n                top: `${Math.round(targetRect.top - offsetRect.top + offsetTopToStandardPlacement)}px`,\n                left: `${Math.round(targetRect.left - offsetRect.left + offsetLeftToStandardPlacement)}px`,\n                transform: 'translateY(-100%)'\n            };\n        case 'top-end':\n            return {\n                top: `${Math.round(targetRect.top - offsetRect.top + offsetTopToStandardPlacement)}px`,\n                left: `${Math.round(targetRect.left -\n                    offsetRect.left +\n                    targetRect.width +\n                    offsetLeftToStandardPlacement)}px`,\n                transform: 'translateX(-100%) translateY(-100%)'\n            };\n        case 'right-start':\n            return {\n                top: `${Math.round(targetRect.top - offsetRect.top + offsetTopToStandardPlacement)}px`,\n                left: `${Math.round(targetRect.left -\n                    offsetRect.left +\n                    targetRect.width +\n                    offsetLeftToStandardPlacement)}px`,\n                transform: ''\n            };\n        case 'right-end':\n            return {\n                top: `${Math.round(targetRect.top -\n                    offsetRect.top +\n                    targetRect.height +\n                    offsetTopToStandardPlacement)}px`,\n                left: `${Math.round(targetRect.left -\n                    offsetRect.left +\n                    targetRect.width +\n                    offsetLeftToStandardPlacement)}px`,\n                transform: 'translateY(-100%)'\n            };\n        case 'left-start':\n            return {\n                top: `${Math.round(targetRect.top - offsetRect.top + offsetTopToStandardPlacement)}px`,\n                left: `${Math.round(targetRect.left - offsetRect.left + offsetLeftToStandardPlacement)}px`,\n                transform: 'translateX(-100%)'\n            };\n        case 'left-end':\n            return {\n                top: `${Math.round(targetRect.top -\n                    offsetRect.top +\n                    targetRect.height +\n                    offsetTopToStandardPlacement)}px`,\n                left: `${Math.round(targetRect.left - offsetRect.left + offsetLeftToStandardPlacement)}px`,\n                transform: 'translateX(-100%) translateY(-100%)'\n            };\n        case 'top':\n            return {\n                top: `${Math.round(targetRect.top - offsetRect.top + offsetTopToStandardPlacement)}px`,\n                left: `${Math.round(targetRect.left -\n                    offsetRect.left +\n                    targetRect.width / 2 +\n                    offsetLeftToStandardPlacement)}px`,\n                transform: 'translateY(-100%) translateX(-50%)'\n            };\n        case 'right':\n            return {\n                top: `${Math.round(targetRect.top -\n                    offsetRect.top +\n                    targetRect.height / 2 +\n                    offsetTopToStandardPlacement)}px`,\n                left: `${Math.round(targetRect.left -\n                    offsetRect.left +\n                    targetRect.width +\n                    offsetLeftToStandardPlacement)}px`,\n                transform: 'translateY(-50%)'\n            };\n        case 'left':\n            return {\n                top: `${Math.round(targetRect.top -\n                    offsetRect.top +\n                    targetRect.height / 2 +\n                    offsetTopToStandardPlacement)}px`,\n                left: `${Math.round(targetRect.left - offsetRect.left + offsetLeftToStandardPlacement)}px`,\n                transform: 'translateY(-50%) translateX(-100%)'\n            };\n        case 'bottom':\n        default:\n            return {\n                top: `${Math.round(targetRect.top -\n                    offsetRect.top +\n                    targetRect.height +\n                    offsetTopToStandardPlacement)}px`,\n                left: `${Math.round(targetRect.left -\n                    offsetRect.left +\n                    targetRect.width / 2 +\n                    offsetLeftToStandardPlacement)}px`,\n                transform: 'translateX(-50%)'\n            };\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}