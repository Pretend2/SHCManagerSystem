{"ast":null,"code":"import { h, defineComponent, ref, computed, toRef, watchEffect, withDirectives, Transition, provide, watch, nextTick } from 'vue';\nimport { hsv2rgb, rgb2hsv, rgba, hsva, hsla, hsl2hsv, hsv2hsl, rgb2hsl, hsl2rgb, toRgbaString, toHsvaString, toHslaString, toHexaString, toHsvString, toRgbString, toHexString, toHslString, getPreciseEventTarget } from 'seemly';\nimport { useIsMounted, useMergedState } from 'vooks';\nimport { VBinder, VFollower, VTarget } from 'vueuc';\nimport { clickoutside } from 'vdirs';\nimport { colorPickerLight } from '../styles';\nimport { useFormItem, useConfig, useTheme, useLocale, useThemeClass } from '../../_mixins';\nimport { call, createKey, useAdjustedTo } from '../../_utils';\nimport { NButton } from '../../button';\nimport HueSlider from './HueSlider';\nimport AlphaSlider from './AlphaSlider';\nimport Pallete from './Pallete';\nimport ColorInput from './ColorInput';\nimport ColorPickerTrigger from './ColorPickerTrigger';\nimport { deriveDefaultValue, getModeFromValue } from './utils';\nimport ColorPickerSwatches from './ColorPickerSwatches';\nimport ColorPreview from './ColorPreview';\nimport { colorPickerInjectionKey } from './context';\nimport style from './styles/index.cssr';\nexport const colorPickerProps = Object.assign(Object.assign({}, useTheme.props), {\n  value: String,\n  show: {\n    type: Boolean,\n    default: undefined\n  },\n  defaultShow: Boolean,\n  defaultValue: String,\n  modes: {\n    type: Array,\n    // no hsva by default since browser doesn't support it\n    default: () => ['rgb', 'hex', 'hsl']\n  },\n  placement: {\n    type: String,\n    default: 'bottom-start'\n  },\n  to: useAdjustedTo.propTo,\n  showAlpha: {\n    type: Boolean,\n    default: true\n  },\n  showPreview: Boolean,\n  swatches: Array,\n  disabled: {\n    type: Boolean,\n    default: undefined\n  },\n  actions: {\n    type: Array,\n    default: null\n  },\n  internalActions: Array,\n  size: String,\n  renderLabel: Function,\n  onComplete: Function,\n  onConfirm: Function,\n  'onUpdate:show': [Function, Array],\n  onUpdateShow: [Function, Array],\n  'onUpdate:value': [Function, Array],\n  onUpdateValue: [Function, Array]\n});\nexport default defineComponent({\n  name: 'ColorPicker',\n  props: colorPickerProps,\n\n  setup(props, {\n    slots\n  }) {\n    const selfRef = ref(null);\n    let upcomingValue = null;\n    const formItem = useFormItem(props);\n    const {\n      mergedSizeRef,\n      mergedDisabledRef\n    } = formItem;\n    const {\n      localeRef\n    } = useLocale('global');\n    const {\n      mergedClsPrefixRef,\n      namespaceRef,\n      inlineThemeDisabled\n    } = useConfig(props);\n    const themeRef = useTheme('ColorPicker', '-color-picker', style, colorPickerLight, props, mergedClsPrefixRef);\n    provide(colorPickerInjectionKey, {\n      themeRef,\n      renderLabelRef: toRef(props, 'renderLabel'),\n      colorPickerSlots: slots\n    });\n    const uncontrolledShowRef = ref(props.defaultShow);\n    const mergedShowRef = useMergedState(toRef(props, 'show'), uncontrolledShowRef);\n\n    function doUpdateShow(value) {\n      const {\n        onUpdateShow,\n        'onUpdate:show': _onUpdateShow\n      } = props;\n      if (onUpdateShow) call(onUpdateShow, value);\n      if (_onUpdateShow) call(_onUpdateShow, value);\n      uncontrolledShowRef.value = value;\n    }\n\n    const {\n      defaultValue\n    } = props;\n    const uncontrolledValueRef = ref(defaultValue === undefined ? deriveDefaultValue(props.modes, props.showAlpha) : defaultValue);\n    const mergedValueRef = useMergedState(toRef(props, 'value'), uncontrolledValueRef);\n    const undoStackRef = ref([mergedValueRef.value]);\n    const valueIndexRef = ref(0);\n    const valueModeRef = computed(() => getModeFromValue(mergedValueRef.value));\n    const {\n      modes\n    } = props;\n    const displayedModeRef = ref(getModeFromValue(mergedValueRef.value) || modes[0] || 'rgb');\n\n    function handleUpdateDisplayedMode() {\n      const {\n        modes\n      } = props;\n      const {\n        value: displayedMode\n      } = displayedModeRef;\n      const currentModeIndex = modes.findIndex(mode => mode === displayedMode);\n\n      if (~currentModeIndex) {\n        displayedModeRef.value = modes[(currentModeIndex + 1) % modes.length];\n      } else {\n        displayedModeRef.value = 'rgb';\n      }\n    }\n\n    let _h, // avoid conflict with render function's h\n    s, l, v, r, g, b, a;\n\n    const hsvaRef = computed(() => {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (!mergedValue) return null; // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n      switch (valueModeRef.value) {\n        case 'hsv':\n          return hsva(mergedValue);\n\n        case 'hsl':\n          ;\n          [_h, s, l, a] = hsla(mergedValue);\n          return [...hsl2hsv(_h, s, l), a];\n\n        case 'rgb':\n        case 'hex':\n          ;\n          [r, g, b, a] = rgba(mergedValue);\n          return [...rgb2hsv(r, g, b), a];\n      }\n    });\n    const rgbaRef = computed(() => {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (!mergedValue) return null; // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n      switch (valueModeRef.value) {\n        case 'rgb':\n        case 'hex':\n          return rgba(mergedValue);\n\n        case 'hsv':\n          ;\n          [_h, s, v, a] = hsva(mergedValue);\n          return [...hsv2rgb(_h, s, v), a];\n\n        case 'hsl':\n          ;\n          [_h, s, l, a] = hsla(mergedValue);\n          return [...hsl2rgb(_h, s, l), a];\n      }\n    });\n    const hslaRef = computed(() => {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (!mergedValue) return null; // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n      switch (valueModeRef.value) {\n        case 'hsl':\n          return hsla(mergedValue);\n\n        case 'hsv':\n          ;\n          [_h, s, v, a] = hsva(mergedValue);\n          return [...hsv2hsl(_h, s, v), a];\n\n        case 'rgb':\n        case 'hex':\n          ;\n          [r, g, b, a] = rgba(mergedValue);\n          return [...rgb2hsl(r, g, b), a];\n      }\n    });\n    const mergedValueArrRef = computed(() => {\n      switch (displayedModeRef.value) {\n        case 'rgb':\n        case 'hex':\n          return rgbaRef.value;\n\n        case 'hsv':\n          return hsvaRef.value;\n\n        case 'hsl':\n          return hslaRef.value;\n      }\n    });\n    const displayedHueRef = ref(0);\n    const displayedAlphaRef = ref(1);\n    const displayedSvRef = ref([0, 0]);\n\n    function handleUpdateSv(s, v) {\n      const {\n        value: hsvaArr\n      } = hsvaRef;\n      const hue = displayedHueRef.value;\n      const alpha = hsvaArr ? hsvaArr[3] : 1;\n      displayedSvRef.value = [s, v];\n      const {\n        showAlpha\n      } = props;\n\n      switch (displayedModeRef.value) {\n        case 'hsv':\n          doUpdateValue((showAlpha ? toHsvaString : toHsvString)([hue, s, v, alpha]), 'cursor');\n          break;\n\n        case 'hsl':\n          doUpdateValue((showAlpha ? toHslaString : toHslString)([...hsv2hsl(hue, s, v), alpha]), 'cursor');\n          break;\n\n        case 'rgb':\n          doUpdateValue((showAlpha ? toRgbaString : toRgbString)([...hsv2rgb(hue, s, v), alpha]), 'cursor');\n          break;\n\n        case 'hex':\n          doUpdateValue((showAlpha ? toHexaString : toHexString)([...hsv2rgb(hue, s, v), alpha]), 'cursor');\n          break;\n      }\n    }\n\n    function handleUpdateHue(hue) {\n      displayedHueRef.value = hue;\n      const {\n        value: hsvaArr\n      } = hsvaRef;\n\n      if (!hsvaArr) {\n        return;\n      }\n\n      const [, s, v, a] = hsvaArr;\n      const {\n        showAlpha\n      } = props;\n\n      switch (displayedModeRef.value) {\n        case 'hsv':\n          doUpdateValue((showAlpha ? toHsvaString : toHsvString)([hue, s, v, a]), 'cursor');\n          break;\n\n        case 'rgb':\n          doUpdateValue((showAlpha ? toRgbaString : toRgbString)([...hsv2rgb(hue, s, v), a]), 'cursor');\n          break;\n\n        case 'hex':\n          doUpdateValue((showAlpha ? toHexaString : toHexString)([...hsv2rgb(hue, s, v), a]), 'cursor');\n          break;\n\n        case 'hsl':\n          doUpdateValue((showAlpha ? toHslaString : toHslString)([...hsv2hsl(hue, s, v), a]), 'cursor');\n          break;\n      }\n    }\n\n    function handleUpdateAlpha(alpha) {\n      switch (displayedModeRef.value) {\n        case 'hsv':\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          ;\n          [_h, s, v] = hsvaRef.value;\n          doUpdateValue(toHsvaString([_h, s, v, alpha]), 'cursor');\n          break;\n\n        case 'rgb':\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          ;\n          [r, g, b] = rgbaRef.value;\n          doUpdateValue(toRgbaString([r, g, b, alpha]), 'cursor');\n          break;\n\n        case 'hex':\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          ;\n          [r, g, b] = rgbaRef.value;\n          doUpdateValue(toHexaString([r, g, b, alpha]), 'cursor');\n          break;\n\n        case 'hsl':\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          ;\n          [_h, s, l] = hslaRef.value;\n          doUpdateValue(toHslaString([_h, s, l, alpha]), 'cursor');\n          break;\n      }\n\n      displayedAlphaRef.value = alpha;\n    }\n\n    function doUpdateValue(value, updateSource) {\n      if (updateSource === 'cursor') {\n        upcomingValue = value;\n      } else {\n        upcomingValue = null;\n      }\n\n      const {\n        nTriggerFormChange,\n        nTriggerFormInput\n      } = formItem;\n      const {\n        onUpdateValue,\n        'onUpdate:value': _onUpdateValue\n      } = props;\n      if (onUpdateValue) call(onUpdateValue, value);\n      if (_onUpdateValue) call(_onUpdateValue, value);\n      nTriggerFormChange();\n      nTriggerFormInput();\n      uncontrolledValueRef.value = value;\n    }\n\n    function handleInputUpdateValue(value) {\n      doUpdateValue(value, 'input');\n      void nextTick(handleComplete);\n    }\n\n    function handleComplete(pushStack = true) {\n      const {\n        value\n      } = mergedValueRef; // no value & only hue changes will complete with no value\n\n      if (value) {\n        const {\n          nTriggerFormChange,\n          nTriggerFormInput\n        } = formItem;\n        const {\n          onComplete\n        } = props;\n\n        if (onComplete) {\n          ;\n          onComplete(value);\n        }\n\n        const {\n          value: undoStack\n        } = undoStackRef;\n        const {\n          value: valueIndex\n        } = valueIndexRef;\n\n        if (pushStack) {\n          undoStack.splice(valueIndex + 1, undoStack.length, value);\n          valueIndexRef.value = valueIndex + 1;\n        }\n\n        nTriggerFormChange();\n        nTriggerFormInput();\n      }\n    }\n\n    function undo() {\n      const {\n        value: valueIndex\n      } = valueIndexRef;\n      if (valueIndex - 1 < 0) return;\n      doUpdateValue(undoStackRef.value[valueIndex - 1], 'input');\n      handleComplete(false);\n      valueIndexRef.value = valueIndex - 1;\n    }\n\n    function redo() {\n      const {\n        value: valueIndex\n      } = valueIndexRef;\n      if (valueIndex < 0 || valueIndex + 1 >= undoStackRef.value.length) return;\n      doUpdateValue(undoStackRef.value[valueIndex + 1], 'input');\n      handleComplete(false);\n      valueIndexRef.value = valueIndex + 1;\n    }\n\n    function handleConfirm() {\n      const {\n        value\n      } = mergedValueRef;\n      const {\n        onConfirm\n      } = props;\n\n      if (onConfirm) {\n        ;\n        onConfirm(value);\n      }\n\n      doUpdateShow(false);\n    }\n\n    const undoableRef = computed(() => valueIndexRef.value >= 1);\n    const redoableRef = computed(() => {\n      const {\n        value: undoStack\n      } = undoStackRef;\n      return undoStack.length > 1 && valueIndexRef.value < undoStack.length - 1;\n    });\n    watch(mergedShowRef, value => {\n      if (!value) {\n        undoStackRef.value = [mergedValueRef.value];\n        valueIndexRef.value = 0;\n      }\n    });\n    watchEffect(() => {\n      if (upcomingValue && upcomingValue === mergedValueRef.value) {// let it works in uncontrolled mode\n      } else {\n        const {\n          value\n        } = hsvaRef;\n\n        if (value) {\n          displayedHueRef.value = value[0];\n          displayedAlphaRef.value = value[3];\n          displayedSvRef.value = [value[1], value[2]];\n        }\n      }\n\n      upcomingValue = null;\n    });\n    const cssVarsRef = computed(() => {\n      const {\n        value: mergedSize\n      } = mergedSizeRef;\n      const {\n        common: {\n          cubicBezierEaseInOut\n        },\n        self: {\n          textColor,\n          color,\n          panelFontSize,\n          boxShadow,\n          border,\n          borderRadius,\n          dividerColor,\n          [createKey('height', mergedSize)]: height,\n          [createKey('fontSize', mergedSize)]: fontSize\n        }\n      } = themeRef.value;\n      return {\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-text-color': textColor,\n        '--n-color': color,\n        '--n-panel-font-size': panelFontSize,\n        '--n-font-size': fontSize,\n        '--n-box-shadow': boxShadow,\n        '--n-border': border,\n        '--n-border-radius': borderRadius,\n        '--n-height': height,\n        '--n-divider-color': dividerColor\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('color-picker', computed(() => {\n      return mergedSizeRef.value[0];\n    }), cssVarsRef, props) : undefined;\n\n    function renderPanel() {\n      var _a;\n\n      const {\n        value: rgba\n      } = rgbaRef;\n      const {\n        value: displayedHue\n      } = displayedHueRef;\n      const {\n        internalActions,\n        modes,\n        actions\n      } = props;\n      const {\n        value: mergedTheme\n      } = themeRef;\n      const {\n        value: mergedClsPrefix\n      } = mergedClsPrefixRef;\n      return h(\"div\", {\n        class: [`${mergedClsPrefix}-color-picker-panel`, themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass.value],\n        onDragstart: e => {\n          e.preventDefault();\n        },\n        style: inlineThemeDisabled ? undefined : cssVarsRef.value\n      }, h(\"div\", {\n        class: `${mergedClsPrefix}-color-picker-control`\n      }, h(Pallete, {\n        clsPrefix: mergedClsPrefix,\n        rgba: rgba,\n        displayedHue: displayedHue,\n        displayedSv: displayedSvRef.value,\n        onUpdateSV: handleUpdateSv,\n        onComplete: handleComplete\n      }), h(\"div\", {\n        class: `${mergedClsPrefix}-color-picker-preview`\n      }, h(\"div\", {\n        class: `${mergedClsPrefix}-color-picker-preview__sliders`\n      }, h(HueSlider, {\n        clsPrefix: mergedClsPrefix,\n        hue: displayedHue,\n        onUpdateHue: handleUpdateHue,\n        onComplete: handleComplete\n      }), props.showAlpha ? h(AlphaSlider, {\n        clsPrefix: mergedClsPrefix,\n        rgba: rgba,\n        alpha: displayedAlphaRef.value,\n        onUpdateAlpha: handleUpdateAlpha,\n        onComplete: handleComplete\n      }) : null), props.showPreview ? h(ColorPreview, {\n        clsPrefix: mergedClsPrefix,\n        mode: displayedModeRef.value,\n        color: rgbaRef.value && toHexString(rgbaRef.value),\n        onUpdateColor: color => doUpdateValue(color, 'input')\n      }) : null), h(ColorInput, {\n        clsPrefix: mergedClsPrefix,\n        showAlpha: props.showAlpha,\n        mode: displayedModeRef.value,\n        modes: modes,\n        onUpdateMode: handleUpdateDisplayedMode,\n        value: mergedValueRef.value,\n        valueArr: mergedValueArrRef.value,\n        onUpdateValue: handleInputUpdateValue\n      }), ((_a = props.swatches) === null || _a === void 0 ? void 0 : _a.length) && h(ColorPickerSwatches, {\n        clsPrefix: mergedClsPrefix,\n        mode: displayedModeRef.value,\n        swatches: props.swatches,\n        onUpdateColor: color => doUpdateValue(color, 'input')\n      })), (actions === null || actions === void 0 ? void 0 : actions.length) ? h(\"div\", {\n        class: `${mergedClsPrefix}-color-picker-action`\n      }, actions.includes('confirm') && h(NButton, {\n        size: \"small\",\n        onClick: handleConfirm,\n        theme: mergedTheme.peers.Button,\n        themeOverrides: mergedTheme.peerOverrides.Button\n      }, {\n        default: () => localeRef.value.confirm\n      })) : null, slots.action ? h(\"div\", {\n        class: `${mergedClsPrefix}-color-picker-action`\n      }, {\n        default: slots.action\n      }) : internalActions ? h(\"div\", {\n        class: `${mergedClsPrefix}-color-picker-action`\n      }, internalActions.includes('undo') && h(NButton, {\n        size: \"small\",\n        onClick: undo,\n        disabled: !undoableRef.value,\n        theme: mergedTheme.peers.Button,\n        themeOverrides: mergedTheme.peerOverrides.Button\n      }, {\n        default: () => localeRef.value.undo\n      }), internalActions.includes('redo') && h(NButton, {\n        size: \"small\",\n        onClick: redo,\n        disabled: !redoableRef.value,\n        theme: mergedTheme.peers.Button,\n        themeOverrides: mergedTheme.peerOverrides.Button\n      }, {\n        default: () => localeRef.value.redo\n      })) : null);\n    }\n\n    return {\n      mergedClsPrefix: mergedClsPrefixRef,\n      namespace: namespaceRef,\n      selfRef,\n      hsla: hslaRef,\n      rgba: rgbaRef,\n      mergedShow: mergedShowRef,\n      mergedDisabled: mergedDisabledRef,\n      isMounted: useIsMounted(),\n      adjustedTo: useAdjustedTo(props),\n      mergedValue: mergedValueRef,\n\n      handleTriggerClick() {\n        doUpdateShow(true);\n      },\n\n      handleClickOutside(e) {\n        var _a;\n\n        if ((_a = selfRef.value) === null || _a === void 0 ? void 0 : _a.contains(getPreciseEventTarget(e))) {\n          return;\n        }\n\n        doUpdateShow(false);\n      },\n\n      renderPanel,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    };\n  },\n\n  render() {\n    const {\n      $slots,\n      mergedClsPrefix,\n      onRender\n    } = this;\n    onRender === null || onRender === void 0 ? void 0 : onRender();\n    return h(\"div\", {\n      class: [this.themeClass, `${mergedClsPrefix}-color-picker`],\n      ref: \"selfRef\",\n      style: this.cssVars\n    }, h(VBinder, null, {\n      default: () => [h(VTarget, null, {\n        default: () => h(ColorPickerTrigger, {\n          clsPrefix: mergedClsPrefix,\n          value: this.mergedValue,\n          hsla: this.hsla,\n          disabled: this.mergedDisabled,\n          onClick: this.handleTriggerClick\n        }, {\n          label: $slots.label\n        })\n      }), h(VFollower, {\n        placement: this.placement,\n        show: this.mergedShow,\n        containerClass: this.namespace,\n        teleportDisabled: this.adjustedTo === useAdjustedTo.tdkey,\n        to: this.adjustedTo\n      }, {\n        default: () => h(Transition, {\n          name: \"fade-in-scale-up-transition\",\n          appear: this.isMounted\n        }, {\n          default: () => this.mergedShow ? withDirectives(this.renderPanel(), [[clickoutside, this.handleClickOutside, undefined, {\n            capture: true\n          }]]) : null\n        })\n      })]\n    }));\n  }\n\n});","map":{"version":3,"names":["h","defineComponent","ref","computed","toRef","watchEffect","withDirectives","Transition","provide","watch","nextTick","hsv2rgb","rgb2hsv","rgba","hsva","hsla","hsl2hsv","hsv2hsl","rgb2hsl","hsl2rgb","toRgbaString","toHsvaString","toHslaString","toHexaString","toHsvString","toRgbString","toHexString","toHslString","getPreciseEventTarget","useIsMounted","useMergedState","VBinder","VFollower","VTarget","clickoutside","colorPickerLight","useFormItem","useConfig","useTheme","useLocale","useThemeClass","call","createKey","useAdjustedTo","NButton","HueSlider","AlphaSlider","Pallete","ColorInput","ColorPickerTrigger","deriveDefaultValue","getModeFromValue","ColorPickerSwatches","ColorPreview","colorPickerInjectionKey","style","colorPickerProps","Object","assign","props","value","String","show","type","Boolean","default","undefined","defaultShow","defaultValue","modes","Array","placement","to","propTo","showAlpha","showPreview","swatches","disabled","actions","internalActions","size","renderLabel","Function","onComplete","onConfirm","onUpdateShow","onUpdateValue","name","setup","slots","selfRef","upcomingValue","formItem","mergedSizeRef","mergedDisabledRef","localeRef","mergedClsPrefixRef","namespaceRef","inlineThemeDisabled","themeRef","renderLabelRef","colorPickerSlots","uncontrolledShowRef","mergedShowRef","doUpdateShow","_onUpdateShow","uncontrolledValueRef","mergedValueRef","undoStackRef","valueIndexRef","valueModeRef","displayedModeRef","handleUpdateDisplayedMode","displayedMode","currentModeIndex","findIndex","mode","length","_h","s","l","v","r","g","b","a","hsvaRef","mergedValue","rgbaRef","hslaRef","mergedValueArrRef","displayedHueRef","displayedAlphaRef","displayedSvRef","handleUpdateSv","hsvaArr","hue","alpha","doUpdateValue","handleUpdateHue","handleUpdateAlpha","updateSource","nTriggerFormChange","nTriggerFormInput","_onUpdateValue","handleInputUpdateValue","handleComplete","pushStack","undoStack","valueIndex","splice","undo","redo","handleConfirm","undoableRef","redoableRef","cssVarsRef","mergedSize","common","cubicBezierEaseInOut","self","textColor","color","panelFontSize","boxShadow","border","borderRadius","dividerColor","height","fontSize","themeClassHandle","renderPanel","_a","displayedHue","mergedTheme","mergedClsPrefix","class","themeClass","onDragstart","e","preventDefault","clsPrefix","displayedSv","onUpdateSV","onUpdateHue","onUpdateAlpha","onUpdateColor","onUpdateMode","valueArr","includes","onClick","theme","peers","Button","themeOverrides","peerOverrides","confirm","action","namespace","mergedShow","mergedDisabled","isMounted","adjustedTo","handleTriggerClick","handleClickOutside","contains","cssVars","onRender","render","$slots","label","containerClass","teleportDisabled","tdkey","appear","capture"],"sources":["E:/VCode/SHC社区管理系统/shc_community_manager_system/node_modules/naive-ui/es/color-picker/src/ColorPicker.js"],"sourcesContent":["import { h, defineComponent, ref, computed, toRef, watchEffect, withDirectives, Transition, provide, watch, nextTick } from 'vue';\nimport { hsv2rgb, rgb2hsv, rgba, hsva, hsla, hsl2hsv, hsv2hsl, rgb2hsl, hsl2rgb, toRgbaString, toHsvaString, toHslaString, toHexaString, toHsvString, toRgbString, toHexString, toHslString, getPreciseEventTarget } from 'seemly';\nimport { useIsMounted, useMergedState } from 'vooks';\nimport { VBinder, VFollower, VTarget } from 'vueuc';\nimport { clickoutside } from 'vdirs';\nimport { colorPickerLight } from '../styles';\nimport { useFormItem, useConfig, useTheme, useLocale, useThemeClass } from '../../_mixins';\nimport { call, createKey, useAdjustedTo } from '../../_utils';\nimport { NButton } from '../../button';\nimport HueSlider from './HueSlider';\nimport AlphaSlider from './AlphaSlider';\nimport Pallete from './Pallete';\nimport ColorInput from './ColorInput';\nimport ColorPickerTrigger from './ColorPickerTrigger';\nimport { deriveDefaultValue, getModeFromValue } from './utils';\nimport ColorPickerSwatches from './ColorPickerSwatches';\nimport ColorPreview from './ColorPreview';\nimport { colorPickerInjectionKey } from './context';\nimport style from './styles/index.cssr';\nexport const colorPickerProps = Object.assign(Object.assign({}, useTheme.props), { value: String, show: {\n        type: Boolean,\n        default: undefined\n    }, defaultShow: Boolean, defaultValue: String, modes: {\n        type: Array,\n        // no hsva by default since browser doesn't support it\n        default: () => ['rgb', 'hex', 'hsl']\n    }, placement: {\n        type: String,\n        default: 'bottom-start'\n    }, to: useAdjustedTo.propTo, showAlpha: {\n        type: Boolean,\n        default: true\n    }, showPreview: Boolean, swatches: Array, disabled: {\n        type: Boolean,\n        default: undefined\n    }, actions: {\n        type: Array,\n        default: null\n    }, internalActions: Array, size: String, renderLabel: Function, onComplete: Function, onConfirm: Function, 'onUpdate:show': [Function, Array], onUpdateShow: [Function, Array], 'onUpdate:value': [Function, Array], onUpdateValue: [Function, Array] });\nexport default defineComponent({\n    name: 'ColorPicker',\n    props: colorPickerProps,\n    setup(props, { slots }) {\n        const selfRef = ref(null);\n        let upcomingValue = null;\n        const formItem = useFormItem(props);\n        const { mergedSizeRef, mergedDisabledRef } = formItem;\n        const { localeRef } = useLocale('global');\n        const { mergedClsPrefixRef, namespaceRef, inlineThemeDisabled } = useConfig(props);\n        const themeRef = useTheme('ColorPicker', '-color-picker', style, colorPickerLight, props, mergedClsPrefixRef);\n        provide(colorPickerInjectionKey, {\n            themeRef,\n            renderLabelRef: toRef(props, 'renderLabel'),\n            colorPickerSlots: slots\n        });\n        const uncontrolledShowRef = ref(props.defaultShow);\n        const mergedShowRef = useMergedState(toRef(props, 'show'), uncontrolledShowRef);\n        function doUpdateShow(value) {\n            const { onUpdateShow, 'onUpdate:show': _onUpdateShow } = props;\n            if (onUpdateShow)\n                call(onUpdateShow, value);\n            if (_onUpdateShow)\n                call(_onUpdateShow, value);\n            uncontrolledShowRef.value = value;\n        }\n        const { defaultValue } = props;\n        const uncontrolledValueRef = ref(defaultValue === undefined\n            ? deriveDefaultValue(props.modes, props.showAlpha)\n            : defaultValue);\n        const mergedValueRef = useMergedState(toRef(props, 'value'), uncontrolledValueRef);\n        const undoStackRef = ref([mergedValueRef.value]);\n        const valueIndexRef = ref(0);\n        const valueModeRef = computed(() => getModeFromValue(mergedValueRef.value));\n        const { modes } = props;\n        const displayedModeRef = ref(getModeFromValue(mergedValueRef.value) || modes[0] || 'rgb');\n        function handleUpdateDisplayedMode() {\n            const { modes } = props;\n            const { value: displayedMode } = displayedModeRef;\n            const currentModeIndex = modes.findIndex((mode) => mode === displayedMode);\n            if (~currentModeIndex) {\n                displayedModeRef.value = modes[(currentModeIndex + 1) % modes.length];\n            }\n            else {\n                displayedModeRef.value = 'rgb';\n            }\n        }\n        let _h, // avoid conflict with render function's h\n        s, l, v, r, g, b, a;\n        const hsvaRef = computed(() => {\n            const { value: mergedValue } = mergedValueRef;\n            if (!mergedValue)\n                return null;\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            switch (valueModeRef.value) {\n                case 'hsv':\n                    return hsva(mergedValue);\n                case 'hsl':\n                    ;\n                    [_h, s, l, a] = hsla(mergedValue);\n                    return [...hsl2hsv(_h, s, l), a];\n                case 'rgb':\n                case 'hex':\n                    ;\n                    [r, g, b, a] = rgba(mergedValue);\n                    return [...rgb2hsv(r, g, b), a];\n            }\n        });\n        const rgbaRef = computed(() => {\n            const { value: mergedValue } = mergedValueRef;\n            if (!mergedValue)\n                return null;\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            switch (valueModeRef.value) {\n                case 'rgb':\n                case 'hex':\n                    return rgba(mergedValue);\n                case 'hsv':\n                    ;\n                    [_h, s, v, a] = hsva(mergedValue);\n                    return [...hsv2rgb(_h, s, v), a];\n                case 'hsl':\n                    ;\n                    [_h, s, l, a] = hsla(mergedValue);\n                    return [...hsl2rgb(_h, s, l), a];\n            }\n        });\n        const hslaRef = computed(() => {\n            const { value: mergedValue } = mergedValueRef;\n            if (!mergedValue)\n                return null;\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            switch (valueModeRef.value) {\n                case 'hsl':\n                    return hsla(mergedValue);\n                case 'hsv':\n                    ;\n                    [_h, s, v, a] = hsva(mergedValue);\n                    return [...hsv2hsl(_h, s, v), a];\n                case 'rgb':\n                case 'hex':\n                    ;\n                    [r, g, b, a] = rgba(mergedValue);\n                    return [...rgb2hsl(r, g, b), a];\n            }\n        });\n        const mergedValueArrRef = computed(() => {\n            switch (displayedModeRef.value) {\n                case 'rgb':\n                case 'hex':\n                    return rgbaRef.value;\n                case 'hsv':\n                    return hsvaRef.value;\n                case 'hsl':\n                    return hslaRef.value;\n            }\n        });\n        const displayedHueRef = ref(0);\n        const displayedAlphaRef = ref(1);\n        const displayedSvRef = ref([0, 0]);\n        function handleUpdateSv(s, v) {\n            const { value: hsvaArr } = hsvaRef;\n            const hue = displayedHueRef.value;\n            const alpha = hsvaArr ? hsvaArr[3] : 1;\n            displayedSvRef.value = [s, v];\n            const { showAlpha } = props;\n            switch (displayedModeRef.value) {\n                case 'hsv':\n                    doUpdateValue((showAlpha ? toHsvaString : toHsvString)([hue, s, v, alpha]), 'cursor');\n                    break;\n                case 'hsl':\n                    doUpdateValue((showAlpha ? toHslaString : toHslString)([\n                        ...hsv2hsl(hue, s, v),\n                        alpha\n                    ]), 'cursor');\n                    break;\n                case 'rgb':\n                    doUpdateValue((showAlpha ? toRgbaString : toRgbString)([\n                        ...hsv2rgb(hue, s, v),\n                        alpha\n                    ]), 'cursor');\n                    break;\n                case 'hex':\n                    doUpdateValue((showAlpha ? toHexaString : toHexString)([\n                        ...hsv2rgb(hue, s, v),\n                        alpha\n                    ]), 'cursor');\n                    break;\n            }\n        }\n        function handleUpdateHue(hue) {\n            displayedHueRef.value = hue;\n            const { value: hsvaArr } = hsvaRef;\n            if (!hsvaArr) {\n                return;\n            }\n            const [, s, v, a] = hsvaArr;\n            const { showAlpha } = props;\n            switch (displayedModeRef.value) {\n                case 'hsv':\n                    doUpdateValue((showAlpha ? toHsvaString : toHsvString)([hue, s, v, a]), 'cursor');\n                    break;\n                case 'rgb':\n                    doUpdateValue((showAlpha ? toRgbaString : toRgbString)([\n                        ...hsv2rgb(hue, s, v),\n                        a\n                    ]), 'cursor');\n                    break;\n                case 'hex':\n                    doUpdateValue((showAlpha ? toHexaString : toHexString)([\n                        ...hsv2rgb(hue, s, v),\n                        a\n                    ]), 'cursor');\n                    break;\n                case 'hsl':\n                    doUpdateValue((showAlpha ? toHslaString : toHslString)([\n                        ...hsv2hsl(hue, s, v),\n                        a\n                    ]), 'cursor');\n                    break;\n            }\n        }\n        function handleUpdateAlpha(alpha) {\n            switch (displayedModeRef.value) {\n                case 'hsv':\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    ;\n                    [_h, s, v] = hsvaRef.value;\n                    doUpdateValue(toHsvaString([_h, s, v, alpha]), 'cursor');\n                    break;\n                case 'rgb':\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    ;\n                    [r, g, b] = rgbaRef.value;\n                    doUpdateValue(toRgbaString([r, g, b, alpha]), 'cursor');\n                    break;\n                case 'hex':\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    ;\n                    [r, g, b] = rgbaRef.value;\n                    doUpdateValue(toHexaString([r, g, b, alpha]), 'cursor');\n                    break;\n                case 'hsl':\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    ;\n                    [_h, s, l] = hslaRef.value;\n                    doUpdateValue(toHslaString([_h, s, l, alpha]), 'cursor');\n                    break;\n            }\n            displayedAlphaRef.value = alpha;\n        }\n        function doUpdateValue(value, updateSource) {\n            if (updateSource === 'cursor') {\n                upcomingValue = value;\n            }\n            else {\n                upcomingValue = null;\n            }\n            const { nTriggerFormChange, nTriggerFormInput } = formItem;\n            const { onUpdateValue, 'onUpdate:value': _onUpdateValue } = props;\n            if (onUpdateValue)\n                call(onUpdateValue, value);\n            if (_onUpdateValue)\n                call(_onUpdateValue, value);\n            nTriggerFormChange();\n            nTriggerFormInput();\n            uncontrolledValueRef.value = value;\n        }\n        function handleInputUpdateValue(value) {\n            doUpdateValue(value, 'input');\n            void nextTick(handleComplete);\n        }\n        function handleComplete(pushStack = true) {\n            const { value } = mergedValueRef;\n            // no value & only hue changes will complete with no value\n            if (value) {\n                const { nTriggerFormChange, nTriggerFormInput } = formItem;\n                const { onComplete } = props;\n                if (onComplete) {\n                    ;\n                    onComplete(value);\n                }\n                const { value: undoStack } = undoStackRef;\n                const { value: valueIndex } = valueIndexRef;\n                if (pushStack) {\n                    undoStack.splice(valueIndex + 1, undoStack.length, value);\n                    valueIndexRef.value = valueIndex + 1;\n                }\n                nTriggerFormChange();\n                nTriggerFormInput();\n            }\n        }\n        function undo() {\n            const { value: valueIndex } = valueIndexRef;\n            if (valueIndex - 1 < 0)\n                return;\n            doUpdateValue(undoStackRef.value[valueIndex - 1], 'input');\n            handleComplete(false);\n            valueIndexRef.value = valueIndex - 1;\n        }\n        function redo() {\n            const { value: valueIndex } = valueIndexRef;\n            if (valueIndex < 0 || valueIndex + 1 >= undoStackRef.value.length)\n                return;\n            doUpdateValue(undoStackRef.value[valueIndex + 1], 'input');\n            handleComplete(false);\n            valueIndexRef.value = valueIndex + 1;\n        }\n        function handleConfirm() {\n            const { value } = mergedValueRef;\n            const { onConfirm } = props;\n            if (onConfirm) {\n                ;\n                onConfirm(value);\n            }\n            doUpdateShow(false);\n        }\n        const undoableRef = computed(() => valueIndexRef.value >= 1);\n        const redoableRef = computed(() => {\n            const { value: undoStack } = undoStackRef;\n            return undoStack.length > 1 && valueIndexRef.value < undoStack.length - 1;\n        });\n        watch(mergedShowRef, (value) => {\n            if (!value) {\n                undoStackRef.value = [mergedValueRef.value];\n                valueIndexRef.value = 0;\n            }\n        });\n        watchEffect(() => {\n            if (upcomingValue && upcomingValue === mergedValueRef.value) {\n                // let it works in uncontrolled mode\n            }\n            else {\n                const { value } = hsvaRef;\n                if (value) {\n                    displayedHueRef.value = value[0];\n                    displayedAlphaRef.value = value[3];\n                    displayedSvRef.value = [value[1], value[2]];\n                }\n            }\n            upcomingValue = null;\n        });\n        const cssVarsRef = computed(() => {\n            const { value: mergedSize } = mergedSizeRef;\n            const { common: { cubicBezierEaseInOut }, self: { textColor, color, panelFontSize, boxShadow, border, borderRadius, dividerColor, [createKey('height', mergedSize)]: height, [createKey('fontSize', mergedSize)]: fontSize } } = themeRef.value;\n            return {\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-text-color': textColor,\n                '--n-color': color,\n                '--n-panel-font-size': panelFontSize,\n                '--n-font-size': fontSize,\n                '--n-box-shadow': boxShadow,\n                '--n-border': border,\n                '--n-border-radius': borderRadius,\n                '--n-height': height,\n                '--n-divider-color': dividerColor\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('color-picker', computed(() => {\n                return mergedSizeRef.value[0];\n            }), cssVarsRef, props)\n            : undefined;\n        function renderPanel() {\n            var _a;\n            const { value: rgba } = rgbaRef;\n            const { value: displayedHue } = displayedHueRef;\n            const { internalActions, modes, actions } = props;\n            const { value: mergedTheme } = themeRef;\n            const { value: mergedClsPrefix } = mergedClsPrefixRef;\n            return (h(\"div\", { class: [\n                    `${mergedClsPrefix}-color-picker-panel`,\n                    themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass.value\n                ], onDragstart: (e) => {\n                    e.preventDefault();\n                }, style: inlineThemeDisabled\n                    ? undefined\n                    : cssVarsRef.value },\n                h(\"div\", { class: `${mergedClsPrefix}-color-picker-control` },\n                    h(Pallete, { clsPrefix: mergedClsPrefix, rgba: rgba, displayedHue: displayedHue, displayedSv: displayedSvRef.value, onUpdateSV: handleUpdateSv, onComplete: handleComplete }),\n                    h(\"div\", { class: `${mergedClsPrefix}-color-picker-preview` },\n                        h(\"div\", { class: `${mergedClsPrefix}-color-picker-preview__sliders` },\n                            h(HueSlider, { clsPrefix: mergedClsPrefix, hue: displayedHue, onUpdateHue: handleUpdateHue, onComplete: handleComplete }),\n                            props.showAlpha ? (h(AlphaSlider, { clsPrefix: mergedClsPrefix, rgba: rgba, alpha: displayedAlphaRef.value, onUpdateAlpha: handleUpdateAlpha, onComplete: handleComplete })) : null),\n                        props.showPreview ? (h(ColorPreview, { clsPrefix: mergedClsPrefix, mode: displayedModeRef.value, color: rgbaRef.value && toHexString(rgbaRef.value), onUpdateColor: (color) => doUpdateValue(color, 'input') })) : null),\n                    h(ColorInput, { clsPrefix: mergedClsPrefix, showAlpha: props.showAlpha, mode: displayedModeRef.value, modes: modes, onUpdateMode: handleUpdateDisplayedMode, value: mergedValueRef.value, valueArr: mergedValueArrRef.value, onUpdateValue: handleInputUpdateValue }),\n                    ((_a = props.swatches) === null || _a === void 0 ? void 0 : _a.length) && (h(ColorPickerSwatches, { clsPrefix: mergedClsPrefix, mode: displayedModeRef.value, swatches: props.swatches, onUpdateColor: (color) => doUpdateValue(color, 'input') }))),\n                (actions === null || actions === void 0 ? void 0 : actions.length) ? (h(\"div\", { class: `${mergedClsPrefix}-color-picker-action` }, actions.includes('confirm') && (h(NButton, { size: \"small\", onClick: handleConfirm, theme: mergedTheme.peers.Button, themeOverrides: mergedTheme.peerOverrides.Button }, { default: () => localeRef.value.confirm })))) : null,\n                slots.action ? (h(\"div\", { class: `${mergedClsPrefix}-color-picker-action` }, { default: slots.action })) : internalActions ? (h(\"div\", { class: `${mergedClsPrefix}-color-picker-action` },\n                    internalActions.includes('undo') && (h(NButton, { size: \"small\", onClick: undo, disabled: !undoableRef.value, theme: mergedTheme.peers.Button, themeOverrides: mergedTheme.peerOverrides.Button }, { default: () => localeRef.value.undo })),\n                    internalActions.includes('redo') && (h(NButton, { size: \"small\", onClick: redo, disabled: !redoableRef.value, theme: mergedTheme.peers.Button, themeOverrides: mergedTheme.peerOverrides.Button }, { default: () => localeRef.value.redo })))) : null));\n        }\n        return {\n            mergedClsPrefix: mergedClsPrefixRef,\n            namespace: namespaceRef,\n            selfRef,\n            hsla: hslaRef,\n            rgba: rgbaRef,\n            mergedShow: mergedShowRef,\n            mergedDisabled: mergedDisabledRef,\n            isMounted: useIsMounted(),\n            adjustedTo: useAdjustedTo(props),\n            mergedValue: mergedValueRef,\n            handleTriggerClick() {\n                doUpdateShow(true);\n            },\n            handleClickOutside(e) {\n                var _a;\n                if ((_a = selfRef.value) === null || _a === void 0 ? void 0 : _a.contains(getPreciseEventTarget(e))) {\n                    return;\n                }\n                doUpdateShow(false);\n            },\n            renderPanel,\n            cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n            themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n            onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n        };\n    },\n    render() {\n        const { $slots, mergedClsPrefix, onRender } = this;\n        onRender === null || onRender === void 0 ? void 0 : onRender();\n        return (h(\"div\", { class: [this.themeClass, `${mergedClsPrefix}-color-picker`], ref: \"selfRef\", style: this.cssVars },\n            h(VBinder, null, {\n                default: () => [\n                    h(VTarget, null, {\n                        default: () => (h(ColorPickerTrigger, { clsPrefix: mergedClsPrefix, value: this.mergedValue, hsla: this.hsla, disabled: this.mergedDisabled, onClick: this.handleTriggerClick }, {\n                            label: $slots.label\n                        }))\n                    }),\n                    h(VFollower, { placement: this.placement, show: this.mergedShow, containerClass: this.namespace, teleportDisabled: this.adjustedTo === useAdjustedTo.tdkey, to: this.adjustedTo }, {\n                        default: () => (h(Transition, { name: \"fade-in-scale-up-transition\", appear: this.isMounted }, {\n                            default: () => this.mergedShow\n                                ? withDirectives(this.renderPanel(), [\n                                    [\n                                        clickoutside,\n                                        this.handleClickOutside,\n                                        undefined,\n                                        { capture: true }\n                                    ]\n                                ])\n                                : null\n                        }))\n                    })\n                ]\n            })));\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}