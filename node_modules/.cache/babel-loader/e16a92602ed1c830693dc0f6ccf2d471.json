{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport function getPath(key, {\n  includeGroup = false,\n  includeSelf = true\n}, treeMate) {\n  var _a;\n\n  const treeNodeMap = treeMate.treeNodeMap;\n  let treeNode = key === null || key === undefined ? null : (_a = treeNodeMap.get(key)) !== null && _a !== void 0 ? _a : null;\n  const mergedPath = {\n    keyPath: [],\n    treeNodePath: [],\n    treeNode: treeNode\n  };\n\n  if (treeNode === null || treeNode === void 0 ? void 0 : treeNode.ignored) {\n    mergedPath.treeNode = null;\n    return mergedPath;\n  }\n\n  while (treeNode) {\n    if (!treeNode.ignored && (includeGroup || !treeNode.isGroup)) {\n      mergedPath.treeNodePath.push(treeNode);\n    }\n\n    treeNode = treeNode.parent;\n  }\n\n  mergedPath.treeNodePath.reverse();\n  if (!includeSelf) mergedPath.treeNodePath.pop();\n  mergedPath.keyPath = mergedPath.treeNodePath.map(treeNode => treeNode.key);\n  return mergedPath;\n}","map":{"version":3,"names":["getPath","key","includeGroup","includeSelf","treeMate","_a","treeNodeMap","treeNode","undefined","get","mergedPath","keyPath","treeNodePath","ignored","isGroup","push","parent","reverse","pop","map"],"sources":["E:/VCode/SHC社区管理系统/shc_community_manager_system/node_modules/treemate/es/path.js"],"sourcesContent":["export function getPath(key, { includeGroup = false, includeSelf = true }, treeMate) {\n    var _a;\n    const treeNodeMap = treeMate.treeNodeMap;\n    let treeNode = key === null || key === undefined ? null : (_a = treeNodeMap.get(key)) !== null && _a !== void 0 ? _a : null;\n    const mergedPath = {\n        keyPath: [],\n        treeNodePath: [],\n        treeNode: treeNode\n    };\n    if (treeNode === null || treeNode === void 0 ? void 0 : treeNode.ignored) {\n        mergedPath.treeNode = null;\n        return mergedPath;\n    }\n    while (treeNode) {\n        if (!treeNode.ignored && (includeGroup || !treeNode.isGroup)) {\n            mergedPath.treeNodePath.push(treeNode);\n        }\n        treeNode = treeNode.parent;\n    }\n    mergedPath.treeNodePath.reverse();\n    if (!includeSelf)\n        mergedPath.treeNodePath.pop();\n    mergedPath.keyPath = mergedPath.treeNodePath.map((treeNode) => treeNode.key);\n    return mergedPath;\n}\n"],"mappings":";AAAA,OAAO,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;EAAEC,YAAY,GAAG,KAAjB;EAAwBC,WAAW,GAAG;AAAtC,CAAtB,EAAoEC,QAApE,EAA8E;EACjF,IAAIC,EAAJ;;EACA,MAAMC,WAAW,GAAGF,QAAQ,CAACE,WAA7B;EACA,IAAIC,QAAQ,GAAGN,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAKO,SAAxB,GAAoC,IAApC,GAA2C,CAACH,EAAE,GAAGC,WAAW,CAACG,GAAZ,CAAgBR,GAAhB,CAAN,MAAgC,IAAhC,IAAwCI,EAAE,KAAK,KAAK,CAApD,GAAwDA,EAAxD,GAA6D,IAAvH;EACA,MAAMK,UAAU,GAAG;IACfC,OAAO,EAAE,EADM;IAEfC,YAAY,EAAE,EAFC;IAGfL,QAAQ,EAAEA;EAHK,CAAnB;;EAKA,IAAIA,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAACM,OAAjE,EAA0E;IACtEH,UAAU,CAACH,QAAX,GAAsB,IAAtB;IACA,OAAOG,UAAP;EACH;;EACD,OAAOH,QAAP,EAAiB;IACb,IAAI,CAACA,QAAQ,CAACM,OAAV,KAAsBX,YAAY,IAAI,CAACK,QAAQ,CAACO,OAAhD,CAAJ,EAA8D;MAC1DJ,UAAU,CAACE,YAAX,CAAwBG,IAAxB,CAA6BR,QAA7B;IACH;;IACDA,QAAQ,GAAGA,QAAQ,CAACS,MAApB;EACH;;EACDN,UAAU,CAACE,YAAX,CAAwBK,OAAxB;EACA,IAAI,CAACd,WAAL,EACIO,UAAU,CAACE,YAAX,CAAwBM,GAAxB;EACJR,UAAU,CAACC,OAAX,GAAqBD,UAAU,CAACE,YAAX,CAAwBO,GAAxB,CAA6BZ,QAAD,IAAcA,QAAQ,CAACN,GAAnD,CAArB;EACA,OAAOS,UAAP;AACH"},"metadata":{},"sourceType":"module"}