{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nconst __default__ = {\n  name: 'HousingOption'\n};\nimport { ref, toRefs, inject, reactive, watch, computed } from 'vue'; // 引入 naive-ui 组件\n\nimport { NModal, NCard, NSpace, NButton, NSelect, useMessage, NGridItem, NGrid } from 'naive-ui'; // 引入 axios\n\nimport axios from 'axios';\nimport QueryString from 'qs';\nimport { mergeObject } from '../util/BaseUtil'; // 接收全局变量\n\nexport default /*#__PURE__*/Object.assign(__default__, {\n  props: {\n    show: {\n      // 接收标题参数\n      type: Boolean,\n      // 参数类型为 Boolean 类型\n      default: false // 默认值\n\n    },\n    data: {\n      // 接收数据参数\n      type: Object,\n      default: {}\n    },\n    reqUrl: {\n      // 接收请求地址\n      type: String,\n      default: '/getHousesByBuildingId/'\n    }\n  },\n\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const props = __props; // 引入 vue\n\n    const global = inject(\"global\"); // 获取 message 对象\n\n    const message = useMessage(); // props 参数\n    // 接收响应式数据\n\n    const {\n      show,\n      data,\n      reqUrl\n    } = toRefs(props);\n    watch(show, (newValue, oldValue) => {\n      selectOption.buildingValue = null;\n      selectOption.housingValue = null;\n      data.value.data = null;\n    }); // 加载\n\n    const buildingLoading = ref(false); // 楼栋\n\n    const housingLoading = ref(false); // 房屋\n\n    const selectDisabled = reactive({\n      buildingDisabled: computed(() => {\n        return housingLoading.value;\n      }),\n      housingDisabled: computed(() => {\n        return selectOption.buildingValue == null;\n      })\n    });\n    const selectOption = reactive({\n      buildingValue: null,\n      housingValue: null\n    });\n\n    const buildingUpdateValue = (value, option) => {\n      loadHousing(option.data.id);\n      housingOptions.value = [];\n      selectOption.housingValue = null;\n    };\n\n    const housingUpdateValue = (value, option) => {\n      housingInfo.value = option.data;\n      data.value.data = option.data;\n    }; // 楼栋数据\n\n\n    const buildingOptions = ref([]); // 房屋数据\n\n    const housingOptions = ref([]);\n    const housingInfo = ref({\n      id: null,\n      housesNo: null,\n      unit: {\n        unitNo: null\n      },\n      floor: null,\n      propertyType: null,\n      area: null,\n      remark: null\n    });\n    /**\r\n     * 加载楼栋信息\r\n     */\n\n    const loadBuilding = () => {\n      buildingLoading.value = true;\n      axios({\n        method: 'get',\n        url: global.api + '/getAllBuildings'\n      }).then(res => {\n        buildingOptions.value = [];\n\n        for (let building of res.data) {\n          const buildingData = {\n            label: building.name,\n            value: building.id,\n            data: building\n          };\n          buildingOptions.value.push(buildingData);\n        }\n      }).catch(err => {\n        message.error(\"楼栋加载失败！\" + err);\n      }).finally(() => {\n        buildingLoading.value = false;\n      });\n    };\n    /**\r\n     * 加载房屋信息\r\n     */\n\n\n    const loadHousing = id => {\n      housingLoading.value = true;\n      axios({\n        method: 'get',\n        url: global.api + reqUrl.value + id\n      }).then(res => {\n        housingOptions.value = [];\n\n        for (let housing of res.data) {\n          const housingData = {\n            label: housing.unit.unitNo + \" - \" + housing.housesNo,\n            value: housing.id,\n            data: housing\n          };\n          housingOptions.value.push(housingData);\n        }\n      }).catch(err => {\n        message.error(\"房屋加载失败！\" + err);\n      }).finally(() => {\n        housingLoading.value = false;\n      });\n    }; // 调用加载楼栋\n\n\n    loadBuilding();\n    const __returned__ = {\n      global,\n      message,\n      props,\n      show,\n      data,\n      reqUrl,\n      buildingLoading,\n      housingLoading,\n      selectDisabled,\n      selectOption,\n      buildingUpdateValue,\n      housingUpdateValue,\n      buildingOptions,\n      housingOptions,\n      housingInfo,\n      loadBuilding,\n      loadHousing,\n      ref,\n      toRefs,\n      inject,\n      reactive,\n      watch,\n      computed,\n      NModal,\n      NCard,\n      NSpace,\n      NButton,\n      NSelect,\n      useMessage,\n      NGridItem,\n      NGrid,\n      axios,\n      QueryString,\n      mergeObject\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n});","map":{"version":3,"mappings":"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","names":["name","ref","toRefs","inject","reactive","watch","computed","NModal","NCard","NSpace","NButton","NSelect","useMessage","NGridItem","NGrid","axios","QueryString","mergeObject","global","message","show","data","reqUrl","props","newValue","oldValue","selectOption","buildingValue","housingValue","value","buildingLoading","housingLoading","selectDisabled","buildingDisabled","housingDisabled","buildingUpdateValue","option","loadHousing","id","housingOptions","housingUpdateValue","housingInfo","buildingOptions","housesNo","unit","unitNo","floor","propertyType","area","remark","loadBuilding","method","url","api","then","res","building","buildingData","label","push","catch","err","error","finally","housing","housingData"],"sources":["D:/VCode/SHC社区管理系统/shc_community_manager_system/src/components/HousingOption.vue"],"sourcesContent":["<template>\r\n    <n-modal :show=\"show\" transform-origin=\"center\">\r\n        <n-card style=\"width: 800px\" title=\"选择房屋\" :bordered=\"false\" size=\"huge\" role=\"dialog\" aria-modal=\"true\">\r\n\r\n            <div class=\"my-select\">\r\n                <n-select v-model:value=\"selectOption.buildingValue\" filterable :loading=\"buildingLoading\"\r\n                    style=\"margin-right: 5px;\" @update:value=\"buildingUpdateValue\"\r\n                    :disabled=\"selectDisabled.buildingDisabled\" :options=\"buildingOptions\" placeholder=\"请选择楼栋\" />\r\n                <n-select v-model:value=\"selectOption.housingValue\" @update:value=\"housingUpdateValue\" filterable\r\n                    :loading=\"housingLoading\" style=\"margin-left: 5px\" :disabled=\"selectDisabled.housingDisabled\"\r\n                    :options=\"housingOptions\" placeholder=\"请选择房屋\" />\r\n            </div>\r\n\r\n            <n-grid :y-gap=\"16\" v-if=\"selectOption.housingValue != null\" style=\"margin: 16px;\" cols=\"1 400:2 600:3\">\r\n                <n-grid-item>\r\n                    <div class=\"sub-info\">\r\n                        房屋ID：{{housingInfo.id}}\r\n                    </div>\r\n                </n-grid-item>\r\n                <n-grid-item>\r\n                    <div class=\"sub-info\">\r\n                        房屋编号：{{housingInfo.housesNo}}\r\n                    </div>\r\n                </n-grid-item>\r\n                <n-grid-item>\r\n                    <div class=\"sub-info\">\r\n                        单元：{{housingInfo.unit.unitNo}} 单元\r\n                    </div>\r\n                </n-grid-item>\r\n                <n-grid-item>\r\n                    <div class=\"sub-info\">\r\n                        楼层： {{housingInfo.floor}}\r\n                    </div>\r\n                </n-grid-item>\r\n                <n-grid-item>\r\n                    <div class=\"sub-info\">\r\n                        户型：{{housingInfo.propertyType}}\r\n                    </div>\r\n                </n-grid-item>\r\n                <n-grid-item>\r\n                    <div class=\"sub-info\">\r\n                        建筑面积：{{housingInfo.area}} 平方米\r\n                    </div>\r\n                </n-grid-item>\r\n                <n-grid-item>\r\n                    <div class=\"sub-info\">\r\n                        备注：{{housingInfo.remark}}\r\n                    </div>\r\n                </n-grid-item>\r\n            </n-grid>\r\n\r\n            <slot name=\"content\"></slot>\r\n\r\n            <template #footer>\r\n                <slot name=\"footer\"></slot>\r\n            </template>\r\n        </n-card>\r\n    </n-modal>\r\n</template>\r\n\r\n<script setup>\r\n// 引入 vue\r\nimport { ref, toRefs, inject, reactive, watch, computed } from 'vue'\r\n// 引入 naive-ui 组件\r\nimport {\r\n    NModal, NCard, NSpace, NButton, NSelect,\r\n    useMessage, NGridItem, NGrid\r\n} from 'naive-ui'\r\n// 引入 axios\r\nimport axios from 'axios';\r\n\r\nimport QueryString from 'qs'\r\n\r\nimport { mergeObject } from '../util/BaseUtil'\r\n\r\n// 接收全局变量\r\nconst global = inject(\"global\")\r\n\r\n// 获取 message 对象\r\nconst message = useMessage();\r\n\r\n// props 参数\r\nconst props = defineProps({\r\n    show: { // 接收标题参数\r\n        type: Boolean, // 参数类型为 Boolean 类型\r\n        default: false // 默认值\r\n    },\r\n    data: { // 接收数据参数\r\n        type: Object,\r\n        default: {}\r\n    },\r\n    reqUrl: { // 接收请求地址\r\n        type: String,\r\n        default: '/getHousesByBuildingId/'\r\n    },\r\n})\r\n\r\n// 接收响应式数据\r\nconst { show, data,reqUrl } = toRefs(props);\r\n\r\nwatch(show, (newValue, oldValue) => {\r\n    selectOption.buildingValue = null\r\n    selectOption.housingValue = null\r\n    data.value.data = null\r\n})\r\n\r\n// 加载\r\nconst buildingLoading = ref(false) // 楼栋\r\nconst housingLoading = ref(false) // 房屋\r\n\r\nconst selectDisabled = reactive({\r\n    buildingDisabled: computed(() => {\r\n        return housingLoading.value\r\n    }),\r\n    housingDisabled: computed(() => {\r\n        return selectOption.buildingValue == null\r\n    })\r\n})\r\n\r\nconst selectOption = reactive({\r\n    buildingValue: null,\r\n    housingValue: null,\r\n})\r\n\r\nconst buildingUpdateValue = (value, option) => {\r\n    loadHousing(option.data.id)\r\n    housingOptions.value = []\r\n    selectOption.housingValue = null;\r\n}\r\n\r\nconst housingUpdateValue = (value, option) => {\r\n    housingInfo.value = option.data\r\n    data.value.data = option.data\r\n}\r\n\r\n// 楼栋数据\r\nconst buildingOptions = ref([])\r\n// 房屋数据\r\nconst housingOptions = ref([])\r\n\r\nconst housingInfo = ref({\r\n    id: null,\r\n    housesNo: null,\r\n    unit: {\r\n        unitNo: null,\r\n    },\r\n    floor: null,\r\n    propertyType: null,\r\n    area: null,\r\n    remark: null\r\n})\r\n\r\n/**\r\n * 加载楼栋信息\r\n */\r\nconst loadBuilding = () => {\r\n    buildingLoading.value = true\r\n    axios({\r\n        method: 'get',\r\n        url: global.api + '/getAllBuildings'\r\n    }).then(res => {\r\n        buildingOptions.value = []\r\n        for (let building of res.data) {\r\n            const buildingData = {\r\n                label: building.name,\r\n                value: building.id,\r\n                data: building\r\n            }\r\n            buildingOptions.value.push(buildingData)\r\n        }\r\n    }).catch(err => {\r\n        message.error(\"楼栋加载失败！\" + err)\r\n    }).finally(() => {\r\n        buildingLoading.value = false\r\n    })\r\n}\r\n/**\r\n * 加载房屋信息\r\n */\r\nconst loadHousing = (id) => {\r\n    housingLoading.value = true\r\n    axios({\r\n        method: 'get',\r\n        url: global.api + reqUrl.value + id\r\n    }).then(res => {\r\n        housingOptions.value = []\r\n        for (let housing of res.data) {\r\n            const housingData = {\r\n                label: housing.unit.unitNo + \" - \" + housing.housesNo,\r\n                value: housing.id,\r\n                data: housing\r\n            }\r\n            housingOptions.value.push(housingData)\r\n        }\r\n    }).catch(err => {\r\n        message.error(\"房屋加载失败！\" + err)\r\n    }).finally(() => {\r\n        housingLoading.value = false\r\n    })\r\n}\r\n// 调用加载楼栋\r\nloadBuilding()\r\n\r\n</script>\r\n<script>\r\nexport default {\r\n    name: 'HousingOption'\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.my-select {\r\n    display: flex;\r\n    justify-content: center;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}