{"ast":null,"code":"export function parseResponsiveProp(reponsiveProp) {\n  if (typeof reponsiveProp === \"number\") {\n    return {\n      '': reponsiveProp.toString()\n    };\n  }\n\n  const params = {};\n  reponsiveProp.split(/ +/).forEach(pairLiteral => {\n    if (pairLiteral === '') return;\n    const [prefix, value] = pairLiteral.split(':');\n\n    if (value === undefined) {\n      params[''] = prefix;\n    } else {\n      params[prefix] = value;\n    }\n  });\n  return params;\n}\n\nfunction parseResponsivePropValue(reponsiveProp, activeKeyOrSize) {\n  var _a;\n\n  if (reponsiveProp === undefined || reponsiveProp === null) return undefined;\n  const classObj = parseResponsiveProp(reponsiveProp);\n  if (activeKeyOrSize === undefined) return classObj[''];\n\n  if (typeof activeKeyOrSize === 'string') {\n    return (_a = classObj[activeKeyOrSize]) !== null && _a !== void 0 ? _a : classObj[''];\n  } else if (Array.isArray(activeKeyOrSize)) {\n    for (let i = activeKeyOrSize.length - 1; i >= 0; --i) {\n      const key = activeKeyOrSize[i];\n      if (key in classObj) return classObj[key];\n    }\n\n    return classObj[''];\n  } else {\n    // Here we suppose all the keys are number formatted\n    let activeValue = undefined;\n    let activeKey = -1;\n    Object.keys(classObj).forEach(key => {\n      const keyAsNum = Number(key);\n\n      if (!Number.isNaN(keyAsNum) && activeKeyOrSize >= keyAsNum && keyAsNum >= activeKey) {\n        activeKey = keyAsNum;\n        activeValue = classObj[key];\n      }\n    });\n    return activeValue;\n  }\n}\n\nexport { parseResponsivePropValue };","map":{"version":3,"names":["parseResponsiveProp","reponsiveProp","toString","params","split","forEach","pairLiteral","prefix","value","undefined","parseResponsivePropValue","activeKeyOrSize","_a","classObj","Array","isArray","i","length","key","activeValue","activeKey","Object","keys","keyAsNum","Number","isNaN"],"sources":["D:/VCode/SHC社区管理系统/shc_community_manager_system/node_modules/seemly/es/css/responsive.js"],"sourcesContent":["export function parseResponsiveProp(reponsiveProp) {\n    if (typeof reponsiveProp === \"number\") {\n        return {\n            '': reponsiveProp.toString()\n        };\n    }\n    const params = {};\n    reponsiveProp.split(/ +/).forEach((pairLiteral) => {\n        if (pairLiteral === '')\n            return;\n        const [prefix, value] = pairLiteral.split(':');\n        if (value === undefined) {\n            params[''] = prefix;\n        }\n        else {\n            params[prefix] = value;\n        }\n    });\n    return params;\n}\nfunction parseResponsivePropValue(reponsiveProp, activeKeyOrSize) {\n    var _a;\n    if (reponsiveProp === undefined || reponsiveProp === null)\n        return undefined;\n    const classObj = parseResponsiveProp(reponsiveProp);\n    if (activeKeyOrSize === undefined)\n        return classObj[''];\n    if (typeof activeKeyOrSize === 'string') {\n        return (_a = classObj[activeKeyOrSize]) !== null && _a !== void 0 ? _a : classObj[''];\n    }\n    else if (Array.isArray(activeKeyOrSize)) {\n        for (let i = activeKeyOrSize.length - 1; i >= 0; --i) {\n            const key = activeKeyOrSize[i];\n            if (key in classObj)\n                return classObj[key];\n        }\n        return classObj[''];\n    }\n    else {\n        // Here we suppose all the keys are number formatted\n        let activeValue = undefined;\n        let activeKey = -1;\n        Object.keys(classObj).forEach((key) => {\n            const keyAsNum = Number(key);\n            if (!Number.isNaN(keyAsNum) &&\n                activeKeyOrSize >= keyAsNum &&\n                keyAsNum >= activeKey) {\n                activeKey = keyAsNum;\n                activeValue = classObj[key];\n            }\n        });\n        return activeValue;\n    }\n}\nexport { parseResponsivePropValue };\n"],"mappings":"AAAA,OAAO,SAASA,mBAAT,CAA6BC,aAA7B,EAA4C;EAC/C,IAAI,OAAOA,aAAP,KAAyB,QAA7B,EAAuC;IACnC,OAAO;MACH,IAAIA,aAAa,CAACC,QAAd;IADD,CAAP;EAGH;;EACD,MAAMC,MAAM,GAAG,EAAf;EACAF,aAAa,CAACG,KAAd,CAAoB,IAApB,EAA0BC,OAA1B,CAAmCC,WAAD,IAAiB;IAC/C,IAAIA,WAAW,KAAK,EAApB,EACI;IACJ,MAAM,CAACC,MAAD,EAASC,KAAT,IAAkBF,WAAW,CAACF,KAAZ,CAAkB,GAAlB,CAAxB;;IACA,IAAII,KAAK,KAAKC,SAAd,EAAyB;MACrBN,MAAM,CAAC,EAAD,CAAN,GAAaI,MAAb;IACH,CAFD,MAGK;MACDJ,MAAM,CAACI,MAAD,CAAN,GAAiBC,KAAjB;IACH;EACJ,CAVD;EAWA,OAAOL,MAAP;AACH;;AACD,SAASO,wBAAT,CAAkCT,aAAlC,EAAiDU,eAAjD,EAAkE;EAC9D,IAAIC,EAAJ;;EACA,IAAIX,aAAa,KAAKQ,SAAlB,IAA+BR,aAAa,KAAK,IAArD,EACI,OAAOQ,SAAP;EACJ,MAAMI,QAAQ,GAAGb,mBAAmB,CAACC,aAAD,CAApC;EACA,IAAIU,eAAe,KAAKF,SAAxB,EACI,OAAOI,QAAQ,CAAC,EAAD,CAAf;;EACJ,IAAI,OAAOF,eAAP,KAA2B,QAA/B,EAAyC;IACrC,OAAO,CAACC,EAAE,GAAGC,QAAQ,CAACF,eAAD,CAAd,MAAqC,IAArC,IAA6CC,EAAE,KAAK,KAAK,CAAzD,GAA6DA,EAA7D,GAAkEC,QAAQ,CAAC,EAAD,CAAjF;EACH,CAFD,MAGK,IAAIC,KAAK,CAACC,OAAN,CAAcJ,eAAd,CAAJ,EAAoC;IACrC,KAAK,IAAIK,CAAC,GAAGL,eAAe,CAACM,MAAhB,GAAyB,CAAtC,EAAyCD,CAAC,IAAI,CAA9C,EAAiD,EAAEA,CAAnD,EAAsD;MAClD,MAAME,GAAG,GAAGP,eAAe,CAACK,CAAD,CAA3B;MACA,IAAIE,GAAG,IAAIL,QAAX,EACI,OAAOA,QAAQ,CAACK,GAAD,CAAf;IACP;;IACD,OAAOL,QAAQ,CAAC,EAAD,CAAf;EACH,CAPI,MAQA;IACD;IACA,IAAIM,WAAW,GAAGV,SAAlB;IACA,IAAIW,SAAS,GAAG,CAAC,CAAjB;IACAC,MAAM,CAACC,IAAP,CAAYT,QAAZ,EAAsBR,OAAtB,CAA+Ba,GAAD,IAAS;MACnC,MAAMK,QAAQ,GAAGC,MAAM,CAACN,GAAD,CAAvB;;MACA,IAAI,CAACM,MAAM,CAACC,KAAP,CAAaF,QAAb,CAAD,IACAZ,eAAe,IAAIY,QADnB,IAEAA,QAAQ,IAAIH,SAFhB,EAE2B;QACvBA,SAAS,GAAGG,QAAZ;QACAJ,WAAW,GAAGN,QAAQ,CAACK,GAAD,CAAtB;MACH;IACJ,CARD;IASA,OAAOC,WAAP;EACH;AACJ;;AACD,SAAST,wBAAT"},"metadata":{},"sourceType":"module"}