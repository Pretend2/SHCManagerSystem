{"ast":null,"code":"import { ref, computed, inject, watch } from 'vue';\nimport { addMonths, addYears, isSameMonth, getTime, format, set, getYear, getMonth, getDate, isValid, startOfDay, startOfSecond, startOfMonth, startOfYear, startOfQuarter, setQuarter, setYear, setMonth } from 'date-fns/esm';\nimport { getDefaultTime, dateArray, monthArray, strictParse, yearArray, quarterArray } from '../utils';\nimport { datePickerInjectionKey } from '../interface';\nimport { usePanelCommon, usePanelCommonProps } from './use-panel-common';\nimport { MONTH_ITEM_HEIGHT, START_YEAR } from '../config';\nconst useCalendarProps = Object.assign(Object.assign({}, usePanelCommonProps), {\n  actions: {\n    type: Array,\n    default: () => ['now', 'clear', 'confirm']\n  }\n}); // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n\nfunction useCalendar(props, type) {\n  const panelCommon = usePanelCommon(props);\n  const {\n    isValueInvalidRef,\n    isDateDisabledRef,\n    isDateInvalidRef,\n    isTimeInvalidRef,\n    isDateTimeInvalidRef,\n    isHourDisabledRef,\n    isMinuteDisabledRef,\n    isSecondDisabledRef,\n    localeRef,\n    firstDayOfWeekRef,\n    datePickerSlots // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n  } = inject(datePickerInjectionKey);\n  const validation = {\n    isValueInvalid: isValueInvalidRef,\n    isDateDisabled: isDateDisabledRef,\n    isDateInvalid: isDateInvalidRef,\n    isTimeInvalid: isTimeInvalidRef,\n    isDateTimeInvalid: isDateTimeInvalidRef,\n    isHourDisabled: isHourDisabledRef,\n    isMinuteDisabled: isMinuteDisabledRef,\n    isSecondDisabled: isSecondDisabledRef\n  };\n  const mergedDateFormatRef = computed(() => props.dateFormat || localeRef.value.dateFormat);\n  const dateInputValueRef = ref(props.value === null || Array.isArray(props.value) ? '' : format(props.value, mergedDateFormatRef.value));\n  const calendarValueRef = ref(props.value === null || Array.isArray(props.value) ? Date.now() : props.value);\n  const yearVlRef = ref(null);\n  const yearScrollbarRef = ref(null);\n  const monthScrollbarRef = ref(null);\n  const nowRef = ref(Date.now());\n  const dateArrayRef = computed(() => {\n    var _a;\n\n    return dateArray(calendarValueRef.value, props.value, nowRef.value, (_a = firstDayOfWeekRef.value) !== null && _a !== void 0 ? _a : localeRef.value.firstDayOfWeek);\n  });\n  const monthArrayRef = computed(() => {\n    const {\n      value\n    } = props;\n    return monthArray(calendarValueRef.value, Array.isArray(value) ? null : value, nowRef.value);\n  });\n  const yearArrayRef = computed(() => {\n    const {\n      value\n    } = props;\n    return yearArray(Array.isArray(value) ? null : value, nowRef.value);\n  });\n  const quarterArrayRef = computed(() => {\n    const {\n      value\n    } = props;\n    return quarterArray(calendarValueRef.value, Array.isArray(value) ? null : value, nowRef.value);\n  });\n  const weekdaysRef = computed(() => {\n    return dateArrayRef.value.slice(0, 7).map(dateItem => {\n      const {\n        ts\n      } = dateItem;\n      return format(ts, localeRef.value.dayFormat, panelCommon.dateFnsOptions.value);\n    });\n  });\n  const calendarMonthRef = computed(() => {\n    return format(calendarValueRef.value, localeRef.value.monthFormat, panelCommon.dateFnsOptions.value);\n  });\n  const calendarYearRef = computed(() => {\n    return format(calendarValueRef.value, localeRef.value.yearFormat, panelCommon.dateFnsOptions.value);\n  });\n  watch(calendarValueRef, (value, oldValue) => {\n    if (type === 'date' || type === 'datetime') {\n      if (!isSameMonth(value, oldValue)) {\n        panelCommon.disableTransitionOneTick();\n      }\n    }\n  });\n  watch(computed(() => props.value), value => {\n    if (value !== null && !Array.isArray(value)) {\n      dateInputValueRef.value = format(value, mergedDateFormatRef.value, panelCommon.dateFnsOptions.value);\n      calendarValueRef.value = value;\n    } else {\n      dateInputValueRef.value = '';\n    }\n  });\n\n  function sanitizeValue(value) {\n    if (type === 'datetime') return getTime(startOfSecond(value));\n    if (type === 'month') return getTime(startOfMonth(value));\n    if (type === 'year') return getTime(startOfYear(value));\n    if (type === 'quarter') return getTime(startOfQuarter(value));\n    return getTime(startOfDay(value));\n  }\n\n  function mergedIsDateDisabled(ts) {\n    const {\n      isDateDisabled: {\n        value: isDateDisabled\n      }\n    } = validation;\n    if (!isDateDisabled) return false;\n    return isDateDisabled(ts);\n  }\n\n  function handleDateInput(value) {\n    const date = strictParse(value, mergedDateFormatRef.value, new Date(), panelCommon.dateFnsOptions.value);\n\n    if (isValid(date)) {\n      if (props.value === null) {\n        panelCommon.doUpdateValue(getTime(sanitizeValue(Date.now())), props.panel);\n      } else if (!Array.isArray(props.value)) {\n        const newDateTime = set(props.value, {\n          year: getYear(date),\n          month: getMonth(date),\n          date: getDate(date)\n        });\n        panelCommon.doUpdateValue(getTime(sanitizeValue(getTime(newDateTime))), props.panel);\n      }\n    } else {\n      dateInputValueRef.value = value;\n    }\n  }\n\n  function handleDateInputBlur() {\n    const date = strictParse(dateInputValueRef.value, mergedDateFormatRef.value, new Date(), panelCommon.dateFnsOptions.value);\n\n    if (isValid(date)) {\n      if (props.value === null) {\n        panelCommon.doUpdateValue(getTime(sanitizeValue(Date.now())), false);\n      } else if (!Array.isArray(props.value)) {\n        const newDateTime = set(props.value, {\n          year: getYear(date),\n          month: getMonth(date),\n          date: getDate(date)\n        });\n        panelCommon.doUpdateValue(getTime(sanitizeValue(getTime(newDateTime))), false);\n      }\n    } else {\n      deriveDateInputValue();\n    }\n  }\n\n  function clearSelectedDateTime() {\n    panelCommon.doUpdateValue(null, true);\n    dateInputValueRef.value = '';\n    panelCommon.doClose(true);\n    panelCommon.handleClearClick();\n  }\n\n  function handleNowClick() {\n    panelCommon.doUpdateValue(getTime(sanitizeValue(Date.now())), true);\n    const now = Date.now();\n    calendarValueRef.value = now;\n    panelCommon.doClose(true);\n\n    if (props.panel && (type === 'month' || type === 'quarter' || type === 'year')) {\n      panelCommon.disableTransitionOneTick();\n      justifyColumnsScrollState(now);\n    }\n  }\n\n  function handleDateClick(dateItem) {\n    if (mergedIsDateDisabled(dateItem.ts)) {\n      return;\n    }\n\n    let newValue;\n\n    if (props.value !== null && !Array.isArray(props.value)) {\n      newValue = props.value;\n    } else {\n      newValue = Date.now();\n    }\n\n    if (type === 'datetime' && props.defaultTime !== null && !Array.isArray(props.defaultTime)) {\n      const time = getDefaultTime(props.defaultTime);\n\n      if (time) {\n        newValue = getTime(set(newValue, time)); // setDate getTime(addMilliseconds(startOfDay(newValue), time))\n      }\n    }\n\n    newValue = getTime(dateItem.type === 'quarter' && dateItem.dateObject.quarter ? setQuarter(setYear(newValue, dateItem.dateObject.year), dateItem.dateObject.quarter) : set(newValue, dateItem.dateObject));\n    panelCommon.doUpdateValue(sanitizeValue(newValue), props.panel || type === 'date' || type === 'year');\n\n    switch (type) {\n      case 'date':\n        panelCommon.doClose();\n        break;\n\n      case 'year':\n        if (props.panel) {\n          panelCommon.disableTransitionOneTick();\n        }\n\n        panelCommon.doClose();\n        break;\n\n      case 'month':\n        panelCommon.disableTransitionOneTick();\n        justifyColumnsScrollState(newValue);\n        break;\n\n      case 'quarter':\n        panelCommon.disableTransitionOneTick();\n        justifyColumnsScrollState(newValue);\n        break;\n    }\n  }\n\n  function handleQuickMonthClick(dateItem, updatePanelValue) {\n    let newValue;\n\n    if (props.value !== null && !Array.isArray(props.value)) {\n      newValue = props.value;\n    } else {\n      newValue = Date.now();\n    }\n\n    newValue = getTime(dateItem.type === 'month' ? setMonth(newValue, dateItem.dateObject.month) : setYear(newValue, dateItem.dateObject.year));\n    updatePanelValue(newValue);\n    justifyColumnsScrollState(newValue);\n  }\n\n  function onUpdateCalendarValue(value) {\n    calendarValueRef.value = value;\n  }\n\n  function deriveDateInputValue(time) {\n    // If not selected, display nothing,\n    // else update datetime related string\n    if (props.value === null || Array.isArray(props.value)) {\n      dateInputValueRef.value = '';\n      return;\n    }\n\n    if (time === undefined) {\n      time = props.value;\n    }\n\n    dateInputValueRef.value = format(time, mergedDateFormatRef.value, panelCommon.dateFnsOptions.value);\n  }\n\n  function handleConfirmClick() {\n    if (validation.isDateInvalid.value || validation.isTimeInvalid.value) {\n      return;\n    }\n\n    panelCommon.doConfirm();\n    closeCalendar();\n  }\n\n  function closeCalendar() {\n    if (props.active) {\n      panelCommon.doClose();\n    }\n  }\n\n  function nextYear() {\n    calendarValueRef.value = getTime(addYears(calendarValueRef.value, 1));\n  }\n\n  function prevYear() {\n    calendarValueRef.value = getTime(addYears(calendarValueRef.value, -1));\n  }\n\n  function nextMonth() {\n    calendarValueRef.value = getTime(addMonths(calendarValueRef.value, 1));\n  }\n\n  function prevMonth() {\n    calendarValueRef.value = getTime(addMonths(calendarValueRef.value, -1));\n  } // For month type\n\n\n  function virtualListContainer() {\n    const {\n      value\n    } = yearVlRef;\n    return value === null || value === void 0 ? void 0 : value.listElRef;\n  } // For month type\n\n\n  function virtualListContent() {\n    const {\n      value\n    } = yearVlRef;\n    return value === null || value === void 0 ? void 0 : value.itemsElRef;\n  } // For month type\n\n\n  function handleVirtualListScroll(e) {\n    var _a;\n\n    (_a = yearScrollbarRef.value) === null || _a === void 0 ? void 0 : _a.sync();\n  }\n\n  function handleTimePickerChange(value) {\n    if (value === null) return;\n    panelCommon.doUpdateValue(value, props.panel);\n  }\n\n  function handleSingleShortcutMouseenter(shortcut) {\n    panelCommon.cachePendingValue();\n    const shortcutValue = panelCommon.getShortcutValue(shortcut);\n    if (typeof shortcutValue !== 'number') return;\n    panelCommon.doUpdateValue(shortcutValue, false);\n  }\n\n  function handleSingleShortcutClick(shortcut) {\n    const shortcutValue = panelCommon.getShortcutValue(shortcut);\n    if (typeof shortcutValue !== 'number') return;\n    panelCommon.doUpdateValue(shortcutValue, props.panel);\n    panelCommon.clearPendingValue();\n    handleConfirmClick();\n  }\n\n  function justifyColumnsScrollState(value) {\n    const {\n      value: mergedValue\n    } = props;\n\n    if (monthScrollbarRef.value) {\n      const monthIndex = value === undefined ? mergedValue === null ? getMonth(Date.now()) : getMonth(mergedValue) : getMonth(value);\n      monthScrollbarRef.value.scrollTo({\n        top: monthIndex * MONTH_ITEM_HEIGHT\n      });\n    }\n\n    if (yearVlRef.value) {\n      const yearIndex = (value === undefined ? mergedValue === null ? getYear(Date.now()) : getYear(mergedValue) : getYear(value)) - START_YEAR;\n      yearVlRef.value.scrollTo({\n        top: yearIndex * MONTH_ITEM_HEIGHT\n      });\n    }\n  }\n\n  const childComponentRefs = {\n    monthScrollbarRef,\n    yearScrollbarRef,\n    yearVlRef\n  };\n  return Object.assign(Object.assign(Object.assign(Object.assign({\n    dateArray: dateArrayRef,\n    monthArray: monthArrayRef,\n    yearArray: yearArrayRef,\n    quarterArray: quarterArrayRef,\n    calendarYear: calendarYearRef,\n    calendarMonth: calendarMonthRef,\n    weekdays: weekdaysRef,\n    mergedIsDateDisabled,\n    nextYear,\n    prevYear,\n    nextMonth,\n    prevMonth,\n    handleNowClick,\n    handleConfirmClick,\n    handleSingleShortcutMouseenter,\n    handleSingleShortcutClick\n  }, validation), panelCommon), childComponentRefs), {\n    // datetime only\n    handleDateClick,\n    handleDateInputBlur,\n    handleDateInput,\n    handleTimePickerChange,\n    clearSelectedDateTime,\n    virtualListContainer,\n    virtualListContent,\n    handleVirtualListScroll,\n    timePickerSize: panelCommon.timePickerSize,\n    dateInputValue: dateInputValueRef,\n    datePickerSlots,\n    handleQuickMonthClick,\n    justifyColumnsScrollState,\n    calendarValue: calendarValueRef,\n    onUpdateCalendarValue\n  });\n}\n\nexport { useCalendar, useCalendarProps };","map":{"version":3,"names":["ref","computed","inject","watch","addMonths","addYears","isSameMonth","getTime","format","set","getYear","getMonth","getDate","isValid","startOfDay","startOfSecond","startOfMonth","startOfYear","startOfQuarter","setQuarter","setYear","setMonth","getDefaultTime","dateArray","monthArray","strictParse","yearArray","quarterArray","datePickerInjectionKey","usePanelCommon","usePanelCommonProps","MONTH_ITEM_HEIGHT","START_YEAR","useCalendarProps","Object","assign","actions","type","Array","default","useCalendar","props","panelCommon","isValueInvalidRef","isDateDisabledRef","isDateInvalidRef","isTimeInvalidRef","isDateTimeInvalidRef","isHourDisabledRef","isMinuteDisabledRef","isSecondDisabledRef","localeRef","firstDayOfWeekRef","datePickerSlots","validation","isValueInvalid","isDateDisabled","isDateInvalid","isTimeInvalid","isDateTimeInvalid","isHourDisabled","isMinuteDisabled","isSecondDisabled","mergedDateFormatRef","dateFormat","value","dateInputValueRef","isArray","calendarValueRef","Date","now","yearVlRef","yearScrollbarRef","monthScrollbarRef","nowRef","dateArrayRef","_a","firstDayOfWeek","monthArrayRef","yearArrayRef","quarterArrayRef","weekdaysRef","slice","map","dateItem","ts","dayFormat","dateFnsOptions","calendarMonthRef","monthFormat","calendarYearRef","yearFormat","oldValue","disableTransitionOneTick","sanitizeValue","mergedIsDateDisabled","handleDateInput","date","doUpdateValue","panel","newDateTime","year","month","handleDateInputBlur","deriveDateInputValue","clearSelectedDateTime","doClose","handleClearClick","handleNowClick","justifyColumnsScrollState","handleDateClick","newValue","defaultTime","time","dateObject","quarter","handleQuickMonthClick","updatePanelValue","onUpdateCalendarValue","undefined","handleConfirmClick","doConfirm","closeCalendar","active","nextYear","prevYear","nextMonth","prevMonth","virtualListContainer","listElRef","virtualListContent","itemsElRef","handleVirtualListScroll","e","sync","handleTimePickerChange","handleSingleShortcutMouseenter","shortcut","cachePendingValue","shortcutValue","getShortcutValue","handleSingleShortcutClick","clearPendingValue","mergedValue","monthIndex","scrollTo","top","yearIndex","childComponentRefs","calendarYear","calendarMonth","weekdays","timePickerSize","dateInputValue","calendarValue"],"sources":["D:/VCode/SHC社区管理系统/shc_community_manager_system/node_modules/naive-ui/es/date-picker/src/panel/use-calendar.js"],"sourcesContent":["import { ref, computed, inject, watch } from 'vue';\nimport { addMonths, addYears, isSameMonth, getTime, format, set, getYear, getMonth, getDate, isValid, startOfDay, startOfSecond, startOfMonth, startOfYear, startOfQuarter, setQuarter, setYear, setMonth } from 'date-fns/esm';\nimport { getDefaultTime, dateArray, monthArray, strictParse, yearArray, quarterArray } from '../utils';\nimport { datePickerInjectionKey } from '../interface';\nimport { usePanelCommon, usePanelCommonProps } from './use-panel-common';\nimport { MONTH_ITEM_HEIGHT, START_YEAR } from '../config';\nconst useCalendarProps = Object.assign(Object.assign({}, usePanelCommonProps), { actions: {\n        type: Array,\n        default: () => ['now', 'clear', 'confirm']\n    } });\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nfunction useCalendar(props, type) {\n    const panelCommon = usePanelCommon(props);\n    const { isValueInvalidRef, isDateDisabledRef, isDateInvalidRef, isTimeInvalidRef, isDateTimeInvalidRef, isHourDisabledRef, isMinuteDisabledRef, isSecondDisabledRef, localeRef, firstDayOfWeekRef, datePickerSlots\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n     } = inject(datePickerInjectionKey);\n    const validation = {\n        isValueInvalid: isValueInvalidRef,\n        isDateDisabled: isDateDisabledRef,\n        isDateInvalid: isDateInvalidRef,\n        isTimeInvalid: isTimeInvalidRef,\n        isDateTimeInvalid: isDateTimeInvalidRef,\n        isHourDisabled: isHourDisabledRef,\n        isMinuteDisabled: isMinuteDisabledRef,\n        isSecondDisabled: isSecondDisabledRef\n    };\n    const mergedDateFormatRef = computed(() => props.dateFormat || localeRef.value.dateFormat);\n    const dateInputValueRef = ref(props.value === null || Array.isArray(props.value)\n        ? ''\n        : format(props.value, mergedDateFormatRef.value));\n    const calendarValueRef = ref(props.value === null || Array.isArray(props.value)\n        ? Date.now()\n        : props.value);\n    const yearVlRef = ref(null);\n    const yearScrollbarRef = ref(null);\n    const monthScrollbarRef = ref(null);\n    const nowRef = ref(Date.now());\n    const dateArrayRef = computed(() => {\n        var _a;\n        return dateArray(calendarValueRef.value, props.value, nowRef.value, (_a = firstDayOfWeekRef.value) !== null && _a !== void 0 ? _a : localeRef.value.firstDayOfWeek);\n    });\n    const monthArrayRef = computed(() => {\n        const { value } = props;\n        return monthArray(calendarValueRef.value, Array.isArray(value) ? null : value, nowRef.value);\n    });\n    const yearArrayRef = computed(() => {\n        const { value } = props;\n        return yearArray(Array.isArray(value) ? null : value, nowRef.value);\n    });\n    const quarterArrayRef = computed(() => {\n        const { value } = props;\n        return quarterArray(calendarValueRef.value, Array.isArray(value) ? null : value, nowRef.value);\n    });\n    const weekdaysRef = computed(() => {\n        return dateArrayRef.value.slice(0, 7).map((dateItem) => {\n            const { ts } = dateItem;\n            return format(ts, localeRef.value.dayFormat, panelCommon.dateFnsOptions.value);\n        });\n    });\n    const calendarMonthRef = computed(() => {\n        return format(calendarValueRef.value, localeRef.value.monthFormat, panelCommon.dateFnsOptions.value);\n    });\n    const calendarYearRef = computed(() => {\n        return format(calendarValueRef.value, localeRef.value.yearFormat, panelCommon.dateFnsOptions.value);\n    });\n    watch(calendarValueRef, (value, oldValue) => {\n        if (type === 'date' || type === 'datetime') {\n            if (!isSameMonth(value, oldValue)) {\n                panelCommon.disableTransitionOneTick();\n            }\n        }\n    });\n    watch(computed(() => props.value), (value) => {\n        if (value !== null && !Array.isArray(value)) {\n            dateInputValueRef.value = format(value, mergedDateFormatRef.value, panelCommon.dateFnsOptions.value);\n            calendarValueRef.value = value;\n        }\n        else {\n            dateInputValueRef.value = '';\n        }\n    });\n    function sanitizeValue(value) {\n        if (type === 'datetime')\n            return getTime(startOfSecond(value));\n        if (type === 'month')\n            return getTime(startOfMonth(value));\n        if (type === 'year')\n            return getTime(startOfYear(value));\n        if (type === 'quarter')\n            return getTime(startOfQuarter(value));\n        return getTime(startOfDay(value));\n    }\n    function mergedIsDateDisabled(ts) {\n        const { isDateDisabled: { value: isDateDisabled } } = validation;\n        if (!isDateDisabled)\n            return false;\n        return isDateDisabled(ts);\n    }\n    function handleDateInput(value) {\n        const date = strictParse(value, mergedDateFormatRef.value, new Date(), panelCommon.dateFnsOptions.value);\n        if (isValid(date)) {\n            if (props.value === null) {\n                panelCommon.doUpdateValue(getTime(sanitizeValue(Date.now())), props.panel);\n            }\n            else if (!Array.isArray(props.value)) {\n                const newDateTime = set(props.value, {\n                    year: getYear(date),\n                    month: getMonth(date),\n                    date: getDate(date)\n                });\n                panelCommon.doUpdateValue(getTime(sanitizeValue(getTime(newDateTime))), props.panel);\n            }\n        }\n        else {\n            dateInputValueRef.value = value;\n        }\n    }\n    function handleDateInputBlur() {\n        const date = strictParse(dateInputValueRef.value, mergedDateFormatRef.value, new Date(), panelCommon.dateFnsOptions.value);\n        if (isValid(date)) {\n            if (props.value === null) {\n                panelCommon.doUpdateValue(getTime(sanitizeValue(Date.now())), false);\n            }\n            else if (!Array.isArray(props.value)) {\n                const newDateTime = set(props.value, {\n                    year: getYear(date),\n                    month: getMonth(date),\n                    date: getDate(date)\n                });\n                panelCommon.doUpdateValue(getTime(sanitizeValue(getTime(newDateTime))), false);\n            }\n        }\n        else {\n            deriveDateInputValue();\n        }\n    }\n    function clearSelectedDateTime() {\n        panelCommon.doUpdateValue(null, true);\n        dateInputValueRef.value = '';\n        panelCommon.doClose(true);\n        panelCommon.handleClearClick();\n    }\n    function handleNowClick() {\n        panelCommon.doUpdateValue(getTime(sanitizeValue(Date.now())), true);\n        const now = Date.now();\n        calendarValueRef.value = now;\n        panelCommon.doClose(true);\n        if (props.panel &&\n            (type === 'month' || type === 'quarter' || type === 'year')) {\n            panelCommon.disableTransitionOneTick();\n            justifyColumnsScrollState(now);\n        }\n    }\n    function handleDateClick(dateItem) {\n        if (mergedIsDateDisabled(dateItem.ts)) {\n            return;\n        }\n        let newValue;\n        if (props.value !== null && !Array.isArray(props.value)) {\n            newValue = props.value;\n        }\n        else {\n            newValue = Date.now();\n        }\n        if (type === 'datetime' &&\n            props.defaultTime !== null &&\n            !Array.isArray(props.defaultTime)) {\n            const time = getDefaultTime(props.defaultTime);\n            if (time) {\n                newValue = getTime(set(newValue, time)); // setDate getTime(addMilliseconds(startOfDay(newValue), time))\n            }\n        }\n        newValue = getTime(dateItem.type === 'quarter' && dateItem.dateObject.quarter\n            ? setQuarter(setYear(newValue, dateItem.dateObject.year), dateItem.dateObject.quarter)\n            : set(newValue, dateItem.dateObject));\n        panelCommon.doUpdateValue(sanitizeValue(newValue), props.panel || type === 'date' || type === 'year');\n        switch (type) {\n            case 'date':\n                panelCommon.doClose();\n                break;\n            case 'year':\n                if (props.panel) {\n                    panelCommon.disableTransitionOneTick();\n                }\n                panelCommon.doClose();\n                break;\n            case 'month':\n                panelCommon.disableTransitionOneTick();\n                justifyColumnsScrollState(newValue);\n                break;\n            case 'quarter':\n                panelCommon.disableTransitionOneTick();\n                justifyColumnsScrollState(newValue);\n                break;\n        }\n    }\n    function handleQuickMonthClick(dateItem, updatePanelValue) {\n        let newValue;\n        if (props.value !== null && !Array.isArray(props.value)) {\n            newValue = props.value;\n        }\n        else {\n            newValue = Date.now();\n        }\n        newValue = getTime(dateItem.type === 'month'\n            ? setMonth(newValue, dateItem.dateObject.month)\n            : setYear(newValue, dateItem.dateObject.year));\n        updatePanelValue(newValue);\n        justifyColumnsScrollState(newValue);\n    }\n    function onUpdateCalendarValue(value) {\n        calendarValueRef.value = value;\n    }\n    function deriveDateInputValue(time) {\n        // If not selected, display nothing,\n        // else update datetime related string\n        if (props.value === null || Array.isArray(props.value)) {\n            dateInputValueRef.value = '';\n            return;\n        }\n        if (time === undefined) {\n            time = props.value;\n        }\n        dateInputValueRef.value = format(time, mergedDateFormatRef.value, panelCommon.dateFnsOptions.value);\n    }\n    function handleConfirmClick() {\n        if (validation.isDateInvalid.value || validation.isTimeInvalid.value) {\n            return;\n        }\n        panelCommon.doConfirm();\n        closeCalendar();\n    }\n    function closeCalendar() {\n        if (props.active) {\n            panelCommon.doClose();\n        }\n    }\n    function nextYear() {\n        calendarValueRef.value = getTime(addYears(calendarValueRef.value, 1));\n    }\n    function prevYear() {\n        calendarValueRef.value = getTime(addYears(calendarValueRef.value, -1));\n    }\n    function nextMonth() {\n        calendarValueRef.value = getTime(addMonths(calendarValueRef.value, 1));\n    }\n    function prevMonth() {\n        calendarValueRef.value = getTime(addMonths(calendarValueRef.value, -1));\n    }\n    // For month type\n    function virtualListContainer() {\n        const { value } = yearVlRef;\n        return value === null || value === void 0 ? void 0 : value.listElRef;\n    }\n    // For month type\n    function virtualListContent() {\n        const { value } = yearVlRef;\n        return value === null || value === void 0 ? void 0 : value.itemsElRef;\n    }\n    // For month type\n    function handleVirtualListScroll(e) {\n        var _a;\n        (_a = yearScrollbarRef.value) === null || _a === void 0 ? void 0 : _a.sync();\n    }\n    function handleTimePickerChange(value) {\n        if (value === null)\n            return;\n        panelCommon.doUpdateValue(value, props.panel);\n    }\n    function handleSingleShortcutMouseenter(shortcut) {\n        panelCommon.cachePendingValue();\n        const shortcutValue = panelCommon.getShortcutValue(shortcut);\n        if (typeof shortcutValue !== 'number')\n            return;\n        panelCommon.doUpdateValue(shortcutValue, false);\n    }\n    function handleSingleShortcutClick(shortcut) {\n        const shortcutValue = panelCommon.getShortcutValue(shortcut);\n        if (typeof shortcutValue !== 'number')\n            return;\n        panelCommon.doUpdateValue(shortcutValue, props.panel);\n        panelCommon.clearPendingValue();\n        handleConfirmClick();\n    }\n    function justifyColumnsScrollState(value) {\n        const { value: mergedValue } = props;\n        if (monthScrollbarRef.value) {\n            const monthIndex = value === undefined\n                ? mergedValue === null\n                    ? getMonth(Date.now())\n                    : getMonth(mergedValue)\n                : getMonth(value);\n            monthScrollbarRef.value.scrollTo({ top: monthIndex * MONTH_ITEM_HEIGHT });\n        }\n        if (yearVlRef.value) {\n            const yearIndex = (value === undefined\n                ? mergedValue === null\n                    ? getYear(Date.now())\n                    : getYear(mergedValue)\n                : getYear(value)) - START_YEAR;\n            yearVlRef.value.scrollTo({ top: yearIndex * MONTH_ITEM_HEIGHT });\n        }\n    }\n    const childComponentRefs = {\n        monthScrollbarRef,\n        yearScrollbarRef,\n        yearVlRef\n    };\n    return Object.assign(Object.assign(Object.assign(Object.assign({ dateArray: dateArrayRef, monthArray: monthArrayRef, yearArray: yearArrayRef, quarterArray: quarterArrayRef, calendarYear: calendarYearRef, calendarMonth: calendarMonthRef, weekdays: weekdaysRef, mergedIsDateDisabled,\n        nextYear,\n        prevYear,\n        nextMonth,\n        prevMonth,\n        handleNowClick,\n        handleConfirmClick,\n        handleSingleShortcutMouseenter,\n        handleSingleShortcutClick }, validation), panelCommon), childComponentRefs), { \n        // datetime only\n        handleDateClick,\n        handleDateInputBlur,\n        handleDateInput,\n        handleTimePickerChange,\n        clearSelectedDateTime,\n        virtualListContainer,\n        virtualListContent,\n        handleVirtualListScroll, timePickerSize: panelCommon.timePickerSize, dateInputValue: dateInputValueRef, datePickerSlots,\n        handleQuickMonthClick,\n        justifyColumnsScrollState, calendarValue: calendarValueRef, onUpdateCalendarValue });\n}\nexport { useCalendar, useCalendarProps };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}