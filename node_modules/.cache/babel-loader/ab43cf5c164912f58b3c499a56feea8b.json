{"ast":null,"code":"import { onBeforeMount, watchEffect, computed } from 'vue';\nimport { exists } from 'css-render';\nimport { useSsrAdapter } from '@css-render/vue3-ssr';\nimport { cssrAnchorMetaName } from './common';\nexport function useRtl(mountId, rtlStateRef, clsPrefixRef) {\n  if (!rtlStateRef) return undefined;\n  const ssrAdapter = useSsrAdapter();\n  const componentRtlStateRef = computed(() => {\n    const {\n      value: rtlState\n    } = rtlStateRef;\n\n    if (!rtlState) {\n      return undefined;\n    }\n\n    const componentRtlState = rtlState[mountId];\n\n    if (!componentRtlState) {\n      return undefined;\n    }\n\n    return componentRtlState;\n  });\n\n  const mountStyle = () => {\n    watchEffect(() => {\n      const {\n        value: clsPrefix\n      } = clsPrefixRef;\n      const id = `${clsPrefix}${mountId}Rtl`; // if it already exists, we only need to watch clsPrefix, although in most\n      // of time it's unnecessary... However we can at least listen less\n      // handlers, which is great.\n\n      if (exists(id, ssrAdapter)) return;\n      const {\n        value: componentRtlState\n      } = componentRtlStateRef;\n      if (!componentRtlState) return;\n      componentRtlState.style.mount({\n        id,\n        head: true,\n        anchorMetaName: cssrAnchorMetaName,\n        props: {\n          bPrefix: clsPrefix ? `.${clsPrefix}-` : undefined\n        },\n        ssr: ssrAdapter\n      });\n    });\n  };\n\n  if (ssrAdapter) {\n    mountStyle();\n  } else {\n    onBeforeMount(mountStyle);\n  }\n\n  return componentRtlStateRef;\n}","map":{"version":3,"names":["onBeforeMount","watchEffect","computed","exists","useSsrAdapter","cssrAnchorMetaName","useRtl","mountId","rtlStateRef","clsPrefixRef","undefined","ssrAdapter","componentRtlStateRef","value","rtlState","componentRtlState","mountStyle","clsPrefix","id","style","mount","head","anchorMetaName","props","bPrefix","ssr"],"sources":["D:/VCode/SHC社区管理系统/shc_community_manager_system/node_modules/naive-ui/es/_mixins/use-rtl.js"],"sourcesContent":["import { onBeforeMount, watchEffect, computed } from 'vue';\nimport { exists } from 'css-render';\nimport { useSsrAdapter } from '@css-render/vue3-ssr';\nimport { cssrAnchorMetaName } from './common';\nexport function useRtl(mountId, rtlStateRef, clsPrefixRef) {\n    if (!rtlStateRef)\n        return undefined;\n    const ssrAdapter = useSsrAdapter();\n    const componentRtlStateRef = computed(() => {\n        const { value: rtlState } = rtlStateRef;\n        if (!rtlState) {\n            return undefined;\n        }\n        const componentRtlState = rtlState[mountId];\n        if (!componentRtlState) {\n            return undefined;\n        }\n        return componentRtlState;\n    });\n    const mountStyle = () => {\n        watchEffect(() => {\n            const { value: clsPrefix } = clsPrefixRef;\n            const id = `${clsPrefix}${mountId}Rtl`;\n            // if it already exists, we only need to watch clsPrefix, although in most\n            // of time it's unnecessary... However we can at least listen less\n            // handlers, which is great.\n            if (exists(id, ssrAdapter))\n                return;\n            const { value: componentRtlState } = componentRtlStateRef;\n            if (!componentRtlState)\n                return;\n            componentRtlState.style.mount({\n                id,\n                head: true,\n                anchorMetaName: cssrAnchorMetaName,\n                props: {\n                    bPrefix: clsPrefix ? `.${clsPrefix}-` : undefined\n                },\n                ssr: ssrAdapter\n            });\n        });\n    };\n    if (ssrAdapter) {\n        mountStyle();\n    }\n    else {\n        onBeforeMount(mountStyle);\n    }\n    return componentRtlStateRef;\n}\n"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,WAAxB,EAAqCC,QAArC,QAAqD,KAArD;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,SAASC,kBAAT,QAAmC,UAAnC;AACA,OAAO,SAASC,MAAT,CAAgBC,OAAhB,EAAyBC,WAAzB,EAAsCC,YAAtC,EAAoD;EACvD,IAAI,CAACD,WAAL,EACI,OAAOE,SAAP;EACJ,MAAMC,UAAU,GAAGP,aAAa,EAAhC;EACA,MAAMQ,oBAAoB,GAAGV,QAAQ,CAAC,MAAM;IACxC,MAAM;MAAEW,KAAK,EAAEC;IAAT,IAAsBN,WAA5B;;IACA,IAAI,CAACM,QAAL,EAAe;MACX,OAAOJ,SAAP;IACH;;IACD,MAAMK,iBAAiB,GAAGD,QAAQ,CAACP,OAAD,CAAlC;;IACA,IAAI,CAACQ,iBAAL,EAAwB;MACpB,OAAOL,SAAP;IACH;;IACD,OAAOK,iBAAP;EACH,CAVoC,CAArC;;EAWA,MAAMC,UAAU,GAAG,MAAM;IACrBf,WAAW,CAAC,MAAM;MACd,MAAM;QAAEY,KAAK,EAAEI;MAAT,IAAuBR,YAA7B;MACA,MAAMS,EAAE,GAAI,GAAED,SAAU,GAAEV,OAAQ,KAAlC,CAFc,CAGd;MACA;MACA;;MACA,IAAIJ,MAAM,CAACe,EAAD,EAAKP,UAAL,CAAV,EACI;MACJ,MAAM;QAAEE,KAAK,EAAEE;MAAT,IAA+BH,oBAArC;MACA,IAAI,CAACG,iBAAL,EACI;MACJA,iBAAiB,CAACI,KAAlB,CAAwBC,KAAxB,CAA8B;QAC1BF,EAD0B;QAE1BG,IAAI,EAAE,IAFoB;QAG1BC,cAAc,EAAEjB,kBAHU;QAI1BkB,KAAK,EAAE;UACHC,OAAO,EAAEP,SAAS,GAAI,IAAGA,SAAU,GAAjB,GAAsBP;QADrC,CAJmB;QAO1Be,GAAG,EAAEd;MAPqB,CAA9B;IASH,CApBU,CAAX;EAqBH,CAtBD;;EAuBA,IAAIA,UAAJ,EAAgB;IACZK,UAAU;EACb,CAFD,MAGK;IACDhB,aAAa,CAACgB,UAAD,CAAb;EACH;;EACD,OAAOJ,oBAAP;AACH"},"metadata":{},"sourceType":"module"}