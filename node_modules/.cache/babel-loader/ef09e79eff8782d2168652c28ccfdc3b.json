{"ast":null,"code":"import { h, inject, defineComponent } from 'vue';\nimport { useMemo } from 'vooks';\nimport { NCheckbox } from '../../checkbox';\nimport { transferInjectionKey } from './interface';\nimport { getTitleAttribute } from '../../_utils';\nexport default defineComponent({\n  name: 'NTransferListItem',\n  props: {\n    source: {\n      type: Boolean,\n      default: false\n    },\n    label: {\n      type: String,\n      required: true\n    },\n    value: {\n      type: [String, Number],\n      required: true\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n\n  setup(props) {\n    const {\n      source\n    } = props;\n    const {\n      mergedClsPrefixRef,\n      mergedThemeRef,\n      srcCheckedValuesRef,\n      tgtCheckedValuesRef,\n      handleSrcCheckboxClick,\n      handleTgtCheckboxClick // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    } = inject(transferInjectionKey);\n    const checkedRef = source ? useMemo(() => srcCheckedValuesRef.value.includes(props.value)) : useMemo(() => tgtCheckedValuesRef.value.includes(props.value));\n    const handleClick = source ? () => {\n      if (!props.disabled) {\n        handleSrcCheckboxClick(!checkedRef.value, props.value);\n      }\n    } : () => {\n      if (!props.disabled) {\n        handleTgtCheckboxClick(!checkedRef.value, props.value);\n      }\n    };\n    return {\n      mergedClsPrefix: mergedClsPrefixRef,\n      mergedTheme: mergedThemeRef,\n      checked: checkedRef,\n      handleClick\n    };\n  },\n\n  render() {\n    const {\n      disabled,\n      mergedTheme,\n      mergedClsPrefix,\n      label,\n      checked,\n      source\n    } = this;\n    return h(\"div\", {\n      class: [`${mergedClsPrefix}-legacy-transfer-list-item`, disabled && `${mergedClsPrefix}-legacy-transfer-list-item--disabled`, source ? `${mergedClsPrefix}-legacy-transfer-list-item--source` : `${mergedClsPrefix}-legacy-transfer-list-item--target`],\n      onClick: this.handleClick\n    }, h(\"div\", {\n      class: `${mergedClsPrefix}-legacy-transfer-list-item__checkbox`\n    }, h(NCheckbox, {\n      theme: mergedTheme.peers.Checkbox,\n      themeOverrides: mergedTheme.peerOverrides.Checkbox,\n      disabled: disabled,\n      checked: checked\n    })), h(\"div\", {\n      class: `${mergedClsPrefix}-legacy-transfer-list-item__label`,\n      title: getTitleAttribute(label)\n    }, label));\n  }\n\n});","map":{"version":3,"names":["h","inject","defineComponent","useMemo","NCheckbox","transferInjectionKey","getTitleAttribute","name","props","source","type","Boolean","default","label","String","required","value","Number","disabled","setup","mergedClsPrefixRef","mergedThemeRef","srcCheckedValuesRef","tgtCheckedValuesRef","handleSrcCheckboxClick","handleTgtCheckboxClick","checkedRef","includes","handleClick","mergedClsPrefix","mergedTheme","checked","render","class","onClick","theme","peers","Checkbox","themeOverrides","peerOverrides","title"],"sources":["E:/VCode/SHC社区管理系统/shc_community_manager_system/node_modules/naive-ui/es/legacy-transfer/src/TransferListItem.js"],"sourcesContent":["import { h, inject, defineComponent } from 'vue';\nimport { useMemo } from 'vooks';\nimport { NCheckbox } from '../../checkbox';\nimport { transferInjectionKey } from './interface';\nimport { getTitleAttribute } from '../../_utils';\nexport default defineComponent({\n    name: 'NTransferListItem',\n    props: {\n        source: {\n            type: Boolean,\n            default: false\n        },\n        label: {\n            type: String,\n            required: true\n        },\n        value: {\n            type: [String, Number],\n            required: true\n        },\n        disabled: {\n            type: Boolean,\n            default: false\n        }\n    },\n    setup(props) {\n        const { source } = props;\n        const { mergedClsPrefixRef, mergedThemeRef, srcCheckedValuesRef, tgtCheckedValuesRef, handleSrcCheckboxClick, handleTgtCheckboxClick\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n         } = inject(transferInjectionKey);\n        const checkedRef = source\n            ? useMemo(() => srcCheckedValuesRef.value.includes(props.value))\n            : useMemo(() => tgtCheckedValuesRef.value.includes(props.value));\n        const handleClick = source\n            ? () => {\n                if (!props.disabled) {\n                    handleSrcCheckboxClick(!checkedRef.value, props.value);\n                }\n            }\n            : () => {\n                if (!props.disabled) {\n                    handleTgtCheckboxClick(!checkedRef.value, props.value);\n                }\n            };\n        return {\n            mergedClsPrefix: mergedClsPrefixRef,\n            mergedTheme: mergedThemeRef,\n            checked: checkedRef,\n            handleClick\n        };\n    },\n    render() {\n        const { disabled, mergedTheme, mergedClsPrefix, label, checked, source } = this;\n        return (h(\"div\", { class: [\n                `${mergedClsPrefix}-legacy-transfer-list-item`,\n                disabled && `${mergedClsPrefix}-legacy-transfer-list-item--disabled`,\n                source\n                    ? `${mergedClsPrefix}-legacy-transfer-list-item--source`\n                    : `${mergedClsPrefix}-legacy-transfer-list-item--target`\n            ], onClick: this.handleClick },\n            h(\"div\", { class: `${mergedClsPrefix}-legacy-transfer-list-item__checkbox` },\n                h(NCheckbox, { theme: mergedTheme.peers.Checkbox, themeOverrides: mergedTheme.peerOverrides.Checkbox, disabled: disabled, checked: checked })),\n            h(\"div\", { class: `${mergedClsPrefix}-legacy-transfer-list-item__label`, title: getTitleAttribute(label) }, label)));\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}