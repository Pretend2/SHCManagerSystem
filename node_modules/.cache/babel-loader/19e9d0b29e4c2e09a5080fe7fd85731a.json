{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { h, Transition, defineComponent, ref, computed, watchEffect, provide, inject, withDirectives, vShow, mergeProps, watch, onBeforeUnmount } from 'vue';\nimport { VFocusTrap } from 'vueuc';\nimport { clickoutside } from 'vdirs';\nimport { useConfig, useRtl } from '../../_mixins';\nimport { popoverBodyInjectionKey } from '../../popover/src/interface';\nimport { modalBodyInjectionKey } from '../../modal/src/interface';\nimport { NScrollbar } from '../../_internal';\nimport { useLockHtmlScroll } from '../../_utils';\nimport { drawerBodyInjectionKey, drawerInjectionKey } from './interface';\nexport default defineComponent({\n  name: 'NDrawerContent',\n  inheritAttrs: false,\n  props: {\n    blockScroll: Boolean,\n    show: {\n      type: Boolean,\n      default: undefined\n    },\n    displayDirective: {\n      type: String,\n      required: true\n    },\n    placement: {\n      type: String,\n      required: true\n    },\n    contentStyle: [Object, String],\n    nativeScrollbar: {\n      type: Boolean,\n      required: true\n    },\n    scrollbarProps: Object,\n    trapFocus: {\n      type: Boolean,\n      default: true\n    },\n    autoFocus: {\n      type: Boolean,\n      default: true\n    },\n    showMask: {\n      type: [Boolean, String],\n      required: true\n    },\n    resizable: Boolean,\n    onClickoutside: Function,\n    onAfterLeave: Function,\n    onAfterEnter: Function,\n    onEsc: Function\n  },\n\n  setup(props) {\n    const displayedRef = ref(!!props.show);\n    const bodyRef = ref(null); // used for detached content\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    const NDrawer = inject(drawerInjectionKey);\n    let startPosition = 0;\n    let memoizedBodyStyleCursor = '';\n    let hoverTimerId = null;\n    const isHoverOnResizeTriggerRef = ref(false);\n    const isDraggingRef = ref(false);\n    const isVertical = computed(() => {\n      return props.placement === 'top' || props.placement === 'bottom';\n    });\n    const {\n      mergedClsPrefixRef,\n      mergedRtlRef\n    } = useConfig(props);\n    const rtlEnabledRef = useRtl('Drawer', mergedRtlRef, mergedClsPrefixRef);\n\n    const handleMousedownResizeTrigger = e => {\n      isDraggingRef.value = true;\n      startPosition = isVertical.value ? e.clientY : e.clientX;\n      memoizedBodyStyleCursor = document.body.style.cursor;\n      document.body.style.cursor = isVertical.value ? 'ns-resize' : 'ew-resize';\n      document.body.addEventListener('mousemove', handleBodyMousemove);\n      document.body.addEventListener('mouseleave', handleBodyMouseleave);\n      document.body.addEventListener('mouseup', handleBodyMouseup);\n    };\n\n    const handleMouseenterResizeTrigger = () => {\n      if (hoverTimerId !== null) {\n        window.clearTimeout(hoverTimerId);\n        hoverTimerId = null;\n      }\n\n      if (isDraggingRef.value) {\n        isHoverOnResizeTriggerRef.value = true;\n      } else {\n        hoverTimerId = window.setTimeout(() => {\n          isHoverOnResizeTriggerRef.value = true;\n        }, 300);\n      }\n    };\n\n    const handleMouseleaveResizeTrigger = () => {\n      if (hoverTimerId !== null) {\n        window.clearTimeout(hoverTimerId);\n        hoverTimerId = null;\n      }\n\n      isHoverOnResizeTriggerRef.value = false;\n    };\n\n    const {\n      doUpdateHeight,\n      doUpdateWidth\n    } = NDrawer;\n\n    const handleBodyMousemove = e => {\n      var _a, _b;\n\n      if (isDraggingRef.value) {\n        if (isVertical.value) {\n          let height = ((_a = bodyRef.value) === null || _a === void 0 ? void 0 : _a.offsetHeight) || 0;\n          const increment = startPosition - e.clientY;\n          height += props.placement === 'bottom' ? increment : -increment;\n          doUpdateHeight(height);\n          startPosition = e.clientY;\n        } else {\n          let width = ((_b = bodyRef.value) === null || _b === void 0 ? void 0 : _b.offsetWidth) || 0;\n          const increment = startPosition - e.clientX;\n          width += props.placement === 'right' ? increment : -increment;\n          doUpdateWidth(width);\n          startPosition = e.clientX;\n        }\n      }\n    };\n\n    const handleBodyMouseup = () => {\n      if (isDraggingRef.value) {\n        startPosition = 0;\n        isDraggingRef.value = false;\n        document.body.style.cursor = memoizedBodyStyleCursor;\n        document.body.removeEventListener('mousemove', handleBodyMousemove);\n        document.body.removeEventListener('mouseup', handleBodyMouseup);\n        document.body.removeEventListener('mouseleave', handleBodyMouseleave);\n      }\n    };\n\n    const handleBodyMouseleave = handleBodyMouseup;\n    watchEffect(() => {\n      if (props.show) displayedRef.value = true;\n    });\n    watch(() => props.show, value => {\n      if (!value) {\n        handleBodyMouseup();\n      }\n    });\n    onBeforeUnmount(() => {\n      handleBodyMouseup();\n    });\n    const bodyDirectivesRef = computed(() => {\n      const {\n        show\n      } = props;\n      const directives = [[vShow, show]];\n\n      if (!props.showMask) {\n        directives.push([clickoutside, props.onClickoutside, undefined, {\n          capture: true\n        }]);\n      }\n\n      return directives;\n    });\n\n    function handleAfterLeave() {\n      var _a;\n\n      displayedRef.value = false;\n      (_a = props.onAfterLeave) === null || _a === void 0 ? void 0 : _a.call(props);\n    }\n\n    useLockHtmlScroll(computed(() => props.blockScroll && displayedRef.value));\n    provide(drawerBodyInjectionKey, bodyRef);\n    provide(popoverBodyInjectionKey, null);\n    provide(modalBodyInjectionKey, null);\n    return {\n      bodyRef,\n      rtlEnabled: rtlEnabledRef,\n      mergedClsPrefix: NDrawer.mergedClsPrefixRef,\n      isMounted: NDrawer.isMountedRef,\n      mergedTheme: NDrawer.mergedThemeRef,\n      displayed: displayedRef,\n      transitionName: computed(() => {\n        return {\n          right: 'slide-in-from-right-transition',\n          left: 'slide-in-from-left-transition',\n          top: 'slide-in-from-top-transition',\n          bottom: 'slide-in-from-bottom-transition'\n        }[props.placement];\n      }),\n      handleAfterLeave,\n      bodyDirectives: bodyDirectivesRef,\n      handleMousedownResizeTrigger,\n      handleMouseenterResizeTrigger,\n      handleMouseleaveResizeTrigger,\n      isDragging: isDraggingRef,\n      isHoverOnResizeTrigger: isHoverOnResizeTriggerRef\n    };\n  },\n\n  render() {\n    const {\n      $slots,\n      mergedClsPrefix\n    } = this;\n    return this.displayDirective === 'show' || this.displayed || this.show ? withDirectives(\n    /* Keep the wrapper dom. Make sure the drawer has a host.\n      Nor the detached content will disappear without transition */\n    h(\"div\", {\n      role: \"none\"\n    }, h(VFocusTrap, {\n      disabled: !this.showMask || !this.trapFocus,\n      active: this.show,\n      autoFocus: this.autoFocus,\n      onEsc: this.onEsc\n    }, {\n      default: () => h(Transition, {\n        name: this.transitionName,\n        appear: this.isMounted,\n        onAfterEnter: this.onAfterEnter,\n        onAfterLeave: this.handleAfterLeave\n      }, {\n        default: () => withDirectives(h('div', mergeProps(this.$attrs, {\n          role: 'dialog',\n          ref: 'bodyRef',\n          'aria-modal': 'true',\n          class: [`${mergedClsPrefix}-drawer`, this.rtlEnabled && `${mergedClsPrefix}-drawer--rtl`, `${mergedClsPrefix}-drawer--${this.placement}-placement`,\n          /**\n           * When the mouse is pressed to resize the drawer,\n           * disable text selection\n           */\n          this.isDragging && `${mergedClsPrefix}-drawer--unselectable`, this.nativeScrollbar && `${mergedClsPrefix}-drawer--native-scrollbar`]\n        }), [this.resizable ? h(\"div\", {\n          class: [`${mergedClsPrefix}-drawer__resize-trigger`, (this.isDragging || this.isHoverOnResizeTrigger) && `${mergedClsPrefix}-drawer__resize-trigger--hover`],\n          onMouseenter: this.handleMouseenterResizeTrigger,\n          onMouseleave: this.handleMouseleaveResizeTrigger,\n          onMousedown: this.handleMousedownResizeTrigger\n        }) : null, this.nativeScrollbar ? h(\"div\", {\n          class: `${mergedClsPrefix}-drawer-content-wrapper`,\n          style: this.contentStyle,\n          role: \"none\"\n        }, $slots) : h(NScrollbar, Object.assign({}, this.scrollbarProps, {\n          contentStyle: this.contentStyle,\n          contentClass: `${mergedClsPrefix}-drawer-content-wrapper`,\n          theme: this.mergedTheme.peers.Scrollbar,\n          themeOverrides: this.mergedTheme.peerOverrides.Scrollbar\n        }), $slots)]), this.bodyDirectives)\n      })\n    })), [[vShow, this.displayDirective === 'if' || this.displayed || this.show]]) : null;\n  }\n\n});","map":{"version":3,"names":["h","Transition","defineComponent","ref","computed","watchEffect","provide","inject","withDirectives","vShow","mergeProps","watch","onBeforeUnmount","VFocusTrap","clickoutside","useConfig","useRtl","popoverBodyInjectionKey","modalBodyInjectionKey","NScrollbar","useLockHtmlScroll","drawerBodyInjectionKey","drawerInjectionKey","name","inheritAttrs","props","blockScroll","Boolean","show","type","default","undefined","displayDirective","String","required","placement","contentStyle","Object","nativeScrollbar","scrollbarProps","trapFocus","autoFocus","showMask","resizable","onClickoutside","Function","onAfterLeave","onAfterEnter","onEsc","setup","displayedRef","bodyRef","NDrawer","startPosition","memoizedBodyStyleCursor","hoverTimerId","isHoverOnResizeTriggerRef","isDraggingRef","isVertical","mergedClsPrefixRef","mergedRtlRef","rtlEnabledRef","handleMousedownResizeTrigger","e","value","clientY","clientX","document","body","style","cursor","addEventListener","handleBodyMousemove","handleBodyMouseleave","handleBodyMouseup","handleMouseenterResizeTrigger","window","clearTimeout","setTimeout","handleMouseleaveResizeTrigger","doUpdateHeight","doUpdateWidth","_a","_b","height","offsetHeight","increment","width","offsetWidth","removeEventListener","bodyDirectivesRef","directives","push","capture","handleAfterLeave","call","rtlEnabled","mergedClsPrefix","isMounted","isMountedRef","mergedTheme","mergedThemeRef","displayed","transitionName","right","left","top","bottom","bodyDirectives","isDragging","isHoverOnResizeTrigger","render","$slots","role","disabled","active","appear","$attrs","class","onMouseenter","onMouseleave","onMousedown","assign","contentClass","theme","peers","Scrollbar","themeOverrides","peerOverrides"],"sources":["D:/VCode/SHC社区管理系统/shc_community_manager_system/node_modules/naive-ui/es/drawer/src/DrawerBodyWrapper.js"],"sourcesContent":["import { h, Transition, defineComponent, ref, computed, watchEffect, provide, inject, withDirectives, vShow, mergeProps, watch, onBeforeUnmount } from 'vue';\nimport { VFocusTrap } from 'vueuc';\nimport { clickoutside } from 'vdirs';\nimport { useConfig, useRtl } from '../../_mixins';\nimport { popoverBodyInjectionKey } from '../../popover/src/interface';\nimport { modalBodyInjectionKey } from '../../modal/src/interface';\nimport { NScrollbar } from '../../_internal';\nimport { useLockHtmlScroll } from '../../_utils';\nimport { drawerBodyInjectionKey, drawerInjectionKey } from './interface';\nexport default defineComponent({\n    name: 'NDrawerContent',\n    inheritAttrs: false,\n    props: {\n        blockScroll: Boolean,\n        show: {\n            type: Boolean,\n            default: undefined\n        },\n        displayDirective: {\n            type: String,\n            required: true\n        },\n        placement: {\n            type: String,\n            required: true\n        },\n        contentStyle: [Object, String],\n        nativeScrollbar: {\n            type: Boolean,\n            required: true\n        },\n        scrollbarProps: Object,\n        trapFocus: {\n            type: Boolean,\n            default: true\n        },\n        autoFocus: {\n            type: Boolean,\n            default: true\n        },\n        showMask: {\n            type: [Boolean, String],\n            required: true\n        },\n        resizable: Boolean,\n        onClickoutside: Function,\n        onAfterLeave: Function,\n        onAfterEnter: Function,\n        onEsc: Function\n    },\n    setup(props) {\n        const displayedRef = ref(!!props.show);\n        const bodyRef = ref(null); // used for detached content\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const NDrawer = inject(drawerInjectionKey);\n        let startPosition = 0;\n        let memoizedBodyStyleCursor = '';\n        let hoverTimerId = null;\n        const isHoverOnResizeTriggerRef = ref(false);\n        const isDraggingRef = ref(false);\n        const isVertical = computed(() => {\n            return props.placement === 'top' || props.placement === 'bottom';\n        });\n        const { mergedClsPrefixRef, mergedRtlRef } = useConfig(props);\n        const rtlEnabledRef = useRtl('Drawer', mergedRtlRef, mergedClsPrefixRef);\n        const handleMousedownResizeTrigger = (e) => {\n            isDraggingRef.value = true;\n            startPosition = isVertical.value ? e.clientY : e.clientX;\n            memoizedBodyStyleCursor = document.body.style.cursor;\n            document.body.style.cursor = isVertical.value ? 'ns-resize' : 'ew-resize';\n            document.body.addEventListener('mousemove', handleBodyMousemove);\n            document.body.addEventListener('mouseleave', handleBodyMouseleave);\n            document.body.addEventListener('mouseup', handleBodyMouseup);\n        };\n        const handleMouseenterResizeTrigger = () => {\n            if (hoverTimerId !== null) {\n                window.clearTimeout(hoverTimerId);\n                hoverTimerId = null;\n            }\n            if (isDraggingRef.value) {\n                isHoverOnResizeTriggerRef.value = true;\n            }\n            else {\n                hoverTimerId = window.setTimeout(() => {\n                    isHoverOnResizeTriggerRef.value = true;\n                }, 300);\n            }\n        };\n        const handleMouseleaveResizeTrigger = () => {\n            if (hoverTimerId !== null) {\n                window.clearTimeout(hoverTimerId);\n                hoverTimerId = null;\n            }\n            isHoverOnResizeTriggerRef.value = false;\n        };\n        const { doUpdateHeight, doUpdateWidth } = NDrawer;\n        const handleBodyMousemove = (e) => {\n            var _a, _b;\n            if (isDraggingRef.value) {\n                if (isVertical.value) {\n                    let height = ((_a = bodyRef.value) === null || _a === void 0 ? void 0 : _a.offsetHeight) || 0;\n                    const increment = startPosition - e.clientY;\n                    height += props.placement === 'bottom' ? increment : -increment;\n                    doUpdateHeight(height);\n                    startPosition = e.clientY;\n                }\n                else {\n                    let width = ((_b = bodyRef.value) === null || _b === void 0 ? void 0 : _b.offsetWidth) || 0;\n                    const increment = startPosition - e.clientX;\n                    width += props.placement === 'right' ? increment : -increment;\n                    doUpdateWidth(width);\n                    startPosition = e.clientX;\n                }\n            }\n        };\n        const handleBodyMouseup = () => {\n            if (isDraggingRef.value) {\n                startPosition = 0;\n                isDraggingRef.value = false;\n                document.body.style.cursor = memoizedBodyStyleCursor;\n                document.body.removeEventListener('mousemove', handleBodyMousemove);\n                document.body.removeEventListener('mouseup', handleBodyMouseup);\n                document.body.removeEventListener('mouseleave', handleBodyMouseleave);\n            }\n        };\n        const handleBodyMouseleave = handleBodyMouseup;\n        watchEffect(() => {\n            if (props.show)\n                displayedRef.value = true;\n        });\n        watch(() => props.show, (value) => {\n            if (!value) {\n                handleBodyMouseup();\n            }\n        });\n        onBeforeUnmount(() => {\n            handleBodyMouseup();\n        });\n        const bodyDirectivesRef = computed(() => {\n            const { show } = props;\n            const directives = [[vShow, show]];\n            if (!props.showMask) {\n                directives.push([\n                    clickoutside,\n                    props.onClickoutside,\n                    undefined,\n                    { capture: true }\n                ]);\n            }\n            return directives;\n        });\n        function handleAfterLeave() {\n            var _a;\n            displayedRef.value = false;\n            (_a = props.onAfterLeave) === null || _a === void 0 ? void 0 : _a.call(props);\n        }\n        useLockHtmlScroll(computed(() => props.blockScroll && displayedRef.value));\n        provide(drawerBodyInjectionKey, bodyRef);\n        provide(popoverBodyInjectionKey, null);\n        provide(modalBodyInjectionKey, null);\n        return {\n            bodyRef,\n            rtlEnabled: rtlEnabledRef,\n            mergedClsPrefix: NDrawer.mergedClsPrefixRef,\n            isMounted: NDrawer.isMountedRef,\n            mergedTheme: NDrawer.mergedThemeRef,\n            displayed: displayedRef,\n            transitionName: computed(() => {\n                return {\n                    right: 'slide-in-from-right-transition',\n                    left: 'slide-in-from-left-transition',\n                    top: 'slide-in-from-top-transition',\n                    bottom: 'slide-in-from-bottom-transition'\n                }[props.placement];\n            }),\n            handleAfterLeave,\n            bodyDirectives: bodyDirectivesRef,\n            handleMousedownResizeTrigger,\n            handleMouseenterResizeTrigger,\n            handleMouseleaveResizeTrigger,\n            isDragging: isDraggingRef,\n            isHoverOnResizeTrigger: isHoverOnResizeTriggerRef\n        };\n    },\n    render() {\n        const { $slots, mergedClsPrefix } = this;\n        return this.displayDirective === 'show' || this.displayed || this.show\n            ? withDirectives(\n            /* Keep the wrapper dom. Make sure the drawer has a host.\n              Nor the detached content will disappear without transition */\n            h(\"div\", { role: \"none\" },\n                h(VFocusTrap, { disabled: !this.showMask || !this.trapFocus, active: this.show, autoFocus: this.autoFocus, onEsc: this.onEsc }, {\n                    default: () => (h(Transition, { name: this.transitionName, appear: this.isMounted, onAfterEnter: this.onAfterEnter, onAfterLeave: this.handleAfterLeave }, {\n                        default: () => withDirectives(h('div', mergeProps(this.$attrs, {\n                            role: 'dialog',\n                            ref: 'bodyRef',\n                            'aria-modal': 'true',\n                            class: [\n                                `${mergedClsPrefix}-drawer`,\n                                this.rtlEnabled &&\n                                    `${mergedClsPrefix}-drawer--rtl`,\n                                `${mergedClsPrefix}-drawer--${this.placement}-placement`,\n                                /**\n                                 * When the mouse is pressed to resize the drawer,\n                                 * disable text selection\n                                 */\n                                this.isDragging &&\n                                    `${mergedClsPrefix}-drawer--unselectable`,\n                                this.nativeScrollbar &&\n                                    `${mergedClsPrefix}-drawer--native-scrollbar`\n                            ]\n                        }), [\n                            this.resizable ? (h(\"div\", { class: [\n                                    `${mergedClsPrefix}-drawer__resize-trigger`,\n                                    (this.isDragging ||\n                                        this.isHoverOnResizeTrigger) &&\n                                        `${mergedClsPrefix}-drawer__resize-trigger--hover`\n                                ], onMouseenter: this.handleMouseenterResizeTrigger, onMouseleave: this.handleMouseleaveResizeTrigger, onMousedown: this.handleMousedownResizeTrigger })) : null,\n                            this.nativeScrollbar ? (h(\"div\", { class: `${mergedClsPrefix}-drawer-content-wrapper`, style: this.contentStyle, role: \"none\" }, $slots)) : (h(NScrollbar, Object.assign({}, this.scrollbarProps, { contentStyle: this.contentStyle, contentClass: `${mergedClsPrefix}-drawer-content-wrapper`, theme: this.mergedTheme.peers.Scrollbar, themeOverrides: this.mergedTheme.peerOverrides.Scrollbar }), $slots))\n                        ]), this.bodyDirectives)\n                    }))\n                })), [\n                [\n                    vShow,\n                    this.displayDirective === 'if' || this.displayed || this.show\n                ]\n            ])\n            : null;\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}