{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { h, defineComponent, computed, provide, ref, watch, toRef, isReactive, watchEffect, nextTick } from 'vue';\nimport { createTreeMate, SubtreeNotLoadedError } from 'treemate';\nimport { VBinder, VTarget, VFollower } from 'vueuc';\nimport { depx, changeColor, happensIn, getPreciseEventTarget } from 'seemly';\nimport { useIsMounted, useMergedState } from 'vooks';\nimport { NInternalSelection } from '../../_internal';\nimport { useLocale, useTheme, useConfig, useFormItem, useThemeClass } from '../../_mixins';\nimport { call, markEventEffectPerformed, useAdjustedTo, warnOnce } from '../../_utils';\nimport { cascaderLight } from '../styles';\nimport { getPathLabel, getRawNodePath } from './utils';\nimport CascaderMenu from './CascaderMenu';\nimport CascaderSelectMenu from './CascaderSelectMenu';\nimport { cascaderInjectionKey } from './interface';\nimport style from './styles/index.cssr';\nexport const cascaderProps = Object.assign(Object.assign({}, useTheme.props), {\n  allowCheckingNotLoaded: Boolean,\n  to: useAdjustedTo.propTo,\n  bordered: {\n    type: Boolean,\n    default: undefined\n  },\n  options: {\n    type: Array,\n    default: () => []\n  },\n  value: [String, Number, Array],\n  defaultValue: {\n    type: [String, Number, Array],\n    default: null\n  },\n  placeholder: String,\n  multiple: Boolean,\n  size: String,\n  filterable: Boolean,\n  disabled: {\n    type: Boolean,\n    default: undefined\n  },\n  disabledField: {\n    type: String,\n    default: 'disabled'\n  },\n  expandTrigger: {\n    type: String,\n    default: 'click'\n  },\n  clearable: Boolean,\n  clearFilterAfterSelect: {\n    type: Boolean,\n    default: true\n  },\n  remote: Boolean,\n  onLoad: Function,\n  separator: {\n    type: String,\n    default: ' / '\n  },\n  filter: Function,\n  placement: {\n    type: String,\n    default: 'bottom-start'\n  },\n  cascade: {\n    type: Boolean,\n    default: true\n  },\n  leafOnly: Boolean,\n  showPath: {\n    type: Boolean,\n    default: true\n  },\n  show: {\n    type: Boolean,\n    default: undefined\n  },\n  maxTagCount: [String, Number],\n  menuProps: Object,\n  filterMenuProps: Object,\n  virtualScroll: {\n    type: Boolean,\n    default: true\n  },\n  checkStrategy: {\n    type: String,\n    default: 'all'\n  },\n  valueField: {\n    type: String,\n    default: 'value'\n  },\n  labelField: {\n    type: String,\n    default: 'label'\n  },\n  childrenField: {\n    type: String,\n    default: 'children'\n  },\n  renderLabel: Function,\n  status: String,\n  'onUpdate:value': [Function, Array],\n  onUpdateValue: [Function, Array],\n  'onUpdate:show': [Function, Array],\n  onUpdateShow: [Function, Array],\n  onBlur: Function,\n  onFocus: Function,\n  // deprecated\n  onChange: [Function, Array]\n});\nexport default defineComponent({\n  name: 'Cascader',\n  props: cascaderProps,\n\n  setup(props) {\n    if (process.env.NODE_ENV !== 'production') {\n      watchEffect(() => {\n        if (props.leafOnly) {\n          warnOnce('cascader', '`leaf-only` is deprecated, please use `check-strategy=\"child\"` instead');\n        }\n\n        if (props.onChange !== undefined) {\n          warnOnce('cascader', '`on-change` is deprecated, please use `on-update:value` instead.');\n        }\n      });\n    }\n\n    const {\n      mergedBorderedRef,\n      mergedClsPrefixRef,\n      namespaceRef,\n      inlineThemeDisabled\n    } = useConfig(props);\n    const themeRef = useTheme('Cascader', '-cascader', style, cascaderLight, props, mergedClsPrefixRef);\n    const {\n      localeRef\n    } = useLocale('Cascader');\n    const uncontrolledValueRef = ref(props.defaultValue);\n    const controlledValueRef = computed(() => props.value);\n    const mergedValueRef = useMergedState(controlledValueRef, uncontrolledValueRef);\n    const mergedCheckStrategyRef = computed(() => {\n      return props.leafOnly ? 'child' : props.checkStrategy;\n    });\n    const patternRef = ref('');\n    const formItem = useFormItem(props);\n    const {\n      mergedSizeRef,\n      mergedDisabledRef,\n      mergedStatusRef\n    } = formItem;\n    const cascaderMenuInstRef = ref(null);\n    const selectMenuInstRef = ref(null);\n    const triggerInstRef = ref(null);\n    const keyboardKeyRef = ref(null);\n    const hoverKeyRef = ref(null);\n    const loadingKeySetRef = ref(new Set());\n    const selectMenuFollowerRef = ref(null);\n    const cascaderMenuFollowerRef = ref(null);\n    const adjustedToRef = useAdjustedTo(props);\n    const focusedRef = ref(false);\n\n    const addLoadingKey = key => {\n      loadingKeySetRef.value.add(key);\n    };\n\n    const deleteLoadingKey = key => {\n      loadingKeySetRef.value.delete(key);\n    };\n\n    const treeMateRef = computed(() => {\n      const {\n        valueField,\n        childrenField,\n        disabledField\n      } = props;\n      return createTreeMate(props.options, {\n        getDisabled(node) {\n          return node[disabledField];\n        },\n\n        getKey(node) {\n          return node[valueField];\n        },\n\n        getChildren(node) {\n          return node[childrenField];\n        }\n\n      });\n    });\n    const mergedKeysRef = computed(() => {\n      const {\n        cascade,\n        multiple\n      } = props;\n\n      if (multiple && Array.isArray(mergedValueRef.value)) {\n        return treeMateRef.value.getCheckedKeys(mergedValueRef.value, {\n          cascade,\n          allowNotLoaded: props.allowCheckingNotLoaded\n        });\n      } else {\n        return {\n          checkedKeys: [],\n          indeterminateKeys: []\n        };\n      }\n    });\n    const checkedKeysRef = computed(() => mergedKeysRef.value.checkedKeys);\n    const indeterminateKeysRef = computed(() => mergedKeysRef.value.indeterminateKeys);\n    const menuModelRef = computed(() => {\n      const {\n        treeNodePath,\n        treeNode\n      } = treeMateRef.value.getPath(hoverKeyRef.value);\n      let ret;\n\n      if (treeNode === null) {\n        ret = [treeMateRef.value.treeNodes];\n      } else {\n        ret = treeNodePath.map(treeNode => treeNode.siblings);\n\n        if (!treeNode.isLeaf && !loadingKeySetRef.value.has(treeNode.key) && treeNode.children) {\n          ret.push(treeNode.children);\n        }\n      }\n\n      return ret;\n    });\n    const hoverKeyPathRef = computed(() => {\n      const {\n        keyPath\n      } = treeMateRef.value.getPath(hoverKeyRef.value);\n      return keyPath;\n    });\n    const optionHeightRef = computed(() => {\n      return themeRef.value.self.optionHeight;\n    });\n\n    if (isReactive(props.options)) {\n      watch(props.options, (value, oldValue) => {\n        if (!(value === oldValue)) {\n          hoverKeyRef.value = null;\n          keyboardKeyRef.value = null;\n        }\n      });\n    }\n\n    function doUpdateShow(value) {\n      const {\n        onUpdateShow,\n        'onUpdate:show': _onUpdateShow\n      } = props;\n\n      if (onUpdateShow) {\n        call(onUpdateShow, value);\n      }\n\n      if (_onUpdateShow) {\n        call(_onUpdateShow, value);\n      }\n\n      uncontrolledShowRef.value = value;\n    }\n\n    function doUpdateValue(value, option, optionPath) {\n      const {\n        onUpdateValue,\n        'onUpdate:value': _onUpdateValue,\n        onChange\n      } = props;\n      const {\n        nTriggerFormInput,\n        nTriggerFormChange\n      } = formItem;\n\n      if (onUpdateValue) {\n        call(onUpdateValue, value, option, optionPath);\n      }\n\n      if (_onUpdateValue) {\n        call(_onUpdateValue, value, option, optionPath);\n      }\n\n      if (onChange) {\n        call(onChange, value, option, optionPath);\n      }\n\n      uncontrolledValueRef.value = value;\n      nTriggerFormInput();\n      nTriggerFormChange();\n    }\n\n    function updateKeyboardKey(key) {\n      keyboardKeyRef.value = key;\n    }\n\n    function updateHoverKey(key) {\n      hoverKeyRef.value = key;\n    }\n\n    function doCheck(key) {\n      var _a;\n\n      const {\n        cascade,\n        multiple,\n        filterable\n      } = props;\n      const {\n        value: {\n          check,\n          getNode,\n          getPath\n        }\n      } = treeMateRef;\n\n      if (multiple) {\n        try {\n          const {\n            checkedKeys\n          } = check(key, mergedKeysRef.value.checkedKeys, {\n            cascade,\n            checkStrategy: mergedCheckStrategyRef.value,\n            allowNotLoaded: props.allowCheckingNotLoaded\n          });\n          doUpdateValue(checkedKeys, checkedKeys.map(checkedKey => {\n            var _a;\n\n            return ((_a = getNode(checkedKey)) === null || _a === void 0 ? void 0 : _a.rawNode) || null;\n          }), checkedKeys.map(checkedKey => {\n            var _a;\n\n            return getRawNodePath((_a = getPath(checkedKey)) === null || _a === void 0 ? void 0 : _a.treeNodePath);\n          }));\n          if (filterable) focusSelectionInput();\n          keyboardKeyRef.value = key;\n          hoverKeyRef.value = key;\n        } catch (err) {\n          if (err instanceof SubtreeNotLoadedError) {\n            if (cascaderMenuInstRef.value) {\n              const tmNode = getNode(key);\n\n              if (tmNode !== null) {\n                cascaderMenuInstRef.value.showErrorMessage(tmNode.rawNode[props.labelField]);\n              }\n            }\n          } else {\n            throw err;\n          }\n        }\n      } else {\n        if (mergedCheckStrategyRef.value === 'child') {\n          const tmNode = getNode(key);\n\n          if (tmNode === null || tmNode === void 0 ? void 0 : tmNode.isLeaf) {\n            doUpdateValue(key, tmNode.rawNode, getRawNodePath(getPath(key).treeNodePath));\n          } else {\n            return false;\n          }\n        } else {\n          const tmNode = getNode(key);\n          doUpdateValue(key, (tmNode === null || tmNode === void 0 ? void 0 : tmNode.rawNode) || null, getRawNodePath((_a = getPath(key)) === null || _a === void 0 ? void 0 : _a.treeNodePath));\n        }\n      }\n\n      return true;\n    }\n\n    function doUncheck(key) {\n      const {\n        cascade,\n        multiple\n      } = props;\n\n      if (multiple) {\n        const {\n          value: {\n            uncheck,\n            getNode,\n            getPath\n          }\n        } = treeMateRef;\n        const {\n          checkedKeys\n        } = uncheck(key, mergedKeysRef.value.checkedKeys, {\n          cascade,\n          checkStrategy: mergedCheckStrategyRef.value,\n          allowNotLoaded: props.allowCheckingNotLoaded\n        });\n        doUpdateValue(checkedKeys, checkedKeys.map(checkedKey => {\n          var _a;\n\n          return ((_a = getNode(checkedKey)) === null || _a === void 0 ? void 0 : _a.rawNode) || null;\n        }), checkedKeys.map(checkedKey => {\n          var _a;\n\n          return getRawNodePath((_a = getPath(checkedKey)) === null || _a === void 0 ? void 0 : _a.treeNodePath);\n        }));\n        keyboardKeyRef.value = key;\n        hoverKeyRef.value = key;\n      }\n    }\n\n    const selectedOptionsRef = computed(() => {\n      if (props.multiple) {\n        const {\n          showPath,\n          separator,\n          labelField,\n          cascade\n        } = props;\n        const {\n          getCheckedKeys,\n          getNode\n        } = treeMateRef.value;\n        const value = getCheckedKeys(checkedKeysRef.value, {\n          cascade,\n          checkStrategy: mergedCheckStrategyRef.value,\n          allowNotLoaded: props.allowCheckingNotLoaded\n        }).checkedKeys;\n        return value.map(key => {\n          const node = getNode(key);\n\n          if (node === null) {\n            return {\n              label: String(key),\n              value: key\n            };\n          } else {\n            return {\n              label: showPath ? getPathLabel(node, separator, labelField) : node.rawNode[labelField],\n              value: node.key\n            };\n          }\n        });\n      } else return [];\n    });\n    const selectedOptionRef = computed(() => {\n      const {\n        multiple,\n        showPath,\n        separator,\n        labelField\n      } = props;\n      const {\n        value\n      } = mergedValueRef;\n\n      if (!multiple && !Array.isArray(value)) {\n        const {\n          getNode\n        } = treeMateRef.value;\n\n        if (value === null) {\n          return null;\n        }\n\n        const node = getNode(value);\n\n        if (node === null) {\n          return {\n            label: String(value),\n            value\n          };\n        } else {\n          return {\n            label: showPath ? getPathLabel(node, separator, labelField) : node.rawNode[labelField],\n            value: node.key\n          };\n        }\n      } else return null;\n    });\n    const uncontrolledShowRef = ref(false);\n    const controlledShowRef = toRef(props, 'show');\n    const mergedShowRef = useMergedState(controlledShowRef, uncontrolledShowRef);\n    const localizedPlaceholderRef = computed(() => {\n      const {\n        placeholder\n      } = props;\n      if (placeholder !== undefined) return placeholder;\n      return localeRef.value.placeholder;\n    }); // select option related\n\n    const showSelectMenuRef = computed(() => {\n      return !!(props.filterable && patternRef.value);\n    }); // init hover key\n\n    watch(mergedShowRef, show => {\n      if (!show) return;\n      if (props.multiple) return;\n      const {\n        value\n      } = mergedValueRef;\n\n      if (!Array.isArray(value) && value !== null) {\n        keyboardKeyRef.value = value;\n        hoverKeyRef.value = value;\n        void nextTick(() => {\n          var _a;\n\n          if (!mergedShowRef.value) return;\n          const {\n            value: hoverKey\n          } = hoverKeyRef;\n\n          if (mergedValueRef.value !== null) {\n            const node = treeMateRef.value.getNode(hoverKey);\n\n            if (node) {\n              (_a = cascaderMenuInstRef.value) === null || _a === void 0 ? void 0 : _a.scroll(node.level, node.index, depx(optionHeightRef.value));\n            }\n          }\n        });\n      } else {\n        keyboardKeyRef.value = null;\n        hoverKeyRef.value = null;\n      }\n    }, {\n      immediate: true\n    }); // --- methods\n\n    function doBlur(e) {\n      const {\n        onBlur\n      } = props;\n      const {\n        nTriggerFormBlur\n      } = formItem;\n      if (onBlur) call(onBlur, e);\n      nTriggerFormBlur();\n    }\n\n    function doFocus(e) {\n      const {\n        onFocus\n      } = props;\n      const {\n        nTriggerFormFocus\n      } = formItem;\n      if (onFocus) call(onFocus, e);\n      nTriggerFormFocus();\n    }\n\n    function focusSelectionInput() {\n      var _a;\n\n      (_a = triggerInstRef.value) === null || _a === void 0 ? void 0 : _a.focusInput();\n    }\n\n    function focusSelection() {\n      var _a;\n\n      (_a = triggerInstRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n\n    function openMenu() {\n      if (!mergedDisabledRef.value) {\n        patternRef.value = '';\n        doUpdateShow(true);\n\n        if (props.filterable) {\n          focusSelectionInput();\n        }\n      }\n    }\n\n    function closeMenu(returnFocus = false) {\n      if (returnFocus) {\n        focusSelection();\n      }\n\n      doUpdateShow(false);\n      patternRef.value = '';\n    }\n\n    function handleCascaderMenuClickOutside(e) {\n      var _a;\n\n      if (showSelectMenuRef.value) return;\n\n      if (mergedShowRef.value) {\n        if (!((_a = triggerInstRef.value) === null || _a === void 0 ? void 0 : _a.$el.contains(getPreciseEventTarget(e)))) {\n          closeMenu();\n        }\n      }\n    }\n\n    function handleSelectMenuClickOutside(e) {\n      if (!showSelectMenuRef.value) return;\n      handleCascaderMenuClickOutside(e);\n    }\n\n    function clearPattern() {\n      if (props.clearFilterAfterSelect) patternRef.value = '';\n    } // --- keyboard\n\n\n    function move(direction) {\n      var _a, _b, _c;\n\n      const {\n        value: keyboardKey\n      } = keyboardKeyRef;\n      const {\n        value: treeMate\n      } = treeMateRef;\n\n      switch (direction) {\n        case 'prev':\n          if (keyboardKey !== null) {\n            const node = treeMate.getPrev(keyboardKey, {\n              loop: true\n            });\n\n            if (node !== null) {\n              updateKeyboardKey(node.key);\n              (_a = cascaderMenuInstRef.value) === null || _a === void 0 ? void 0 : _a.scroll(node.level, node.index, depx(optionHeightRef.value));\n            }\n          }\n\n          break;\n\n        case 'next':\n          if (keyboardKey === null) {\n            const node = treeMate.getFirstAvailableNode();\n\n            if (node !== null) {\n              updateKeyboardKey(node.key);\n              (_b = cascaderMenuInstRef.value) === null || _b === void 0 ? void 0 : _b.scroll(node.level, node.index, depx(optionHeightRef.value));\n            }\n          } else {\n            const node = treeMate.getNext(keyboardKey, {\n              loop: true\n            });\n\n            if (node !== null) {\n              updateKeyboardKey(node.key);\n              (_c = cascaderMenuInstRef.value) === null || _c === void 0 ? void 0 : _c.scroll(node.level, node.index, depx(optionHeightRef.value));\n            }\n          }\n\n          break;\n\n        case 'child':\n          if (keyboardKey !== null) {\n            const currentNode = treeMate.getNode(keyboardKey);\n\n            if (currentNode !== null) {\n              if (currentNode.shallowLoaded) {\n                const node = treeMate.getChild(keyboardKey);\n\n                if (node !== null) {\n                  updateHoverKey(keyboardKey);\n                  updateKeyboardKey(node.key);\n                }\n              } else {\n                const {\n                  value: loadingKeySet\n                } = loadingKeySetRef;\n\n                if (!loadingKeySet.has(keyboardKey)) {\n                  addLoadingKey(keyboardKey);\n                  updateHoverKey(keyboardKey);\n                  const {\n                    onLoad\n                  } = props;\n\n                  if (onLoad) {\n                    onLoad(currentNode.rawNode).then(() => {\n                      deleteLoadingKey(keyboardKey);\n                    }).catch(() => {\n                      deleteLoadingKey(keyboardKey);\n                    });\n                  }\n                }\n              }\n            }\n          }\n\n          break;\n\n        case 'parent':\n          if (keyboardKey !== null) {\n            const node = treeMate.getParent(keyboardKey);\n\n            if (node !== null) {\n              updateKeyboardKey(node.key);\n              const parentNode = node.getParent();\n\n              if (parentNode === null) {\n                updateHoverKey(null);\n              } else {\n                updateHoverKey(parentNode.key);\n              }\n            }\n          }\n\n          break;\n      }\n    }\n\n    function handleKeydown(e) {\n      var _a, _b;\n\n      switch (e.key) {\n        case ' ':\n        case 'ArrowDown':\n        case 'ArrowUp':\n          if (props.filterable && mergedShowRef.value) {\n            break;\n          }\n\n          e.preventDefault();\n          break;\n      }\n\n      if (happensIn(e, 'action')) return;\n\n      switch (e.key) {\n        case ' ':\n          if (props.filterable) return;\n        // eslint-disable-next-line no-fallthrough\n\n        case 'Enter':\n          if (!mergedShowRef.value) {\n            openMenu();\n          } else {\n            const {\n              value: showSelectMenu\n            } = showSelectMenuRef;\n            const {\n              value: keyboardKey\n            } = keyboardKeyRef;\n\n            if (!showSelectMenu) {\n              if (keyboardKey !== null) {\n                if (checkedKeysRef.value.includes(keyboardKey) || indeterminateKeysRef.value.includes(keyboardKey)) {\n                  doUncheck(keyboardKey);\n                } else {\n                  const checkIsValid = doCheck(keyboardKey);\n\n                  if (!props.multiple && checkIsValid) {\n                    closeMenu(true);\n                  }\n                }\n              }\n            } else {\n              if (selectMenuInstRef.value) {\n                const hasCorrespondingOption = selectMenuInstRef.value.enter();\n                if (hasCorrespondingOption) clearPattern();\n              }\n            }\n          }\n\n          break;\n\n        case 'ArrowUp':\n          e.preventDefault();\n\n          if (mergedShowRef.value) {\n            if (showSelectMenuRef.value) {\n              (_a = selectMenuInstRef.value) === null || _a === void 0 ? void 0 : _a.prev();\n            } else {\n              move('prev');\n            }\n          }\n\n          break;\n\n        case 'ArrowDown':\n          e.preventDefault();\n\n          if (mergedShowRef.value) {\n            if (showSelectMenuRef.value) {\n              (_b = selectMenuInstRef.value) === null || _b === void 0 ? void 0 : _b.next();\n            } else {\n              move('next');\n            }\n          } else {\n            openMenu();\n          }\n\n          break;\n\n        case 'ArrowLeft':\n          e.preventDefault();\n\n          if (mergedShowRef.value && !showSelectMenuRef.value) {\n            move('parent');\n          }\n\n          break;\n\n        case 'ArrowRight':\n          e.preventDefault();\n\n          if (mergedShowRef.value && !showSelectMenuRef.value) {\n            move('child');\n          }\n\n          break;\n\n        case 'Escape':\n          if (mergedShowRef.value) {\n            markEventEffectPerformed(e);\n            closeMenu(true);\n          }\n\n      }\n    }\n\n    function handleMenuKeydown(e) {\n      handleKeydown(e);\n    } // --- search\n\n\n    function handleClear(e) {\n      e.stopPropagation();\n\n      if (props.multiple) {\n        doUpdateValue([], [], []);\n      } else {\n        doUpdateValue(null, null, null);\n      }\n    }\n\n    function handleTriggerFocus(e) {\n      var _a;\n\n      if (!((_a = cascaderMenuInstRef.value) === null || _a === void 0 ? void 0 : _a.$el.contains(e.relatedTarget))) {\n        focusedRef.value = true;\n        doFocus(e);\n      }\n    }\n\n    function handleTriggerBlur(e) {\n      var _a;\n\n      if (!((_a = cascaderMenuInstRef.value) === null || _a === void 0 ? void 0 : _a.$el.contains(e.relatedTarget))) {\n        focusedRef.value = false;\n        doBlur(e);\n        closeMenu();\n      }\n    }\n\n    function handleMenuFocus(e) {\n      var _a;\n\n      if (!((_a = triggerInstRef.value) === null || _a === void 0 ? void 0 : _a.$el.contains(e.relatedTarget))) {\n        focusedRef.value = true;\n        doFocus(e);\n      }\n    }\n\n    function handleMenuBlur(e) {\n      var _a;\n\n      if (!((_a = triggerInstRef.value) === null || _a === void 0 ? void 0 : _a.$el.contains(e.relatedTarget))) {\n        focusedRef.value = false;\n        doBlur(e);\n      }\n    }\n\n    function handleMenuMousedown(e) {\n      if (!happensIn(e, 'action')) {\n        if (props.multiple && props.filter) {\n          e.preventDefault();\n          focusSelectionInput();\n        }\n      }\n    }\n\n    function handleMenuTabout() {\n      closeMenu(true);\n    }\n\n    function handleTriggerClick() {\n      if (props.filterable) {\n        openMenu();\n      } else {\n        if (mergedShowRef.value) {\n          closeMenu(true);\n        } else {\n          openMenu();\n        }\n      }\n    }\n\n    function handlePatternInput(e) {\n      patternRef.value = e.target.value;\n    }\n\n    function handleDeleteOption(option) {\n      const {\n        multiple\n      } = props;\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n\n      if (multiple && Array.isArray(mergedValue) && option.value !== undefined) {\n        doUncheck(option.value);\n      } else {\n        doUpdateValue(null, null, null);\n      }\n    } // sync position\n\n\n    function syncSelectMenuPosition() {\n      var _a;\n\n      (_a = selectMenuFollowerRef.value) === null || _a === void 0 ? void 0 : _a.syncPosition();\n    }\n\n    function syncCascaderMenuPosition() {\n      var _a;\n\n      (_a = cascaderMenuFollowerRef.value) === null || _a === void 0 ? void 0 : _a.syncPosition();\n    }\n\n    function handleTriggerResize() {\n      if (mergedShowRef.value) {\n        if (showSelectMenuRef.value) {\n          syncSelectMenuPosition();\n        } else {\n          syncCascaderMenuPosition();\n        }\n      }\n    }\n\n    provide(cascaderInjectionKey, {\n      mergedClsPrefixRef,\n      mergedThemeRef: themeRef,\n      mergedValueRef,\n      checkedKeysRef,\n      indeterminateKeysRef,\n      hoverKeyPathRef,\n      mergedCheckStrategyRef,\n      cascadeRef: toRef(props, 'cascade'),\n      multipleRef: toRef(props, 'multiple'),\n      keyboardKeyRef,\n      hoverKeyRef,\n      remoteRef: toRef(props, 'remote'),\n      loadingKeySetRef,\n      expandTriggerRef: toRef(props, 'expandTrigger'),\n      isMountedRef: useIsMounted(),\n      onLoadRef: toRef(props, 'onLoad'),\n      virtualScrollRef: toRef(props, 'virtualScroll'),\n      optionHeightRef,\n      localeRef,\n      labelFieldRef: toRef(props, 'labelField'),\n      renderLabelRef: toRef(props, 'renderLabel'),\n      syncCascaderMenuPosition,\n      syncSelectMenuPosition,\n      updateKeyboardKey,\n      updateHoverKey,\n      addLoadingKey,\n      deleteLoadingKey,\n      doCheck,\n      doUncheck,\n      closeMenu,\n      handleSelectMenuClickOutside,\n      handleCascaderMenuClickOutside,\n      clearPattern\n    });\n    const exposedMethods = {\n      focus: () => {\n        var _a;\n\n        (_a = triggerInstRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n      },\n      blur: () => {\n        var _a;\n\n        (_a = triggerInstRef.value) === null || _a === void 0 ? void 0 : _a.blur();\n      }\n    };\n    const cssVarsRef = computed(() => {\n      const {\n        self: {\n          optionArrowColor,\n          optionTextColor,\n          optionTextColorActive,\n          optionTextColorDisabled,\n          optionCheckMarkColor,\n          menuColor,\n          menuBoxShadow,\n          menuDividerColor,\n          menuBorderRadius,\n          menuHeight,\n          optionColorHover,\n          optionHeight,\n          optionFontSize,\n          loadingColor,\n          columnWidth\n        },\n        common: {\n          cubicBezierEaseInOut\n        }\n      } = themeRef.value;\n      return {\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-menu-border-radius': menuBorderRadius,\n        '--n-menu-box-shadow': menuBoxShadow,\n        '--n-menu-height': menuHeight,\n        '--n-column-width': columnWidth,\n        '--n-menu-color': menuColor,\n        '--n-menu-divider-color': menuDividerColor,\n        '--n-option-height': optionHeight,\n        '--n-option-font-size': optionFontSize,\n        '--n-option-text-color': optionTextColor,\n        '--n-option-text-color-disabled': optionTextColorDisabled,\n        '--n-option-text-color-active': optionTextColorActive,\n        '--n-option-color-hover': optionColorHover,\n        '--n-option-check-mark-color': optionCheckMarkColor,\n        '--n-option-arrow-color': optionArrowColor,\n        '--n-menu-mask-color': changeColor(menuColor, {\n          alpha: 0.75\n        }),\n        '--n-loading-color': loadingColor\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('cascader', undefined, cssVarsRef, props) : undefined;\n    return Object.assign(Object.assign({}, exposedMethods), {\n      handleTriggerResize,\n      mergedStatus: mergedStatusRef,\n      selectMenuFollowerRef,\n      cascaderMenuFollowerRef,\n      triggerInstRef,\n      selectMenuInstRef,\n      cascaderMenuInstRef,\n      mergedBordered: mergedBorderedRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      namespace: namespaceRef,\n      mergedValue: mergedValueRef,\n      mergedShow: mergedShowRef,\n      showSelectMenu: showSelectMenuRef,\n      pattern: patternRef,\n      treeMate: treeMateRef,\n      mergedSize: mergedSizeRef,\n      mergedDisabled: mergedDisabledRef,\n      localizedPlaceholder: localizedPlaceholderRef,\n      selectedOption: selectedOptionRef,\n      selectedOptions: selectedOptionsRef,\n      adjustedTo: adjustedToRef,\n      menuModel: menuModelRef,\n      handleMenuTabout,\n      handleMenuFocus,\n      handleMenuBlur,\n      handleMenuKeydown,\n      handleMenuMousedown,\n      handleTriggerFocus,\n      handleTriggerBlur,\n      handleTriggerClick,\n      handleClear,\n      handleDeleteOption,\n      handlePatternInput,\n      handleKeydown,\n      focused: focusedRef,\n      optionHeight: optionHeightRef,\n      mergedTheme: themeRef,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    });\n  },\n\n  render() {\n    const {\n      mergedClsPrefix\n    } = this;\n    return h(\"div\", {\n      class: `${mergedClsPrefix}-cascader`\n    }, h(VBinder, null, {\n      default: () => [h(VTarget, null, {\n        default: () => h(NInternalSelection, {\n          onResize: this.handleTriggerResize,\n          ref: \"triggerInstRef\",\n          status: this.mergedStatus,\n          clsPrefix: mergedClsPrefix,\n          maxTagCount: this.maxTagCount,\n          bordered: this.mergedBordered,\n          size: this.mergedSize,\n          theme: this.mergedTheme.peers.InternalSelection,\n          themeOverrides: this.mergedTheme.peerOverrides.InternalSelection,\n          active: this.mergedShow,\n          pattern: this.pattern,\n          placeholder: this.localizedPlaceholder,\n          selectedOption: this.selectedOption,\n          selectedOptions: this.selectedOptions,\n          multiple: this.multiple,\n          filterable: this.filterable,\n          clearable: this.clearable,\n          disabled: this.mergedDisabled,\n          focused: this.focused,\n          onFocus: this.handleTriggerFocus,\n          onBlur: this.handleTriggerBlur,\n          onClick: this.handleTriggerClick,\n          onClear: this.handleClear,\n          onDeleteOption: this.handleDeleteOption,\n          onPatternInput: this.handlePatternInput,\n          onKeydown: this.handleKeydown\n        }, {\n          arrow: () => {\n            var _a, _b;\n\n            return (_b = (_a = this.$slots).arrow) === null || _b === void 0 ? void 0 : _b.call(_a);\n          }\n        })\n      }), h(VFollower, {\n        key: \"cascaderMenu\",\n        ref: \"cascaderMenuFollowerRef\",\n        show: this.mergedShow && !this.showSelectMenu,\n        containerClass: this.namespace,\n        placement: this.placement,\n        width: !this.options.length ? 'target' : undefined,\n        teleportDisabled: this.adjustedTo === useAdjustedTo.tdkey,\n        to: this.adjustedTo\n      }, {\n        default: () => {\n          var _a;\n\n          (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n          const {\n            menuProps\n          } = this;\n          return h(CascaderMenu, Object.assign({}, menuProps, {\n            ref: \"cascaderMenuInstRef\",\n            class: [this.themeClass, menuProps === null || menuProps === void 0 ? void 0 : menuProps.class],\n            value: this.mergedValue,\n            show: this.mergedShow && !this.showSelectMenu,\n            menuModel: this.menuModel,\n            style: [this.cssVars, menuProps === null || menuProps === void 0 ? void 0 : menuProps.style],\n            onFocus: this.handleMenuFocus,\n            onBlur: this.handleMenuBlur,\n            onKeydown: this.handleMenuKeydown,\n            onMousedown: this.handleMenuMousedown,\n            onTabout: this.handleMenuTabout\n          }), {\n            action: () => {\n              var _a, _b;\n\n              return (_b = (_a = this.$slots).action) === null || _b === void 0 ? void 0 : _b.call(_a);\n            },\n            empty: () => {\n              var _a, _b;\n\n              return (_b = (_a = this.$slots).empty) === null || _b === void 0 ? void 0 : _b.call(_a);\n            }\n          });\n        }\n      }), h(VFollower, {\n        key: \"selectMenu\",\n        ref: \"selectMenuFollowerRef\",\n        show: this.mergedShow && this.showSelectMenu,\n        containerClass: this.namespace,\n        width: \"target\",\n        placement: this.placement,\n        to: this.adjustedTo,\n        teleportDisabled: this.adjustedTo === useAdjustedTo.tdkey\n      }, {\n        default: () => {\n          var _a;\n\n          (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n          const {\n            filterMenuProps\n          } = this;\n          return h(CascaderSelectMenu, Object.assign({}, filterMenuProps, {\n            ref: \"selectMenuInstRef\",\n            class: [this.themeClass, filterMenuProps === null || filterMenuProps === void 0 ? void 0 : filterMenuProps.class],\n            value: this.mergedValue,\n            show: this.mergedShow && this.showSelectMenu,\n            pattern: this.pattern,\n            multiple: this.multiple,\n            tmNodes: this.treeMate.treeNodes,\n            filter: this.filter,\n            labelField: this.labelField,\n            separator: this.separator,\n            style: [this.cssVars, filterMenuProps === null || filterMenuProps === void 0 ? void 0 : filterMenuProps.style]\n          }));\n        }\n      })]\n    }));\n  }\n\n});","map":{"version":3,"names":["h","defineComponent","computed","provide","ref","watch","toRef","isReactive","watchEffect","nextTick","createTreeMate","SubtreeNotLoadedError","VBinder","VTarget","VFollower","depx","changeColor","happensIn","getPreciseEventTarget","useIsMounted","useMergedState","NInternalSelection","useLocale","useTheme","useConfig","useFormItem","useThemeClass","call","markEventEffectPerformed","useAdjustedTo","warnOnce","cascaderLight","getPathLabel","getRawNodePath","CascaderMenu","CascaderSelectMenu","cascaderInjectionKey","style","cascaderProps","Object","assign","props","allowCheckingNotLoaded","Boolean","to","propTo","bordered","type","default","undefined","options","Array","value","String","Number","defaultValue","placeholder","multiple","size","filterable","disabled","disabledField","expandTrigger","clearable","clearFilterAfterSelect","remote","onLoad","Function","separator","filter","placement","cascade","leafOnly","showPath","show","maxTagCount","menuProps","filterMenuProps","virtualScroll","checkStrategy","valueField","labelField","childrenField","renderLabel","status","onUpdateValue","onUpdateShow","onBlur","onFocus","onChange","name","setup","process","env","NODE_ENV","mergedBorderedRef","mergedClsPrefixRef","namespaceRef","inlineThemeDisabled","themeRef","localeRef","uncontrolledValueRef","controlledValueRef","mergedValueRef","mergedCheckStrategyRef","patternRef","formItem","mergedSizeRef","mergedDisabledRef","mergedStatusRef","cascaderMenuInstRef","selectMenuInstRef","triggerInstRef","keyboardKeyRef","hoverKeyRef","loadingKeySetRef","Set","selectMenuFollowerRef","cascaderMenuFollowerRef","adjustedToRef","focusedRef","addLoadingKey","key","add","deleteLoadingKey","delete","treeMateRef","getDisabled","node","getKey","getChildren","mergedKeysRef","isArray","getCheckedKeys","allowNotLoaded","checkedKeys","indeterminateKeys","checkedKeysRef","indeterminateKeysRef","menuModelRef","treeNodePath","treeNode","getPath","ret","treeNodes","map","siblings","isLeaf","has","children","push","hoverKeyPathRef","keyPath","optionHeightRef","self","optionHeight","oldValue","doUpdateShow","_onUpdateShow","uncontrolledShowRef","doUpdateValue","option","optionPath","_onUpdateValue","nTriggerFormInput","nTriggerFormChange","updateKeyboardKey","updateHoverKey","doCheck","_a","check","getNode","checkedKey","rawNode","focusSelectionInput","err","tmNode","showErrorMessage","doUncheck","uncheck","selectedOptionsRef","label","selectedOptionRef","controlledShowRef","mergedShowRef","localizedPlaceholderRef","showSelectMenuRef","hoverKey","scroll","level","index","immediate","doBlur","e","nTriggerFormBlur","doFocus","nTriggerFormFocus","focusInput","focusSelection","focus","openMenu","closeMenu","returnFocus","handleCascaderMenuClickOutside","$el","contains","handleSelectMenuClickOutside","clearPattern","move","direction","_b","_c","keyboardKey","treeMate","getPrev","loop","getFirstAvailableNode","getNext","currentNode","shallowLoaded","getChild","loadingKeySet","then","catch","getParent","parentNode","handleKeydown","preventDefault","showSelectMenu","includes","checkIsValid","hasCorrespondingOption","enter","prev","next","handleMenuKeydown","handleClear","stopPropagation","handleTriggerFocus","relatedTarget","handleTriggerBlur","handleMenuFocus","handleMenuBlur","handleMenuMousedown","handleMenuTabout","handleTriggerClick","handlePatternInput","target","handleDeleteOption","mergedValue","syncSelectMenuPosition","syncPosition","syncCascaderMenuPosition","handleTriggerResize","mergedThemeRef","cascadeRef","multipleRef","remoteRef","expandTriggerRef","isMountedRef","onLoadRef","virtualScrollRef","labelFieldRef","renderLabelRef","exposedMethods","blur","cssVarsRef","optionArrowColor","optionTextColor","optionTextColorActive","optionTextColorDisabled","optionCheckMarkColor","menuColor","menuBoxShadow","menuDividerColor","menuBorderRadius","menuHeight","optionColorHover","optionFontSize","loadingColor","columnWidth","common","cubicBezierEaseInOut","alpha","themeClassHandle","mergedStatus","mergedBordered","mergedClsPrefix","namespace","mergedShow","pattern","mergedSize","mergedDisabled","localizedPlaceholder","selectedOption","selectedOptions","adjustedTo","menuModel","focused","mergedTheme","cssVars","themeClass","onRender","render","class","onResize","clsPrefix","theme","peers","InternalSelection","themeOverrides","peerOverrides","active","onClick","onClear","onDeleteOption","onPatternInput","onKeydown","arrow","$slots","containerClass","width","length","teleportDisabled","tdkey","onMousedown","onTabout","action","empty","tmNodes"],"sources":["E:/VCode/SHC社区管理系统/shc_community_manager_system/node_modules/naive-ui/es/cascader/src/Cascader.js"],"sourcesContent":["import { h, defineComponent, computed, provide, ref, watch, toRef, isReactive, watchEffect, nextTick } from 'vue';\nimport { createTreeMate, SubtreeNotLoadedError } from 'treemate';\nimport { VBinder, VTarget, VFollower } from 'vueuc';\nimport { depx, changeColor, happensIn, getPreciseEventTarget } from 'seemly';\nimport { useIsMounted, useMergedState } from 'vooks';\nimport { NInternalSelection } from '../../_internal';\nimport { useLocale, useTheme, useConfig, useFormItem, useThemeClass } from '../../_mixins';\nimport { call, markEventEffectPerformed, useAdjustedTo, warnOnce } from '../../_utils';\nimport { cascaderLight } from '../styles';\nimport { getPathLabel, getRawNodePath } from './utils';\nimport CascaderMenu from './CascaderMenu';\nimport CascaderSelectMenu from './CascaderSelectMenu';\nimport { cascaderInjectionKey } from './interface';\nimport style from './styles/index.cssr';\nexport const cascaderProps = Object.assign(Object.assign({}, useTheme.props), { allowCheckingNotLoaded: Boolean, to: useAdjustedTo.propTo, bordered: {\n        type: Boolean,\n        default: undefined\n    }, options: {\n        type: Array,\n        default: () => []\n    }, value: [String, Number, Array], defaultValue: {\n        type: [String, Number, Array],\n        default: null\n    }, placeholder: String, multiple: Boolean, size: String, filterable: Boolean, disabled: {\n        type: Boolean,\n        default: undefined\n    }, disabledField: {\n        type: String,\n        default: 'disabled'\n    }, expandTrigger: {\n        type: String,\n        default: 'click'\n    }, clearable: Boolean, clearFilterAfterSelect: {\n        type: Boolean,\n        default: true\n    }, remote: Boolean, onLoad: Function, separator: {\n        type: String,\n        default: ' / '\n    }, filter: Function, placement: {\n        type: String,\n        default: 'bottom-start'\n    }, cascade: {\n        type: Boolean,\n        default: true\n    }, leafOnly: Boolean, showPath: {\n        type: Boolean,\n        default: true\n    }, show: {\n        type: Boolean,\n        default: undefined\n    }, maxTagCount: [String, Number], menuProps: Object, filterMenuProps: Object, virtualScroll: {\n        type: Boolean,\n        default: true\n    }, checkStrategy: {\n        type: String,\n        default: 'all'\n    }, valueField: {\n        type: String,\n        default: 'value'\n    }, labelField: {\n        type: String,\n        default: 'label'\n    }, childrenField: {\n        type: String,\n        default: 'children'\n    }, renderLabel: Function, status: String, 'onUpdate:value': [Function, Array], onUpdateValue: [Function, Array], 'onUpdate:show': [Function, Array], onUpdateShow: [Function, Array], onBlur: Function, onFocus: Function, \n    // deprecated\n    onChange: [Function, Array] });\nexport default defineComponent({\n    name: 'Cascader',\n    props: cascaderProps,\n    setup(props) {\n        if (process.env.NODE_ENV !== 'production') {\n            watchEffect(() => {\n                if (props.leafOnly) {\n                    warnOnce('cascader', '`leaf-only` is deprecated, please use `check-strategy=\"child\"` instead');\n                }\n                if (props.onChange !== undefined) {\n                    warnOnce('cascader', '`on-change` is deprecated, please use `on-update:value` instead.');\n                }\n            });\n        }\n        const { mergedBorderedRef, mergedClsPrefixRef, namespaceRef, inlineThemeDisabled } = useConfig(props);\n        const themeRef = useTheme('Cascader', '-cascader', style, cascaderLight, props, mergedClsPrefixRef);\n        const { localeRef } = useLocale('Cascader');\n        const uncontrolledValueRef = ref(props.defaultValue);\n        const controlledValueRef = computed(() => props.value);\n        const mergedValueRef = useMergedState(controlledValueRef, uncontrolledValueRef);\n        const mergedCheckStrategyRef = computed(() => {\n            return props.leafOnly ? 'child' : props.checkStrategy;\n        });\n        const patternRef = ref('');\n        const formItem = useFormItem(props);\n        const { mergedSizeRef, mergedDisabledRef, mergedStatusRef } = formItem;\n        const cascaderMenuInstRef = ref(null);\n        const selectMenuInstRef = ref(null);\n        const triggerInstRef = ref(null);\n        const keyboardKeyRef = ref(null);\n        const hoverKeyRef = ref(null);\n        const loadingKeySetRef = ref(new Set());\n        const selectMenuFollowerRef = ref(null);\n        const cascaderMenuFollowerRef = ref(null);\n        const adjustedToRef = useAdjustedTo(props);\n        const focusedRef = ref(false);\n        const addLoadingKey = (key) => {\n            loadingKeySetRef.value.add(key);\n        };\n        const deleteLoadingKey = (key) => {\n            loadingKeySetRef.value.delete(key);\n        };\n        const treeMateRef = computed(() => {\n            const { valueField, childrenField, disabledField } = props;\n            return createTreeMate(props.options, {\n                getDisabled(node) {\n                    return node[disabledField];\n                },\n                getKey(node) {\n                    return node[valueField];\n                },\n                getChildren(node) {\n                    return node[childrenField];\n                }\n            });\n        });\n        const mergedKeysRef = computed(() => {\n            const { cascade, multiple } = props;\n            if (multiple && Array.isArray(mergedValueRef.value)) {\n                return treeMateRef.value.getCheckedKeys(mergedValueRef.value, {\n                    cascade,\n                    allowNotLoaded: props.allowCheckingNotLoaded\n                });\n            }\n            else {\n                return {\n                    checkedKeys: [],\n                    indeterminateKeys: []\n                };\n            }\n        });\n        const checkedKeysRef = computed(() => mergedKeysRef.value.checkedKeys);\n        const indeterminateKeysRef = computed(() => mergedKeysRef.value.indeterminateKeys);\n        const menuModelRef = computed(() => {\n            const { treeNodePath, treeNode } = treeMateRef.value.getPath(hoverKeyRef.value);\n            let ret;\n            if (treeNode === null) {\n                ret = [treeMateRef.value.treeNodes];\n            }\n            else {\n                ret = treeNodePath.map((treeNode) => treeNode.siblings);\n                if (!treeNode.isLeaf &&\n                    !loadingKeySetRef.value.has(treeNode.key) &&\n                    treeNode.children) {\n                    ret.push(treeNode.children);\n                }\n            }\n            return ret;\n        });\n        const hoverKeyPathRef = computed(() => {\n            const { keyPath } = treeMateRef.value.getPath(hoverKeyRef.value);\n            return keyPath;\n        });\n        const optionHeightRef = computed(() => {\n            return themeRef.value.self.optionHeight;\n        });\n        if (isReactive(props.options)) {\n            watch(props.options, (value, oldValue) => {\n                if (!(value === oldValue)) {\n                    hoverKeyRef.value = null;\n                    keyboardKeyRef.value = null;\n                }\n            });\n        }\n        function doUpdateShow(value) {\n            const { onUpdateShow, 'onUpdate:show': _onUpdateShow } = props;\n            if (onUpdateShow) {\n                call(onUpdateShow, value);\n            }\n            if (_onUpdateShow) {\n                call(_onUpdateShow, value);\n            }\n            uncontrolledShowRef.value = value;\n        }\n        function doUpdateValue(value, option, optionPath) {\n            const { onUpdateValue, 'onUpdate:value': _onUpdateValue, onChange } = props;\n            const { nTriggerFormInput, nTriggerFormChange } = formItem;\n            if (onUpdateValue) {\n                call(onUpdateValue, value, option, optionPath);\n            }\n            if (_onUpdateValue) {\n                call(_onUpdateValue, value, option, optionPath);\n            }\n            if (onChange) {\n                call(onChange, value, option, optionPath);\n            }\n            uncontrolledValueRef.value = value;\n            nTriggerFormInput();\n            nTriggerFormChange();\n        }\n        function updateKeyboardKey(key) {\n            keyboardKeyRef.value = key;\n        }\n        function updateHoverKey(key) {\n            hoverKeyRef.value = key;\n        }\n        function doCheck(key) {\n            var _a;\n            const { cascade, multiple, filterable } = props;\n            const { value: { check, getNode, getPath } } = treeMateRef;\n            if (multiple) {\n                try {\n                    const { checkedKeys } = check(key, mergedKeysRef.value.checkedKeys, {\n                        cascade,\n                        checkStrategy: mergedCheckStrategyRef.value,\n                        allowNotLoaded: props.allowCheckingNotLoaded\n                    });\n                    doUpdateValue(checkedKeys, checkedKeys.map((checkedKey) => { var _a; return ((_a = getNode(checkedKey)) === null || _a === void 0 ? void 0 : _a.rawNode) || null; }), checkedKeys.map((checkedKey) => { var _a; return getRawNodePath((_a = getPath(checkedKey)) === null || _a === void 0 ? void 0 : _a.treeNodePath); }));\n                    if (filterable)\n                        focusSelectionInput();\n                    keyboardKeyRef.value = key;\n                    hoverKeyRef.value = key;\n                }\n                catch (err) {\n                    if (err instanceof SubtreeNotLoadedError) {\n                        if (cascaderMenuInstRef.value) {\n                            const tmNode = getNode(key);\n                            if (tmNode !== null) {\n                                cascaderMenuInstRef.value.showErrorMessage(tmNode.rawNode[props.labelField]);\n                            }\n                        }\n                    }\n                    else {\n                        throw err;\n                    }\n                }\n            }\n            else {\n                if (mergedCheckStrategyRef.value === 'child') {\n                    const tmNode = getNode(key);\n                    if (tmNode === null || tmNode === void 0 ? void 0 : tmNode.isLeaf) {\n                        doUpdateValue(key, tmNode.rawNode, getRawNodePath(getPath(key).treeNodePath));\n                    }\n                    else {\n                        return false;\n                    }\n                }\n                else {\n                    const tmNode = getNode(key);\n                    doUpdateValue(key, (tmNode === null || tmNode === void 0 ? void 0 : tmNode.rawNode) || null, getRawNodePath((_a = getPath(key)) === null || _a === void 0 ? void 0 : _a.treeNodePath));\n                }\n            }\n            return true;\n        }\n        function doUncheck(key) {\n            const { cascade, multiple } = props;\n            if (multiple) {\n                const { value: { uncheck, getNode, getPath } } = treeMateRef;\n                const { checkedKeys } = uncheck(key, mergedKeysRef.value.checkedKeys, {\n                    cascade,\n                    checkStrategy: mergedCheckStrategyRef.value,\n                    allowNotLoaded: props.allowCheckingNotLoaded\n                });\n                doUpdateValue(checkedKeys, checkedKeys.map((checkedKey) => { var _a; return ((_a = getNode(checkedKey)) === null || _a === void 0 ? void 0 : _a.rawNode) || null; }), checkedKeys.map((checkedKey) => { var _a; return getRawNodePath((_a = getPath(checkedKey)) === null || _a === void 0 ? void 0 : _a.treeNodePath); }));\n                keyboardKeyRef.value = key;\n                hoverKeyRef.value = key;\n            }\n        }\n        const selectedOptionsRef = computed(() => {\n            if (props.multiple) {\n                const { showPath, separator, labelField, cascade } = props;\n                const { getCheckedKeys, getNode } = treeMateRef.value;\n                const value = getCheckedKeys(checkedKeysRef.value, {\n                    cascade,\n                    checkStrategy: mergedCheckStrategyRef.value,\n                    allowNotLoaded: props.allowCheckingNotLoaded\n                }).checkedKeys;\n                return value.map((key) => {\n                    const node = getNode(key);\n                    if (node === null) {\n                        return {\n                            label: String(key),\n                            value: key\n                        };\n                    }\n                    else {\n                        return {\n                            label: showPath\n                                ? getPathLabel(node, separator, labelField)\n                                : node.rawNode[labelField],\n                            value: node.key\n                        };\n                    }\n                });\n            }\n            else\n                return [];\n        });\n        const selectedOptionRef = computed(() => {\n            const { multiple, showPath, separator, labelField } = props;\n            const { value } = mergedValueRef;\n            if (!multiple && !Array.isArray(value)) {\n                const { getNode } = treeMateRef.value;\n                if (value === null) {\n                    return null;\n                }\n                const node = getNode(value);\n                if (node === null) {\n                    return {\n                        label: String(value),\n                        value\n                    };\n                }\n                else {\n                    return {\n                        label: showPath\n                            ? getPathLabel(node, separator, labelField)\n                            : node.rawNode[labelField],\n                        value: node.key\n                    };\n                }\n            }\n            else\n                return null;\n        });\n        const uncontrolledShowRef = ref(false);\n        const controlledShowRef = toRef(props, 'show');\n        const mergedShowRef = useMergedState(controlledShowRef, uncontrolledShowRef);\n        const localizedPlaceholderRef = computed(() => {\n            const { placeholder } = props;\n            if (placeholder !== undefined)\n                return placeholder;\n            return localeRef.value.placeholder;\n        });\n        // select option related\n        const showSelectMenuRef = computed(() => {\n            return !!(props.filterable && patternRef.value);\n        });\n        // init hover key\n        watch(mergedShowRef, (show) => {\n            if (!show)\n                return;\n            if (props.multiple)\n                return;\n            const { value } = mergedValueRef;\n            if (!Array.isArray(value) && value !== null) {\n                keyboardKeyRef.value = value;\n                hoverKeyRef.value = value;\n                void nextTick(() => {\n                    var _a;\n                    if (!mergedShowRef.value)\n                        return;\n                    const { value: hoverKey } = hoverKeyRef;\n                    if (mergedValueRef.value !== null) {\n                        const node = treeMateRef.value.getNode(hoverKey);\n                        if (node) {\n                            (_a = cascaderMenuInstRef.value) === null || _a === void 0 ? void 0 : _a.scroll(node.level, node.index, depx(optionHeightRef.value));\n                        }\n                    }\n                });\n            }\n            else {\n                keyboardKeyRef.value = null;\n                hoverKeyRef.value = null;\n            }\n        }, {\n            immediate: true\n        });\n        // --- methods\n        function doBlur(e) {\n            const { onBlur } = props;\n            const { nTriggerFormBlur } = formItem;\n            if (onBlur)\n                call(onBlur, e);\n            nTriggerFormBlur();\n        }\n        function doFocus(e) {\n            const { onFocus } = props;\n            const { nTriggerFormFocus } = formItem;\n            if (onFocus)\n                call(onFocus, e);\n            nTriggerFormFocus();\n        }\n        function focusSelectionInput() {\n            var _a;\n            (_a = triggerInstRef.value) === null || _a === void 0 ? void 0 : _a.focusInput();\n        }\n        function focusSelection() {\n            var _a;\n            (_a = triggerInstRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n        }\n        function openMenu() {\n            if (!mergedDisabledRef.value) {\n                patternRef.value = '';\n                doUpdateShow(true);\n                if (props.filterable) {\n                    focusSelectionInput();\n                }\n            }\n        }\n        function closeMenu(returnFocus = false) {\n            if (returnFocus) {\n                focusSelection();\n            }\n            doUpdateShow(false);\n            patternRef.value = '';\n        }\n        function handleCascaderMenuClickOutside(e) {\n            var _a;\n            if (showSelectMenuRef.value)\n                return;\n            if (mergedShowRef.value) {\n                if (!((_a = triggerInstRef.value) === null || _a === void 0 ? void 0 : _a.$el.contains(getPreciseEventTarget(e)))) {\n                    closeMenu();\n                }\n            }\n        }\n        function handleSelectMenuClickOutside(e) {\n            if (!showSelectMenuRef.value)\n                return;\n            handleCascaderMenuClickOutside(e);\n        }\n        function clearPattern() {\n            if (props.clearFilterAfterSelect)\n                patternRef.value = '';\n        }\n        // --- keyboard\n        function move(direction) {\n            var _a, _b, _c;\n            const { value: keyboardKey } = keyboardKeyRef;\n            const { value: treeMate } = treeMateRef;\n            switch (direction) {\n                case 'prev':\n                    if (keyboardKey !== null) {\n                        const node = treeMate.getPrev(keyboardKey, { loop: true });\n                        if (node !== null) {\n                            updateKeyboardKey(node.key);\n                            (_a = cascaderMenuInstRef.value) === null || _a === void 0 ? void 0 : _a.scroll(node.level, node.index, depx(optionHeightRef.value));\n                        }\n                    }\n                    break;\n                case 'next':\n                    if (keyboardKey === null) {\n                        const node = treeMate.getFirstAvailableNode();\n                        if (node !== null) {\n                            updateKeyboardKey(node.key);\n                            (_b = cascaderMenuInstRef.value) === null || _b === void 0 ? void 0 : _b.scroll(node.level, node.index, depx(optionHeightRef.value));\n                        }\n                    }\n                    else {\n                        const node = treeMate.getNext(keyboardKey, { loop: true });\n                        if (node !== null) {\n                            updateKeyboardKey(node.key);\n                            (_c = cascaderMenuInstRef.value) === null || _c === void 0 ? void 0 : _c.scroll(node.level, node.index, depx(optionHeightRef.value));\n                        }\n                    }\n                    break;\n                case 'child':\n                    if (keyboardKey !== null) {\n                        const currentNode = treeMate.getNode(keyboardKey);\n                        if (currentNode !== null) {\n                            if (currentNode.shallowLoaded) {\n                                const node = treeMate.getChild(keyboardKey);\n                                if (node !== null) {\n                                    updateHoverKey(keyboardKey);\n                                    updateKeyboardKey(node.key);\n                                }\n                            }\n                            else {\n                                const { value: loadingKeySet } = loadingKeySetRef;\n                                if (!loadingKeySet.has(keyboardKey)) {\n                                    addLoadingKey(keyboardKey);\n                                    updateHoverKey(keyboardKey);\n                                    const { onLoad } = props;\n                                    if (onLoad) {\n                                        onLoad(currentNode.rawNode)\n                                            .then(() => {\n                                            deleteLoadingKey(keyboardKey);\n                                        })\n                                            .catch(() => {\n                                            deleteLoadingKey(keyboardKey);\n                                        });\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    break;\n                case 'parent':\n                    if (keyboardKey !== null) {\n                        const node = treeMate.getParent(keyboardKey);\n                        if (node !== null) {\n                            updateKeyboardKey(node.key);\n                            const parentNode = node.getParent();\n                            if (parentNode === null) {\n                                updateHoverKey(null);\n                            }\n                            else {\n                                updateHoverKey(parentNode.key);\n                            }\n                        }\n                    }\n                    break;\n            }\n        }\n        function handleKeydown(e) {\n            var _a, _b;\n            switch (e.key) {\n                case ' ':\n                case 'ArrowDown':\n                case 'ArrowUp':\n                    if (props.filterable && mergedShowRef.value) {\n                        break;\n                    }\n                    e.preventDefault();\n                    break;\n            }\n            if (happensIn(e, 'action'))\n                return;\n            switch (e.key) {\n                case ' ':\n                    if (props.filterable)\n                        return;\n                // eslint-disable-next-line no-fallthrough\n                case 'Enter':\n                    if (!mergedShowRef.value) {\n                        openMenu();\n                    }\n                    else {\n                        const { value: showSelectMenu } = showSelectMenuRef;\n                        const { value: keyboardKey } = keyboardKeyRef;\n                        if (!showSelectMenu) {\n                            if (keyboardKey !== null) {\n                                if (checkedKeysRef.value.includes(keyboardKey) ||\n                                    indeterminateKeysRef.value.includes(keyboardKey)) {\n                                    doUncheck(keyboardKey);\n                                }\n                                else {\n                                    const checkIsValid = doCheck(keyboardKey);\n                                    if (!props.multiple && checkIsValid) {\n                                        closeMenu(true);\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (selectMenuInstRef.value) {\n                                const hasCorrespondingOption = selectMenuInstRef.value.enter();\n                                if (hasCorrespondingOption)\n                                    clearPattern();\n                            }\n                        }\n                    }\n                    break;\n                case 'ArrowUp':\n                    e.preventDefault();\n                    if (mergedShowRef.value) {\n                        if (showSelectMenuRef.value) {\n                            (_a = selectMenuInstRef.value) === null || _a === void 0 ? void 0 : _a.prev();\n                        }\n                        else {\n                            move('prev');\n                        }\n                    }\n                    break;\n                case 'ArrowDown':\n                    e.preventDefault();\n                    if (mergedShowRef.value) {\n                        if (showSelectMenuRef.value) {\n                            (_b = selectMenuInstRef.value) === null || _b === void 0 ? void 0 : _b.next();\n                        }\n                        else {\n                            move('next');\n                        }\n                    }\n                    else {\n                        openMenu();\n                    }\n                    break;\n                case 'ArrowLeft':\n                    e.preventDefault();\n                    if (mergedShowRef.value && !showSelectMenuRef.value) {\n                        move('parent');\n                    }\n                    break;\n                case 'ArrowRight':\n                    e.preventDefault();\n                    if (mergedShowRef.value && !showSelectMenuRef.value) {\n                        move('child');\n                    }\n                    break;\n                case 'Escape':\n                    if (mergedShowRef.value) {\n                        markEventEffectPerformed(e);\n                        closeMenu(true);\n                    }\n            }\n        }\n        function handleMenuKeydown(e) {\n            handleKeydown(e);\n        }\n        // --- search\n        function handleClear(e) {\n            e.stopPropagation();\n            if (props.multiple) {\n                doUpdateValue([], [], []);\n            }\n            else {\n                doUpdateValue(null, null, null);\n            }\n        }\n        function handleTriggerFocus(e) {\n            var _a;\n            if (!((_a = cascaderMenuInstRef.value) === null || _a === void 0 ? void 0 : _a.$el.contains(e.relatedTarget))) {\n                focusedRef.value = true;\n                doFocus(e);\n            }\n        }\n        function handleTriggerBlur(e) {\n            var _a;\n            if (!((_a = cascaderMenuInstRef.value) === null || _a === void 0 ? void 0 : _a.$el.contains(e.relatedTarget))) {\n                focusedRef.value = false;\n                doBlur(e);\n                closeMenu();\n            }\n        }\n        function handleMenuFocus(e) {\n            var _a;\n            if (!((_a = triggerInstRef.value) === null || _a === void 0 ? void 0 : _a.$el.contains(e.relatedTarget))) {\n                focusedRef.value = true;\n                doFocus(e);\n            }\n        }\n        function handleMenuBlur(e) {\n            var _a;\n            if (!((_a = triggerInstRef.value) === null || _a === void 0 ? void 0 : _a.$el.contains(e.relatedTarget))) {\n                focusedRef.value = false;\n                doBlur(e);\n            }\n        }\n        function handleMenuMousedown(e) {\n            if (!happensIn(e, 'action')) {\n                if (props.multiple && props.filter) {\n                    e.preventDefault();\n                    focusSelectionInput();\n                }\n            }\n        }\n        function handleMenuTabout() {\n            closeMenu(true);\n        }\n        function handleTriggerClick() {\n            if (props.filterable) {\n                openMenu();\n            }\n            else {\n                if (mergedShowRef.value) {\n                    closeMenu(true);\n                }\n                else {\n                    openMenu();\n                }\n            }\n        }\n        function handlePatternInput(e) {\n            patternRef.value = e.target.value;\n        }\n        function handleDeleteOption(option) {\n            const { multiple } = props;\n            const { value: mergedValue } = mergedValueRef;\n            if (multiple &&\n                Array.isArray(mergedValue) &&\n                option.value !== undefined) {\n                doUncheck(option.value);\n            }\n            else {\n                doUpdateValue(null, null, null);\n            }\n        }\n        // sync position\n        function syncSelectMenuPosition() {\n            var _a;\n            (_a = selectMenuFollowerRef.value) === null || _a === void 0 ? void 0 : _a.syncPosition();\n        }\n        function syncCascaderMenuPosition() {\n            var _a;\n            (_a = cascaderMenuFollowerRef.value) === null || _a === void 0 ? void 0 : _a.syncPosition();\n        }\n        function handleTriggerResize() {\n            if (mergedShowRef.value) {\n                if (showSelectMenuRef.value) {\n                    syncSelectMenuPosition();\n                }\n                else {\n                    syncCascaderMenuPosition();\n                }\n            }\n        }\n        provide(cascaderInjectionKey, {\n            mergedClsPrefixRef,\n            mergedThemeRef: themeRef,\n            mergedValueRef,\n            checkedKeysRef,\n            indeterminateKeysRef,\n            hoverKeyPathRef,\n            mergedCheckStrategyRef,\n            cascadeRef: toRef(props, 'cascade'),\n            multipleRef: toRef(props, 'multiple'),\n            keyboardKeyRef,\n            hoverKeyRef,\n            remoteRef: toRef(props, 'remote'),\n            loadingKeySetRef,\n            expandTriggerRef: toRef(props, 'expandTrigger'),\n            isMountedRef: useIsMounted(),\n            onLoadRef: toRef(props, 'onLoad'),\n            virtualScrollRef: toRef(props, 'virtualScroll'),\n            optionHeightRef,\n            localeRef,\n            labelFieldRef: toRef(props, 'labelField'),\n            renderLabelRef: toRef(props, 'renderLabel'),\n            syncCascaderMenuPosition,\n            syncSelectMenuPosition,\n            updateKeyboardKey,\n            updateHoverKey,\n            addLoadingKey,\n            deleteLoadingKey,\n            doCheck,\n            doUncheck,\n            closeMenu,\n            handleSelectMenuClickOutside,\n            handleCascaderMenuClickOutside,\n            clearPattern\n        });\n        const exposedMethods = {\n            focus: () => {\n                var _a;\n                (_a = triggerInstRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n            },\n            blur: () => {\n                var _a;\n                (_a = triggerInstRef.value) === null || _a === void 0 ? void 0 : _a.blur();\n            }\n        };\n        const cssVarsRef = computed(() => {\n            const { self: { optionArrowColor, optionTextColor, optionTextColorActive, optionTextColorDisabled, optionCheckMarkColor, menuColor, menuBoxShadow, menuDividerColor, menuBorderRadius, menuHeight, optionColorHover, optionHeight, optionFontSize, loadingColor, columnWidth }, common: { cubicBezierEaseInOut } } = themeRef.value;\n            return {\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-menu-border-radius': menuBorderRadius,\n                '--n-menu-box-shadow': menuBoxShadow,\n                '--n-menu-height': menuHeight,\n                '--n-column-width': columnWidth,\n                '--n-menu-color': menuColor,\n                '--n-menu-divider-color': menuDividerColor,\n                '--n-option-height': optionHeight,\n                '--n-option-font-size': optionFontSize,\n                '--n-option-text-color': optionTextColor,\n                '--n-option-text-color-disabled': optionTextColorDisabled,\n                '--n-option-text-color-active': optionTextColorActive,\n                '--n-option-color-hover': optionColorHover,\n                '--n-option-check-mark-color': optionCheckMarkColor,\n                '--n-option-arrow-color': optionArrowColor,\n                '--n-menu-mask-color': changeColor(menuColor, { alpha: 0.75 }),\n                '--n-loading-color': loadingColor\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('cascader', undefined, cssVarsRef, props)\n            : undefined;\n        return Object.assign(Object.assign({}, exposedMethods), { handleTriggerResize, mergedStatus: mergedStatusRef, selectMenuFollowerRef,\n            cascaderMenuFollowerRef,\n            triggerInstRef,\n            selectMenuInstRef,\n            cascaderMenuInstRef, mergedBordered: mergedBorderedRef, mergedClsPrefix: mergedClsPrefixRef, namespace: namespaceRef, mergedValue: mergedValueRef, mergedShow: mergedShowRef, showSelectMenu: showSelectMenuRef, pattern: patternRef, treeMate: treeMateRef, mergedSize: mergedSizeRef, mergedDisabled: mergedDisabledRef, localizedPlaceholder: localizedPlaceholderRef, selectedOption: selectedOptionRef, selectedOptions: selectedOptionsRef, adjustedTo: adjustedToRef, menuModel: menuModelRef, handleMenuTabout,\n            handleMenuFocus,\n            handleMenuBlur,\n            handleMenuKeydown,\n            handleMenuMousedown,\n            handleTriggerFocus,\n            handleTriggerBlur,\n            handleTriggerClick,\n            handleClear,\n            handleDeleteOption,\n            handlePatternInput,\n            handleKeydown, focused: focusedRef, optionHeight: optionHeightRef, mergedTheme: themeRef, cssVars: inlineThemeDisabled ? undefined : cssVarsRef, themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass, onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender });\n    },\n    render() {\n        const { mergedClsPrefix } = this;\n        return (h(\"div\", { class: `${mergedClsPrefix}-cascader` },\n            h(VBinder, null, {\n                default: () => [\n                    h(VTarget, null, {\n                        default: () => (h(NInternalSelection, { onResize: this.handleTriggerResize, ref: \"triggerInstRef\", status: this.mergedStatus, clsPrefix: mergedClsPrefix, maxTagCount: this.maxTagCount, bordered: this.mergedBordered, size: this.mergedSize, theme: this.mergedTheme.peers.InternalSelection, themeOverrides: this.mergedTheme.peerOverrides.InternalSelection, active: this.mergedShow, pattern: this.pattern, placeholder: this.localizedPlaceholder, selectedOption: this.selectedOption, selectedOptions: this.selectedOptions, multiple: this.multiple, filterable: this.filterable, clearable: this.clearable, disabled: this.mergedDisabled, focused: this.focused, onFocus: this.handleTriggerFocus, onBlur: this.handleTriggerBlur, onClick: this.handleTriggerClick, onClear: this.handleClear, onDeleteOption: this.handleDeleteOption, onPatternInput: this.handlePatternInput, onKeydown: this.handleKeydown }, {\n                            arrow: () => { var _a, _b; return (_b = (_a = this.$slots).arrow) === null || _b === void 0 ? void 0 : _b.call(_a); }\n                        }))\n                    }),\n                    h(VFollower, { key: \"cascaderMenu\", ref: \"cascaderMenuFollowerRef\", show: this.mergedShow && !this.showSelectMenu, containerClass: this.namespace, placement: this.placement, width: !this.options.length ? 'target' : undefined, teleportDisabled: this.adjustedTo === useAdjustedTo.tdkey, to: this.adjustedTo }, {\n                        default: () => {\n                            var _a;\n                            (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n                            const { menuProps } = this;\n                            return (h(CascaderMenu, Object.assign({}, menuProps, { ref: \"cascaderMenuInstRef\", class: [this.themeClass, menuProps === null || menuProps === void 0 ? void 0 : menuProps.class], value: this.mergedValue, show: this.mergedShow && !this.showSelectMenu, menuModel: this.menuModel, style: [\n                                    this.cssVars,\n                                    menuProps === null || menuProps === void 0 ? void 0 : menuProps.style\n                                ], onFocus: this.handleMenuFocus, onBlur: this.handleMenuBlur, onKeydown: this.handleMenuKeydown, onMousedown: this.handleMenuMousedown, onTabout: this.handleMenuTabout }), {\n                                action: () => { var _a, _b; return (_b = (_a = this.$slots).action) === null || _b === void 0 ? void 0 : _b.call(_a); },\n                                empty: () => { var _a, _b; return (_b = (_a = this.$slots).empty) === null || _b === void 0 ? void 0 : _b.call(_a); }\n                            }));\n                        }\n                    }),\n                    h(VFollower, { key: \"selectMenu\", ref: \"selectMenuFollowerRef\", show: this.mergedShow && this.showSelectMenu, containerClass: this.namespace, width: \"target\", placement: this.placement, to: this.adjustedTo, teleportDisabled: this.adjustedTo === useAdjustedTo.tdkey }, {\n                        default: () => {\n                            var _a;\n                            (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n                            const { filterMenuProps } = this;\n                            return (h(CascaderSelectMenu, Object.assign({}, filterMenuProps, { ref: \"selectMenuInstRef\", class: [this.themeClass, filterMenuProps === null || filterMenuProps === void 0 ? void 0 : filterMenuProps.class], value: this.mergedValue, show: this.mergedShow && this.showSelectMenu, pattern: this.pattern, multiple: this.multiple, tmNodes: this.treeMate.treeNodes, filter: this.filter, labelField: this.labelField, separator: this.separator, style: [\n                                    this.cssVars,\n                                    filterMenuProps === null || filterMenuProps === void 0 ? void 0 : filterMenuProps.style\n                                ] })));\n                        }\n                    })\n                ]\n            })));\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}