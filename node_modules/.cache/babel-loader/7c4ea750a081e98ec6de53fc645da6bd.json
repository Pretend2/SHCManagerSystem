{"ast":null,"code":"import { h, inject, defineComponent, Transition } from 'vue';\nimport { useMemo } from 'vooks';\nimport { render, mergeEventHandlers } from '../../../_utils';\nimport { CheckmarkIcon } from '../../icons';\nimport { NBaseIcon } from '../../icon';\nimport { internalSelectionMenuInjectionKey } from './interface';\n\nfunction renderCheckMark(show, clsPrefix) {\n  return h(Transition, {\n    name: \"fade-in-scale-up-transition\"\n  }, {\n    default: () => show ? h(NBaseIcon, {\n      clsPrefix: clsPrefix,\n      class: `${clsPrefix}-base-select-option__check`\n    }, {\n      default: () => h(CheckmarkIcon)\n    }) : null\n  });\n}\n\nexport default defineComponent({\n  name: 'NBaseSelectOption',\n  props: {\n    clsPrefix: {\n      type: String,\n      required: true\n    },\n    tmNode: {\n      type: Object,\n      required: true\n    }\n  },\n\n  setup(props) {\n    const {\n      valueRef,\n      pendingTmNodeRef,\n      multipleRef,\n      valueSetRef,\n      renderLabelRef,\n      renderOptionRef,\n      labelFieldRef,\n      valueFieldRef,\n      showCheckmarkRef,\n      nodePropsRef,\n      handleOptionClick,\n      handleOptionMouseEnter // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    } = inject(internalSelectionMenuInjectionKey);\n    const isPendingRef = useMemo(() => {\n      const {\n        value: pendingTmNode\n      } = pendingTmNodeRef;\n      if (!pendingTmNode) return false;\n      return props.tmNode.key === pendingTmNode.key;\n    });\n\n    function handleClick(e) {\n      const {\n        tmNode\n      } = props;\n      if (tmNode.disabled) return;\n      handleOptionClick(e, tmNode);\n    }\n\n    function handleMouseEnter(e) {\n      const {\n        tmNode\n      } = props;\n      if (tmNode.disabled) return;\n      handleOptionMouseEnter(e, tmNode);\n    }\n\n    function handleMouseMove(e) {\n      const {\n        tmNode\n      } = props;\n      const {\n        value: isPending\n      } = isPendingRef;\n      if (tmNode.disabled || isPending) return;\n      handleOptionMouseEnter(e, tmNode);\n    }\n\n    return {\n      multiple: multipleRef,\n      isGrouped: useMemo(() => {\n        const {\n          tmNode\n        } = props;\n        const {\n          parent\n        } = tmNode;\n        return parent && parent.rawNode.type === 'group';\n      }),\n      showCheckmark: showCheckmarkRef,\n      nodeProps: nodePropsRef,\n      isPending: isPendingRef,\n      isSelected: useMemo(() => {\n        const {\n          value\n        } = valueRef;\n        const {\n          value: multiple\n        } = multipleRef;\n        if (value === null) return false;\n        const optionValue = props.tmNode.rawNode[valueFieldRef.value];\n\n        if (multiple) {\n          const {\n            value: valueSet\n          } = valueSetRef;\n          return valueSet.has(optionValue);\n        } else {\n          return value === optionValue;\n        }\n      }),\n      labelField: labelFieldRef,\n      renderLabel: renderLabelRef,\n      renderOption: renderOptionRef,\n      handleMouseMove,\n      handleMouseEnter,\n      handleClick\n    };\n  },\n\n  render() {\n    const {\n      clsPrefix,\n      tmNode: {\n        rawNode\n      },\n      isSelected,\n      isPending,\n      isGrouped,\n      showCheckmark,\n      nodeProps,\n      renderOption,\n      renderLabel,\n      handleClick,\n      handleMouseEnter,\n      handleMouseMove\n    } = this;\n    const checkmark = renderCheckMark(isSelected, clsPrefix);\n    const children = renderLabel ? [renderLabel(rawNode, isSelected), showCheckmark && checkmark] : [render(rawNode[this.labelField], rawNode, isSelected), showCheckmark && checkmark];\n    const attrs = nodeProps === null || nodeProps === void 0 ? void 0 : nodeProps(rawNode);\n    const node = h(\"div\", Object.assign({}, attrs, {\n      class: [`${clsPrefix}-base-select-option`, rawNode.class, attrs === null || attrs === void 0 ? void 0 : attrs.class, {\n        [`${clsPrefix}-base-select-option--disabled`]: rawNode.disabled,\n        [`${clsPrefix}-base-select-option--selected`]: isSelected,\n        [`${clsPrefix}-base-select-option--grouped`]: isGrouped,\n        [`${clsPrefix}-base-select-option--pending`]: isPending,\n        [`${clsPrefix}-base-select-option--show-checkmark`]: showCheckmark\n      }],\n      style: [(attrs === null || attrs === void 0 ? void 0 : attrs.style) || '', rawNode.style || ''],\n      onClick: mergeEventHandlers([handleClick, attrs === null || attrs === void 0 ? void 0 : attrs.onClick]),\n      onMouseenter: mergeEventHandlers([handleMouseEnter, attrs === null || attrs === void 0 ? void 0 : attrs.onMouseenter]),\n      onMousemove: mergeEventHandlers([handleMouseMove, attrs === null || attrs === void 0 ? void 0 : attrs.onMousemove])\n    }), h(\"div\", {\n      class: `${clsPrefix}-base-select-option__content`\n    }, children));\n    return rawNode.render ? rawNode.render({\n      node,\n      option: rawNode,\n      selected: isSelected\n    }) : renderOption ? renderOption({\n      node,\n      option: rawNode,\n      selected: isSelected\n    }) : node;\n  }\n\n});","map":{"version":3,"names":["h","inject","defineComponent","Transition","useMemo","render","mergeEventHandlers","CheckmarkIcon","NBaseIcon","internalSelectionMenuInjectionKey","renderCheckMark","show","clsPrefix","name","default","class","props","type","String","required","tmNode","Object","setup","valueRef","pendingTmNodeRef","multipleRef","valueSetRef","renderLabelRef","renderOptionRef","labelFieldRef","valueFieldRef","showCheckmarkRef","nodePropsRef","handleOptionClick","handleOptionMouseEnter","isPendingRef","value","pendingTmNode","key","handleClick","e","disabled","handleMouseEnter","handleMouseMove","isPending","multiple","isGrouped","parent","rawNode","showCheckmark","nodeProps","isSelected","optionValue","valueSet","has","labelField","renderLabel","renderOption","checkmark","children","attrs","node","assign","style","onClick","onMouseenter","onMousemove","option","selected"],"sources":["E:/VCode/SHC社区管理系统/shc_community_manager_system/node_modules/naive-ui/es/_internal/select-menu/src/SelectOption.js"],"sourcesContent":["import { h, inject, defineComponent, Transition } from 'vue';\nimport { useMemo } from 'vooks';\nimport { render, mergeEventHandlers } from '../../../_utils';\nimport { CheckmarkIcon } from '../../icons';\nimport { NBaseIcon } from '../../icon';\nimport { internalSelectionMenuInjectionKey } from './interface';\nfunction renderCheckMark(show, clsPrefix) {\n    return (h(Transition, { name: \"fade-in-scale-up-transition\" }, {\n        default: () => show ? (h(NBaseIcon, { clsPrefix: clsPrefix, class: `${clsPrefix}-base-select-option__check` }, {\n            default: () => h(CheckmarkIcon)\n        })) : null\n    }));\n}\nexport default defineComponent({\n    name: 'NBaseSelectOption',\n    props: {\n        clsPrefix: {\n            type: String,\n            required: true\n        },\n        tmNode: {\n            type: Object,\n            required: true\n        }\n    },\n    setup(props) {\n        const { valueRef, pendingTmNodeRef, multipleRef, valueSetRef, renderLabelRef, renderOptionRef, labelFieldRef, valueFieldRef, showCheckmarkRef, nodePropsRef, handleOptionClick, handleOptionMouseEnter\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n         } = inject(internalSelectionMenuInjectionKey);\n        const isPendingRef = useMemo(() => {\n            const { value: pendingTmNode } = pendingTmNodeRef;\n            if (!pendingTmNode)\n                return false;\n            return props.tmNode.key === pendingTmNode.key;\n        });\n        function handleClick(e) {\n            const { tmNode } = props;\n            if (tmNode.disabled)\n                return;\n            handleOptionClick(e, tmNode);\n        }\n        function handleMouseEnter(e) {\n            const { tmNode } = props;\n            if (tmNode.disabled)\n                return;\n            handleOptionMouseEnter(e, tmNode);\n        }\n        function handleMouseMove(e) {\n            const { tmNode } = props;\n            const { value: isPending } = isPendingRef;\n            if (tmNode.disabled || isPending)\n                return;\n            handleOptionMouseEnter(e, tmNode);\n        }\n        return {\n            multiple: multipleRef,\n            isGrouped: useMemo(() => {\n                const { tmNode } = props;\n                const { parent } = tmNode;\n                return parent && parent.rawNode.type === 'group';\n            }),\n            showCheckmark: showCheckmarkRef,\n            nodeProps: nodePropsRef,\n            isPending: isPendingRef,\n            isSelected: useMemo(() => {\n                const { value } = valueRef;\n                const { value: multiple } = multipleRef;\n                if (value === null)\n                    return false;\n                const optionValue = props.tmNode.rawNode[valueFieldRef.value];\n                if (multiple) {\n                    const { value: valueSet } = valueSetRef;\n                    return valueSet.has(optionValue);\n                }\n                else {\n                    return value === optionValue;\n                }\n            }),\n            labelField: labelFieldRef,\n            renderLabel: renderLabelRef,\n            renderOption: renderOptionRef,\n            handleMouseMove,\n            handleMouseEnter,\n            handleClick\n        };\n    },\n    render() {\n        const { clsPrefix, tmNode: { rawNode }, isSelected, isPending, isGrouped, showCheckmark, nodeProps, renderOption, renderLabel, handleClick, handleMouseEnter, handleMouseMove } = this;\n        const checkmark = renderCheckMark(isSelected, clsPrefix);\n        const children = renderLabel\n            ? [renderLabel(rawNode, isSelected), showCheckmark && checkmark]\n            : [\n                render(rawNode[this.labelField], rawNode, isSelected),\n                showCheckmark && checkmark\n            ];\n        const attrs = nodeProps === null || nodeProps === void 0 ? void 0 : nodeProps(rawNode);\n        const node = (h(\"div\", Object.assign({}, attrs, { class: [\n                `${clsPrefix}-base-select-option`,\n                rawNode.class,\n                attrs === null || attrs === void 0 ? void 0 : attrs.class,\n                {\n                    [`${clsPrefix}-base-select-option--disabled`]: rawNode.disabled,\n                    [`${clsPrefix}-base-select-option--selected`]: isSelected,\n                    [`${clsPrefix}-base-select-option--grouped`]: isGrouped,\n                    [`${clsPrefix}-base-select-option--pending`]: isPending,\n                    [`${clsPrefix}-base-select-option--show-checkmark`]: showCheckmark\n                }\n            ], style: [(attrs === null || attrs === void 0 ? void 0 : attrs.style) || '', rawNode.style || ''], onClick: mergeEventHandlers([handleClick, attrs === null || attrs === void 0 ? void 0 : attrs.onClick]), onMouseenter: mergeEventHandlers([\n                handleMouseEnter,\n                attrs === null || attrs === void 0 ? void 0 : attrs.onMouseenter\n            ]), onMousemove: mergeEventHandlers([handleMouseMove, attrs === null || attrs === void 0 ? void 0 : attrs.onMousemove]) }),\n            h(\"div\", { class: `${clsPrefix}-base-select-option__content` }, children)));\n        return rawNode.render\n            ? rawNode.render({ node, option: rawNode, selected: isSelected })\n            : renderOption\n                ? renderOption({ node, option: rawNode, selected: isSelected })\n                : node;\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}