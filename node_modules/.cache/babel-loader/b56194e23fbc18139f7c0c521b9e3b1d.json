{"ast":null,"code":"const __default__ = {\n  name: 'App'\n};\nimport { ref, provide } from 'vue';\nimport { NConfigProvider, NMessageProvider, darkTheme, NButton, NGlobalStyle, NLoadingBarProvider, zhCN, dateZhCN, NDialogProvider } from 'naive-ui'; // 引入自定义主题\n\nimport myTheme from './theme.js'; // 引入路由\n\nimport { useRouter } from \"vue-router\";\nimport axios from 'axios';\nexport default /*#__PURE__*/Object.assign(__default__, {\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const dark = ref(false); // 向后代组件传递数据\n\n    provide('dark', dark); // 获取路由对象\n\n    const router = useRouter(); // 前置守卫\n\n    router.beforeEach((to, from, next) => {\n      // 设置网页标题\n      document.title = to.meta.title;\n\n      if (to.name === \"login\") {\n        localStorage.removeItem(\"user\");\n      } else {\n        const user = JSON.parse(localStorage.getItem(\"user\"));\n\n        if (!user) {\n          next({\n            path: '/login'\n          });\n        } else {\n          axios({\n            url: '/api/checkToken',\n            headers: {\n              token: user.token\n            }\n          }).then(res => {\n            if (!res.data) {\n              next({\n                path: '/login'\n              });\n            }\n          });\n        }\n      }\n\n      next(null);\n    });\n    /* \n    // 获取路由实例\n    const router = useRouter();\n    router.beforeEach((to, from, next) => {\n      document.title = to.meta.title\n      //loadingBar.start();\n      next();\n    });\n    \n    router.afterEach(() => {\n      //loadingBar.finish();\n    }); */\n\n    const __returned__ = {\n      dark,\n      router,\n      ref,\n      provide,\n      NConfigProvider,\n      NMessageProvider,\n      darkTheme,\n      NButton,\n      NGlobalStyle,\n      NLoadingBarProvider,\n      zhCN,\n      dateZhCN,\n      NDialogProvider,\n      myTheme,\n      useRouter,\n      axios\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n});","map":{"version":3,"mappings":"AA0EA,oBAAe;EACbA,IAAI,EAAE;AADO,CAAf;AA5DA,SAASC,GAAT,EAAcC,OAAd,QAA6B,KAA7B;AAEA,SACEC,eADF,EACmBC,gBADnB,EACqCC,SADrC,EACgDC,OADhD,EAEEC,YAFF,EAEgBC,mBAFhB,EAEqCC,IAFrC,EAE2CC,QAF3C,EAEqDC,eAFrD,QAGO,UAHP,C,CAKA;;AACA,OAAOC,OAAP,MAAoB,YAApB,C,CAEA;;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;;IAEA,MAAMC,IAAI,GAAGd,GAAG,CAAC,KAAD,CAAhB,EACA;;IACAC,OAAO,CAAC,MAAD,EAASa,IAAT,CAAP,EAEA;;IACA,MAAMC,MAAM,GAAGH,SAAS,EAAxB,EAEA;;IACAG,MAAM,CAACC,UAAP,CAAkB,CAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,KAAoB;MACpC;MACAC,QAAQ,CAACC,KAAT,GAAiBJ,EAAE,CAACK,IAAH,CAAQD,KAAzB;;MACA,IAAIJ,EAAE,CAAClB,IAAH,KAAY,OAAhB,EAAyB;QACvBwB,YAAY,CAACC,UAAb,CAAwB,MAAxB;MACD,CAFD,MAEO;QACL,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACK,OAAb,CAAqB,MAArB,CAAX,CAAb;;QACA,IAAG,CAACH,IAAJ,EAAU;UACRN,IAAI,CAAC;YAACU,IAAI,EAAE;UAAP,CAAD,CAAJ;QACD,CAFD,MAEO;UACLhB,KAAK,CAAC;YACJiB,GAAG,EAAE,iBADD;YAEJC,OAAO,EAAE;cAAEC,KAAK,EAACP,IAAI,CAACO;YAAb;UAFL,CAAD,CAAL,CAGGC,IAHH,CAGQC,GAAG,IAAI;YACb,IAAI,CAACA,GAAG,CAACC,IAAT,EAAe;cACbhB,IAAI,CAAC;gBAACU,IAAI,EAAE;cAAP,CAAD,CAAJ;YACD;UACF,CAPD;QAQD;MACF;;MACDV,IAAI,CAAC,IAAD,CAAJ;IACD,CArBD;IAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","names":["name","ref","provide","NConfigProvider","NMessageProvider","darkTheme","NButton","NGlobalStyle","NLoadingBarProvider","zhCN","dateZhCN","NDialogProvider","myTheme","useRouter","axios","dark","router","beforeEach","to","from","next","document","title","meta","localStorage","removeItem","user","JSON","parse","getItem","path","url","headers","token","then","res","data"],"sources":["E:/VCode/SHC社区管理系统/shc_community_manager_system/src/App.vue"],"sourcesContent":["<template>\n  <n-config-provider :locale=\"zhCN\" :date-locale=\"dateZhCN\" :theme=\"dark ? darkTheme : null\" :theme-overrides=\"myTheme\">\n    <n-loading-bar-provider>\n      <n-dialog-provider>\n        <n-message-provider>\n          <router-view></router-view>\n        </n-message-provider>\n      </n-dialog-provider>\n    </n-loading-bar-provider>\n    <n-global-style />\n  </n-config-provider>\n</template>\n\n<script setup>\nimport { ref, provide } from 'vue'\n\nimport {\n  NConfigProvider, NMessageProvider, darkTheme, NButton,\n  NGlobalStyle, NLoadingBarProvider, zhCN, dateZhCN, NDialogProvider\n} from 'naive-ui'\n\n// 引入自定义主题\nimport myTheme from './theme.js'\n\n// 引入路由\nimport { useRouter } from \"vue-router\";\nimport axios from 'axios';\n\nconst dark = ref(false)\n// 向后代组件传递数据\nprovide('dark', dark)\n\n// 获取路由对象\nconst router = useRouter()\n\n// 前置守卫\nrouter.beforeEach((to, from, next) => {\n  // 设置网页标题\n  document.title = to.meta.title\n  if (to.name === \"login\") {\n    localStorage.removeItem(\"user\")\n  } else {\n    const user = JSON.parse(localStorage.getItem(\"user\"))\n    if(!user) {\n      next({path: '/login'});\n    } else {\n      axios({\n        url: '/api/checkToken',\n        headers: { token:user.token }\n      }).then(res => {\n        if (!res.data) {\n          next({path: '/login'})\n        }\n      })\n    }\n  }\n  next(null)\n});\n\n/* \n// 获取路由实例\nconst router = useRouter();\nrouter.beforeEach((to, from, next) => {\n  document.title = to.meta.title\n  //loadingBar.start();\n  next();\n});\n\nrouter.afterEach(() => {\n  //loadingBar.finish();\n}); */\n\n</script>\n<script>\nexport default {\n  name: 'App',\n}\n\n</script>\n\n<style>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}