{"ast":null,"code":"import { h, computed, defineComponent, nextTick, ref, toRef, onMounted, getCurrentInstance, watch, watchEffect, provide, Fragment } from 'vue';\nimport { useMergedState, useMemo } from 'vooks';\nimport { getPadding } from 'seemly';\nimport { VResizeObserver } from 'vueuc';\nimport { off, on } from 'evtd';\nimport { isSafari } from '../../_utils/env/browser';\nimport { EyeIcon, EyeOffIcon } from '../../_internal/icons';\nimport { useRtl } from '../../_mixins/use-rtl';\nimport { NBaseClear, NBaseIcon, NBaseSuffix, NScrollbar } from '../../_internal';\nimport { useTheme, useLocale, useFormItem, useConfig, useThemeClass, useStyle } from '../../_mixins';\nimport { call, createKey, resolveSlot, resolveWrappedSlot, warnOnce } from '../../_utils';\nimport { inputLight } from '../styles';\nimport { inputInjectionKey } from './interface';\nimport { isEmptyInputValue, useCursor } from './utils';\nimport WordCount from './WordCount';\nimport style, { safariStyle } from './styles/input.cssr';\nexport const inputProps = Object.assign(Object.assign({}, useTheme.props), {\n  bordered: {\n    type: Boolean,\n    default: undefined\n  },\n  type: {\n    type: String,\n    default: 'text'\n  },\n  placeholder: [Array, String],\n  defaultValue: {\n    type: [String, Array],\n    default: null\n  },\n  value: [String, Array],\n  disabled: {\n    type: Boolean,\n    default: undefined\n  },\n  size: String,\n  rows: {\n    type: [Number, String],\n    default: 3\n  },\n  round: Boolean,\n  minlength: [String, Number],\n  maxlength: [String, Number],\n  clearable: Boolean,\n  autosize: {\n    type: [Boolean, Object],\n    default: false\n  },\n  pair: Boolean,\n  separator: String,\n  readonly: {\n    type: [String, Boolean],\n    default: false\n  },\n  passivelyActivated: Boolean,\n  showPasswordOn: String,\n  stateful: {\n    type: Boolean,\n    default: true\n  },\n  autofocus: Boolean,\n  inputProps: Object,\n  resizable: {\n    type: Boolean,\n    default: true\n  },\n  showCount: Boolean,\n  loading: {\n    type: Boolean,\n    default: undefined\n  },\n  allowInput: Function,\n  renderCount: Function,\n  onMousedown: Function,\n  onKeydown: Function,\n  onKeyup: Function,\n  onInput: [Function, Array],\n  onFocus: [Function, Array],\n  onBlur: [Function, Array],\n  onClick: [Function, Array],\n  onChange: [Function, Array],\n  onClear: [Function, Array],\n  status: String,\n  'onUpdate:value': [Function, Array],\n  onUpdateValue: [Function, Array],\n\n  /** private */\n  textDecoration: [String, Array],\n  attrSize: {\n    type: Number,\n    default: 20\n  },\n  onInputBlur: [Function, Array],\n  onInputFocus: [Function, Array],\n  onDeactivate: [Function, Array],\n  onActivate: [Function, Array],\n  onWrapperFocus: [Function, Array],\n  onWrapperBlur: [Function, Array],\n  internalDeactivateOnEnter: Boolean,\n  internalForceFocus: Boolean,\n  internalLoadingBeforeSuffix: Boolean,\n\n  /** deprecated */\n  showPasswordToggle: Boolean\n});\nexport default defineComponent({\n  name: 'Input',\n  props: inputProps,\n\n  setup(props) {\n    if (process.env.NODE_ENV !== 'production') {\n      watchEffect(() => {\n        if (props.showPasswordToggle) {\n          warnOnce('input', '`show-password-toggle` is deprecated, please use `showPasswordOn=\"click\"` instead');\n        }\n      });\n    }\n\n    const {\n      mergedClsPrefixRef,\n      mergedBorderedRef,\n      inlineThemeDisabled,\n      mergedRtlRef\n    } = useConfig(props);\n    const themeRef = useTheme('Input', '-input', style, inputLight, props, mergedClsPrefixRef);\n\n    if (isSafari) {\n      useStyle('-input-safari', safariStyle, mergedClsPrefixRef);\n    } // dom refs\n\n\n    const wrapperElRef = ref(null);\n    const textareaElRef = ref(null);\n    const textareaMirrorElRef = ref(null);\n    const inputMirrorElRef = ref(null);\n    const inputElRef = ref(null);\n    const inputEl2Ref = ref(null);\n    const currentFocusedInputRef = ref(null);\n    const focusedInputCursorControl = useCursor(currentFocusedInputRef);\n    const textareaScrollbarInstRef = ref(null); // local\n\n    const {\n      localeRef\n    } = useLocale('Input'); // value\n\n    const uncontrolledValueRef = ref(props.defaultValue);\n    const controlledValueRef = toRef(props, 'value');\n    const mergedValueRef = useMergedState(controlledValueRef, uncontrolledValueRef); // form-item\n\n    const formItem = useFormItem(props);\n    const {\n      mergedSizeRef,\n      mergedDisabledRef,\n      mergedStatusRef\n    } = formItem; // states\n\n    const focusedRef = ref(false);\n    const hoverRef = ref(false);\n    const isComposingRef = ref(false);\n    const activatedRef = ref(false);\n    let syncSource = null; // placeholder\n\n    const mergedPlaceholderRef = computed(() => {\n      const {\n        placeholder,\n        pair\n      } = props;\n\n      if (pair) {\n        if (Array.isArray(placeholder)) {\n          return placeholder;\n        } else if (placeholder === undefined) {\n          return ['', ''];\n        }\n\n        return [placeholder, placeholder];\n      } else if (placeholder === undefined) {\n        return [localeRef.value.placeholder];\n      } else {\n        return [placeholder];\n      }\n    });\n    const showPlaceholder1Ref = computed(() => {\n      const {\n        value: isComposing\n      } = isComposingRef;\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      const {\n        value: mergedPlaceholder\n      } = mergedPlaceholderRef;\n      return !isComposing && (isEmptyInputValue(mergedValue) || Array.isArray(mergedValue) && isEmptyInputValue(mergedValue[0])) && mergedPlaceholder[0];\n    });\n    const showPlaceholder2Ref = computed(() => {\n      const {\n        value: isComposing\n      } = isComposingRef;\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      const {\n        value: mergedPlaceholder\n      } = mergedPlaceholderRef;\n      return !isComposing && mergedPlaceholder[1] && (isEmptyInputValue(mergedValue) || Array.isArray(mergedValue) && isEmptyInputValue(mergedValue[1]));\n    }); // focus\n\n    const mergedFocusRef = useMemo(() => {\n      return props.internalForceFocus || focusedRef.value;\n    }); // clear\n\n    const showClearButton = useMemo(() => {\n      if (mergedDisabledRef.value || props.readonly || !props.clearable || !mergedFocusRef.value && !hoverRef.value) {\n        return false;\n      }\n\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      const {\n        value: mergedFocus\n      } = mergedFocusRef;\n\n      if (props.pair) {\n        return !!(Array.isArray(mergedValue) && (mergedValue[0] || mergedValue[1])) && (hoverRef.value || mergedFocus);\n      } else {\n        return !!mergedValue && (hoverRef.value || mergedFocus);\n      }\n    }); // passwordVisible\n\n    const mergedShowPasswordOnRef = computed(() => {\n      const {\n        showPasswordOn\n      } = props;\n\n      if (showPasswordOn) {\n        return showPasswordOn;\n      }\n\n      if (props.showPasswordToggle) return 'click';\n      return undefined;\n    });\n    const passwordVisibleRef = ref(false); // text-decoration\n\n    const textDecorationStyleRef = computed(() => {\n      const {\n        textDecoration\n      } = props;\n      if (!textDecoration) return ['', ''];\n\n      if (Array.isArray(textDecoration)) {\n        return textDecoration.map(v => ({\n          textDecoration: v\n        }));\n      }\n\n      return [{\n        textDecoration\n      }];\n    });\n    const textAreaScrollContainerWidthRef = ref(undefined); // textarea autosize\n\n    const updateTextAreaStyle = () => {\n      var _a, _b;\n\n      if (props.type === 'textarea') {\n        const {\n          autosize\n        } = props;\n\n        if (autosize) {\n          textAreaScrollContainerWidthRef.value = (_b = (_a = textareaScrollbarInstRef.value) === null || _a === void 0 ? void 0 : _a.$el) === null || _b === void 0 ? void 0 : _b.offsetWidth;\n        }\n\n        if (!textareaElRef.value) return;\n        if (typeof autosize === 'boolean') return;\n        const {\n          paddingTop: stylePaddingTop,\n          paddingBottom: stylePaddingBottom,\n          lineHeight: styleLineHeight\n        } = window.getComputedStyle(textareaElRef.value);\n        const paddingTop = Number(stylePaddingTop.slice(0, -2));\n        const paddingBottom = Number(stylePaddingBottom.slice(0, -2));\n        const lineHeight = Number(styleLineHeight.slice(0, -2));\n        const {\n          value: textareaMirrorEl\n        } = textareaMirrorElRef;\n        if (!textareaMirrorEl) return;\n\n        if (autosize.minRows) {\n          const minRows = Math.max(autosize.minRows, 1);\n          const styleMinHeight = `${paddingTop + paddingBottom + lineHeight * minRows}px`;\n          textareaMirrorEl.style.minHeight = styleMinHeight;\n        }\n\n        if (autosize.maxRows) {\n          const styleMaxHeight = `${paddingTop + paddingBottom + lineHeight * autosize.maxRows}px`;\n          textareaMirrorEl.style.maxHeight = styleMaxHeight;\n        }\n      }\n    }; // word count\n\n\n    const maxlengthRef = computed(() => {\n      const {\n        maxlength\n      } = props;\n      return maxlength === undefined ? undefined : Number(maxlength);\n    });\n    onMounted(() => {\n      // sync mirror if is not pair\n      const {\n        value\n      } = mergedValueRef;\n\n      if (!Array.isArray(value)) {\n        syncMirror(value);\n      }\n    }); // other methods\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    const vm = getCurrentInstance().proxy;\n\n    function doUpdateValue(value) {\n      const {\n        onUpdateValue,\n        'onUpdate:value': _onUpdateValue,\n        onInput\n      } = props;\n      const {\n        nTriggerFormInput\n      } = formItem;\n      if (onUpdateValue) call(onUpdateValue, value);\n      if (_onUpdateValue) call(_onUpdateValue, value);\n      if (onInput) call(onInput, value);\n      uncontrolledValueRef.value = value;\n      nTriggerFormInput();\n    }\n\n    function doChange(value) {\n      const {\n        onChange\n      } = props;\n      const {\n        nTriggerFormChange\n      } = formItem;\n      if (onChange) call(onChange, value);\n      uncontrolledValueRef.value = value;\n      nTriggerFormChange();\n    }\n\n    function doBlur(e) {\n      const {\n        onBlur\n      } = props;\n      const {\n        nTriggerFormBlur\n      } = formItem;\n      if (onBlur) call(onBlur, e);\n      nTriggerFormBlur();\n    }\n\n    function doFocus(e) {\n      const {\n        onFocus\n      } = props;\n      const {\n        nTriggerFormFocus\n      } = formItem;\n      if (onFocus) call(onFocus, e);\n      nTriggerFormFocus();\n    }\n\n    function doClear(e) {\n      const {\n        onClear\n      } = props;\n      if (onClear) call(onClear, e);\n    }\n\n    function doUpdateValueBlur(e) {\n      const {\n        onInputBlur\n      } = props;\n      if (onInputBlur) call(onInputBlur, e);\n    }\n\n    function doUpdateValueFocus(e) {\n      const {\n        onInputFocus\n      } = props;\n      if (onInputFocus) call(onInputFocus, e);\n    }\n\n    function doDeactivate() {\n      const {\n        onDeactivate\n      } = props;\n      if (onDeactivate) call(onDeactivate);\n    }\n\n    function doActivate() {\n      const {\n        onActivate\n      } = props;\n      if (onActivate) call(onActivate);\n    }\n\n    function doClick(e) {\n      const {\n        onClick\n      } = props;\n      if (onClick) call(onClick, e);\n    }\n\n    function doWrapperFocus(e) {\n      const {\n        onWrapperFocus\n      } = props;\n      if (onWrapperFocus) call(onWrapperFocus, e);\n    }\n\n    function doWrapperBlur(e) {\n      const {\n        onWrapperBlur\n      } = props;\n      if (onWrapperBlur) call(onWrapperBlur, e);\n    } // methods\n\n\n    function handleCompositionStart() {\n      isComposingRef.value = true;\n    }\n\n    function handleCompositionEnd(e) {\n      isComposingRef.value = false;\n\n      if (e.target === inputEl2Ref.value) {\n        handleInput(e, 1);\n      } else {\n        handleInput(e, 0);\n      }\n    }\n\n    function handleInput(e, index = 0, event = 'input') {\n      const targetValue = e.target.value;\n      syncMirror(targetValue);\n\n      if (e instanceof InputEvent && !e.isComposing) {\n        isComposingRef.value = false;\n      }\n\n      if (props.type === 'textarea') {\n        const {\n          value: textareaScrollbarInst\n        } = textareaScrollbarInstRef;\n\n        if (textareaScrollbarInst) {\n          textareaScrollbarInst.syncUnifiedContainer();\n        }\n      }\n\n      syncSource = targetValue;\n      if (isComposingRef.value) return;\n      focusedInputCursorControl.recordCursor();\n      const isIncomingValueValid = allowInput(targetValue);\n\n      if (isIncomingValueValid) {\n        if (!props.pair) {\n          event === 'input' ? doUpdateValue(targetValue) : doChange(targetValue);\n        } else {\n          let {\n            value\n          } = mergedValueRef;\n\n          if (!Array.isArray(value)) {\n            value = ['', ''];\n          } else {\n            value = [value[0], value[1]];\n          }\n\n          value[index] = targetValue;\n          event === 'input' ? doUpdateValue(value) : doChange(value);\n        }\n      } // force update to sync input's view with value\n      // if not set, after input, input value won't sync with dom input value\n\n\n      vm.$forceUpdate();\n\n      if (!isIncomingValueValid) {\n        void nextTick(focusedInputCursorControl.restoreCursor);\n      }\n    }\n\n    function allowInput(value) {\n      const {\n        allowInput\n      } = props;\n\n      if (typeof allowInput === 'function') {\n        return allowInput(value);\n      }\n\n      return true;\n    }\n\n    function handleInputBlur(e) {\n      doUpdateValueBlur(e);\n\n      if (e.relatedTarget === wrapperElRef.value) {\n        doDeactivate();\n      }\n\n      if (!(e.relatedTarget !== null && (e.relatedTarget === inputElRef.value || e.relatedTarget === inputEl2Ref.value || e.relatedTarget === textareaElRef.value))) {\n        activatedRef.value = false;\n      }\n\n      dealWithEvent(e, 'blur');\n      currentFocusedInputRef.value = null;\n    }\n\n    function handleInputFocus(e, index) {\n      doUpdateValueFocus(e);\n      focusedRef.value = true;\n      activatedRef.value = true;\n      doActivate();\n      dealWithEvent(e, 'focus');\n\n      if (index === 0) {\n        currentFocusedInputRef.value = inputElRef.value;\n      } else if (index === 1) {\n        currentFocusedInputRef.value = inputEl2Ref.value;\n      } else if (index === 2) {\n        currentFocusedInputRef.value = textareaElRef.value;\n      }\n    }\n\n    function handleWrapperBlur(e) {\n      if (props.passivelyActivated) {\n        doWrapperBlur(e);\n        dealWithEvent(e, 'blur');\n      }\n    }\n\n    function handleWrapperFocus(e) {\n      if (props.passivelyActivated) {\n        focusedRef.value = true;\n        doWrapperFocus(e);\n        dealWithEvent(e, 'focus');\n      }\n    }\n\n    function dealWithEvent(e, type) {\n      if (e.relatedTarget !== null && (e.relatedTarget === inputElRef.value || e.relatedTarget === inputEl2Ref.value || e.relatedTarget === textareaElRef.value || e.relatedTarget === wrapperElRef.value)) {\n        /**\n         * activeElement transfer inside the input, do nothing\n         */\n      } else {\n        if (type === 'focus') {\n          doFocus(e);\n          focusedRef.value = true;\n        } else if (type === 'blur') {\n          doBlur(e);\n          focusedRef.value = false;\n        }\n      }\n    }\n\n    function handleChange(e, index) {\n      handleInput(e, index, 'change');\n    }\n\n    function handleClick(e) {\n      doClick(e);\n    }\n\n    function handleClear(e) {\n      doClear(e);\n\n      if (props.pair) {\n        doUpdateValue(['', '']);\n        doChange(['', '']);\n      } else {\n        doUpdateValue('');\n        doChange('');\n      }\n    }\n\n    function handleMouseDown(e) {\n      const {\n        onMousedown\n      } = props;\n      if (onMousedown) onMousedown(e);\n      const {\n        tagName\n      } = e.target;\n\n      if (tagName !== 'INPUT' && tagName !== 'TEXTAREA') {\n        if (props.resizable) {\n          const {\n            value: wrapperEl\n          } = wrapperElRef;\n\n          if (wrapperEl) {\n            const {\n              left,\n              top,\n              width,\n              height\n            } = wrapperEl.getBoundingClientRect();\n            const resizeHandleSize = 14;\n\n            if (left + width - resizeHandleSize < e.clientX && e.clientX < left + width && top + height - resizeHandleSize < e.clientY && e.clientY < top + height) {\n              // touching resize handle, just let it go.\n              // resize won't take focus, maybe there is a better way to do this.\n              // hope someone can figure out a better solution\n              return;\n            }\n          }\n        }\n\n        e.preventDefault();\n\n        if (!focusedRef.value) {\n          focus();\n        }\n      }\n    }\n\n    function handleMouseEnter() {\n      var _a;\n\n      hoverRef.value = true;\n\n      if (props.type === 'textarea') {\n        (_a = textareaScrollbarInstRef.value) === null || _a === void 0 ? void 0 : _a.handleMouseEnterWrapper();\n      }\n    }\n\n    function handleMouseLeave() {\n      var _a;\n\n      hoverRef.value = false;\n\n      if (props.type === 'textarea') {\n        (_a = textareaScrollbarInstRef.value) === null || _a === void 0 ? void 0 : _a.handleMouseLeaveWrapper();\n      }\n    }\n\n    function handlePasswordToggleClick() {\n      if (mergedDisabledRef.value) return;\n      if (mergedShowPasswordOnRef.value !== 'click') return;\n      passwordVisibleRef.value = !passwordVisibleRef.value;\n    }\n\n    function handlePasswordToggleMousedown(e) {\n      if (mergedDisabledRef.value) return;\n      e.preventDefault();\n\n      const preventDefaultOnce = e => {\n        e.preventDefault();\n        off('mouseup', document, preventDefaultOnce);\n      };\n\n      on('mouseup', document, preventDefaultOnce);\n      if (mergedShowPasswordOnRef.value !== 'mousedown') return;\n      passwordVisibleRef.value = true;\n\n      const hidePassword = () => {\n        passwordVisibleRef.value = false;\n        off('mouseup', document, hidePassword);\n      };\n\n      on('mouseup', document, hidePassword);\n    }\n\n    function handleWrapperKeydown(e) {\n      var _a;\n\n      (_a = props.onKeydown) === null || _a === void 0 ? void 0 : _a.call(props, e);\n\n      switch (e.key) {\n        case 'Escape':\n          handleWrapperKeydownEsc();\n          break;\n\n        case 'Enter':\n          handleWrapperKeydownEnter(e);\n          break;\n      }\n    }\n\n    function handleWrapperKeydownEnter(e) {\n      var _a, _b;\n\n      if (props.passivelyActivated) {\n        const {\n          value: focused\n        } = activatedRef;\n\n        if (focused) {\n          if (props.internalDeactivateOnEnter) {\n            handleWrapperKeydownEsc();\n          }\n\n          return;\n        }\n\n        e.preventDefault();\n\n        if (props.type === 'textarea') {\n          (_a = textareaElRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n        } else {\n          (_b = inputElRef.value) === null || _b === void 0 ? void 0 : _b.focus();\n        }\n      }\n    }\n\n    function handleWrapperKeydownEsc() {\n      if (props.passivelyActivated) {\n        activatedRef.value = false;\n        void nextTick(() => {\n          var _a;\n\n          (_a = wrapperElRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n        });\n      }\n    }\n\n    function focus() {\n      var _a, _b, _c;\n\n      if (mergedDisabledRef.value) return;\n\n      if (props.passivelyActivated) {\n        (_a = wrapperElRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n      } else {\n        (_b = textareaElRef.value) === null || _b === void 0 ? void 0 : _b.focus();\n        (_c = inputElRef.value) === null || _c === void 0 ? void 0 : _c.focus();\n      }\n    }\n\n    function blur() {\n      var _a;\n\n      if ((_a = wrapperElRef.value) === null || _a === void 0 ? void 0 : _a.contains(document.activeElement)) {\n        ;\n        document.activeElement.blur();\n      }\n    }\n\n    function select() {\n      var _a, _b;\n\n      (_a = textareaElRef.value) === null || _a === void 0 ? void 0 : _a.select();\n      (_b = inputElRef.value) === null || _b === void 0 ? void 0 : _b.select();\n    }\n\n    function activate() {\n      if (mergedDisabledRef.value) return;\n      if (textareaElRef.value) textareaElRef.value.focus();else if (inputElRef.value) inputElRef.value.focus();\n    }\n\n    function deactivate() {\n      const {\n        value: wrapperEl\n      } = wrapperElRef;\n\n      if ((wrapperEl === null || wrapperEl === void 0 ? void 0 : wrapperEl.contains(document.activeElement)) && wrapperEl !== document.activeElement) {\n        handleWrapperKeydownEsc();\n      }\n    }\n\n    function scrollTo(options) {\n      if (props.type === 'textarea') {\n        const {\n          value: textareaEl\n        } = textareaElRef;\n        textareaEl === null || textareaEl === void 0 ? void 0 : textareaEl.scrollTo(options);\n      } else {\n        const {\n          value: inputEl\n        } = inputElRef;\n        inputEl === null || inputEl === void 0 ? void 0 : inputEl.scrollTo(options);\n      }\n    }\n\n    function syncMirror(value) {\n      const {\n        type,\n        pair,\n        autosize\n      } = props;\n\n      if (!pair && autosize) {\n        if (type === 'textarea') {\n          const {\n            value: textareaMirrorEl\n          } = textareaMirrorElRef;\n\n          if (textareaMirrorEl) {\n            textareaMirrorEl.textContent = (value !== null && value !== void 0 ? value : '') + '\\r\\n';\n          }\n        } else {\n          const {\n            value: inputMirrorEl\n          } = inputMirrorElRef;\n\n          if (inputMirrorEl) {\n            if (value) {\n              inputMirrorEl.textContent = value;\n            } else {\n              inputMirrorEl.innerHTML = '&nbsp;';\n            }\n          }\n        }\n      }\n    }\n\n    function handleTextAreaMirrorResize() {\n      updateTextAreaStyle();\n    }\n\n    const placeholderStyleRef = ref({\n      top: '0'\n    });\n\n    function handleTextAreaScroll(e) {\n      var _a;\n\n      const {\n        scrollTop\n      } = e.target;\n      placeholderStyleRef.value.top = `${-scrollTop}px`;\n      (_a = textareaScrollbarInstRef.value) === null || _a === void 0 ? void 0 : _a.syncUnifiedContainer();\n    }\n\n    let stopWatchMergedValue1 = null;\n    watchEffect(() => {\n      const {\n        autosize,\n        type\n      } = props;\n\n      if (autosize && type === 'textarea') {\n        stopWatchMergedValue1 = watch(mergedValueRef, value => {\n          if (!Array.isArray(value) && value !== syncSource) {\n            syncMirror(value);\n          }\n        });\n      } else {\n        stopWatchMergedValue1 === null || stopWatchMergedValue1 === void 0 ? void 0 : stopWatchMergedValue1();\n      }\n    });\n    let stopWatchMergedValue2 = null;\n    watchEffect(() => {\n      if (props.type === 'textarea') {\n        stopWatchMergedValue2 = watch(mergedValueRef, value => {\n          var _a;\n\n          if (!Array.isArray(value) && value !== syncSource) {\n            (_a = textareaScrollbarInstRef.value) === null || _a === void 0 ? void 0 : _a.syncUnifiedContainer();\n          }\n        });\n      } else {\n        stopWatchMergedValue2 === null || stopWatchMergedValue2 === void 0 ? void 0 : stopWatchMergedValue2();\n      }\n    });\n    provide(inputInjectionKey, {\n      mergedValueRef,\n      maxlengthRef,\n      mergedClsPrefixRef\n    });\n    const exposedProps = {\n      wrapperElRef,\n      inputElRef,\n      textareaElRef,\n      isCompositing: isComposingRef,\n      focus,\n      blur,\n      select,\n      deactivate,\n      activate,\n      scrollTo\n    };\n    const rtlEnabledRef = useRtl('Input', mergedRtlRef, mergedClsPrefixRef);\n    const cssVarsRef = computed(() => {\n      const {\n        value: size\n      } = mergedSizeRef;\n      const {\n        common: {\n          cubicBezierEaseInOut\n        },\n        self: {\n          color,\n          borderRadius,\n          textColor,\n          caretColor,\n          caretColorError,\n          caretColorWarning,\n          textDecorationColor,\n          border,\n          borderDisabled,\n          borderHover,\n          borderFocus,\n          placeholderColor,\n          placeholderColorDisabled,\n          lineHeightTextarea,\n          colorDisabled,\n          colorFocus,\n          textColorDisabled,\n          boxShadowFocus,\n          iconSize,\n          colorFocusWarning,\n          boxShadowFocusWarning,\n          borderWarning,\n          borderFocusWarning,\n          borderHoverWarning,\n          colorFocusError,\n          boxShadowFocusError,\n          borderError,\n          borderFocusError,\n          borderHoverError,\n          clearSize,\n          clearColor,\n          clearColorHover,\n          clearColorPressed,\n          iconColor,\n          iconColorDisabled,\n          suffixTextColor,\n          countTextColor,\n          countTextColorDisabled,\n          iconColorHover,\n          iconColorPressed,\n          loadingColor,\n          loadingColorError,\n          loadingColorWarning,\n          [createKey('padding', size)]: padding,\n          [createKey('fontSize', size)]: fontSize,\n          [createKey('height', size)]: height\n        }\n      } = themeRef.value;\n      const {\n        left: paddingLeft,\n        right: paddingRight\n      } = getPadding(padding);\n      return {\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-count-text-color': countTextColor,\n        '--n-count-text-color-disabled': countTextColorDisabled,\n        '--n-color': color,\n        '--n-font-size': fontSize,\n        '--n-border-radius': borderRadius,\n        '--n-height': height,\n        '--n-padding-left': paddingLeft,\n        '--n-padding-right': paddingRight,\n        '--n-text-color': textColor,\n        '--n-caret-color': caretColor,\n        '--n-text-decoration-color': textDecorationColor,\n        '--n-border': border,\n        '--n-border-disabled': borderDisabled,\n        '--n-border-hover': borderHover,\n        '--n-border-focus': borderFocus,\n        '--n-placeholder-color': placeholderColor,\n        '--n-placeholder-color-disabled': placeholderColorDisabled,\n        '--n-icon-size': iconSize,\n        '--n-line-height-textarea': lineHeightTextarea,\n        '--n-color-disabled': colorDisabled,\n        '--n-color-focus': colorFocus,\n        '--n-text-color-disabled': textColorDisabled,\n        '--n-box-shadow-focus': boxShadowFocus,\n        '--n-loading-color': loadingColor,\n        // form warning\n        '--n-caret-color-warning': caretColorWarning,\n        '--n-color-focus-warning': colorFocusWarning,\n        '--n-box-shadow-focus-warning': boxShadowFocusWarning,\n        '--n-border-warning': borderWarning,\n        '--n-border-focus-warning': borderFocusWarning,\n        '--n-border-hover-warning': borderHoverWarning,\n        '--n-loading-color-warning': loadingColorWarning,\n        // form error\n        '--n-caret-color-error': caretColorError,\n        '--n-color-focus-error': colorFocusError,\n        '--n-box-shadow-focus-error': boxShadowFocusError,\n        '--n-border-error': borderError,\n        '--n-border-focus-error': borderFocusError,\n        '--n-border-hover-error': borderHoverError,\n        '--n-loading-color-error': loadingColorError,\n        // clear-button\n        '--n-clear-color': clearColor,\n        '--n-clear-size': clearSize,\n        '--n-clear-color-hover': clearColorHover,\n        '--n-clear-color-pressed': clearColorPressed,\n        '--n-icon-color': iconColor,\n        '--n-icon-color-hover': iconColorHover,\n        '--n-icon-color-pressed': iconColorPressed,\n        '--n-icon-color-disabled': iconColorDisabled,\n        '--n-suffix-text-color': suffixTextColor\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('input', computed(() => {\n      const {\n        value: size\n      } = mergedSizeRef;\n      return size[0];\n    }), cssVarsRef, props) : undefined;\n    return Object.assign(Object.assign({}, exposedProps), {\n      // DOM ref\n      wrapperElRef,\n      inputElRef,\n      inputMirrorElRef,\n      inputEl2Ref,\n      textareaElRef,\n      textareaMirrorElRef,\n      textareaScrollbarInstRef,\n      // value\n      rtlEnabled: rtlEnabledRef,\n      uncontrolledValue: uncontrolledValueRef,\n      mergedValue: mergedValueRef,\n      passwordVisible: passwordVisibleRef,\n      mergedPlaceholder: mergedPlaceholderRef,\n      showPlaceholder1: showPlaceholder1Ref,\n      showPlaceholder2: showPlaceholder2Ref,\n      mergedFocus: mergedFocusRef,\n      isComposing: isComposingRef,\n      activated: activatedRef,\n      showClearButton,\n      mergedSize: mergedSizeRef,\n      mergedDisabled: mergedDisabledRef,\n      textDecorationStyle: textDecorationStyleRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      mergedBordered: mergedBorderedRef,\n      mergedShowPasswordOn: mergedShowPasswordOnRef,\n      placeholderStyle: placeholderStyleRef,\n      mergedStatus: mergedStatusRef,\n      textAreaScrollContainerWidth: textAreaScrollContainerWidthRef,\n      // methods\n      handleTextAreaScroll,\n      handleCompositionStart,\n      handleCompositionEnd,\n      handleInput,\n      handleInputBlur,\n      handleInputFocus,\n      handleWrapperBlur,\n      handleWrapperFocus,\n      handleMouseEnter,\n      handleMouseLeave,\n      handleMouseDown,\n      handleChange,\n      handleClick,\n      handleClear,\n      handlePasswordToggleClick,\n      handlePasswordToggleMousedown,\n      handleWrapperKeydown,\n      handleTextAreaMirrorResize,\n      getTextareaScrollContainer: () => {\n        return textareaElRef.value;\n      },\n      mergedTheme: themeRef,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    });\n  },\n\n  render() {\n    var _a, _b;\n\n    const {\n      mergedClsPrefix,\n      mergedStatus,\n      themeClass,\n      type,\n      onRender\n    } = this;\n    const $slots = this.$slots;\n    onRender === null || onRender === void 0 ? void 0 : onRender();\n    return h(\"div\", {\n      ref: \"wrapperElRef\",\n      class: [`${mergedClsPrefix}-input`, themeClass, mergedStatus && `${mergedClsPrefix}-input--${mergedStatus}-status`, {\n        [`${mergedClsPrefix}-input--rtl`]: this.rtlEnabled,\n        [`${mergedClsPrefix}-input--disabled`]: this.mergedDisabled,\n        [`${mergedClsPrefix}-input--textarea`]: type === 'textarea',\n        [`${mergedClsPrefix}-input--resizable`]: this.resizable && !this.autosize,\n        [`${mergedClsPrefix}-input--autosize`]: this.autosize,\n        [`${mergedClsPrefix}-input--round`]: this.round && !(type === 'textarea'),\n        [`${mergedClsPrefix}-input--pair`]: this.pair,\n        [`${mergedClsPrefix}-input--focus`]: this.mergedFocus,\n        [`${mergedClsPrefix}-input--stateful`]: this.stateful\n      }],\n      style: this.cssVars,\n      tabindex: !this.mergedDisabled && this.passivelyActivated && !this.activated ? 0 : undefined,\n      onFocus: this.handleWrapperFocus,\n      onBlur: this.handleWrapperBlur,\n      onClick: this.handleClick,\n      onMousedown: this.handleMouseDown,\n      onMouseenter: this.handleMouseEnter,\n      onMouseleave: this.handleMouseLeave,\n      onCompositionstart: this.handleCompositionStart,\n      onCompositionend: this.handleCompositionEnd,\n      onKeyup: this.onKeyup,\n      onKeydown: this.handleWrapperKeydown\n    }, h(\"div\", {\n      class: `${mergedClsPrefix}-input-wrapper`\n    }, resolveWrappedSlot($slots.prefix, children => children && h(\"div\", {\n      class: `${mergedClsPrefix}-input__prefix`\n    }, children)), type === 'textarea' ? h(NScrollbar, {\n      ref: \"textareaScrollbarInstRef\",\n      class: `${mergedClsPrefix}-input__textarea`,\n      container: this.getTextareaScrollContainer,\n      triggerDisplayManually: true,\n      useUnifiedContainer: true,\n      internalHoistYRail: true\n    }, {\n      default: () => {\n        var _a, _b;\n\n        const {\n          textAreaScrollContainerWidth\n        } = this;\n        const scrollContainerWidthStyle = {\n          width: this.autosize && textAreaScrollContainerWidth && `${textAreaScrollContainerWidth}px`\n        };\n        return h(Fragment, null, h(\"textarea\", Object.assign({}, this.inputProps, {\n          ref: \"textareaElRef\",\n          class: [`${mergedClsPrefix}-input__textarea-el`, (_a = this.inputProps) === null || _a === void 0 ? void 0 : _a.class],\n          autofocus: this.autofocus,\n          rows: Number(this.rows),\n          placeholder: this.placeholder,\n          value: this.mergedValue,\n          disabled: this.mergedDisabled,\n          maxlength: this.maxlength,\n          minlength: this.minlength,\n          readonly: this.readonly,\n          tabindex: this.passivelyActivated && !this.activated ? -1 : undefined,\n          style: [this.textDecorationStyle[0], (_b = this.inputProps) === null || _b === void 0 ? void 0 : _b.style, scrollContainerWidthStyle],\n          onBlur: this.handleInputBlur,\n          onFocus: e => this.handleInputFocus(e, 2),\n          onInput: this.handleInput,\n          onChange: this.handleChange,\n          onScroll: this.handleTextAreaScroll\n        })), this.showPlaceholder1 ? h(\"div\", {\n          class: `${mergedClsPrefix}-input__placeholder`,\n          style: [this.placeholderStyle, scrollContainerWidthStyle],\n          key: \"placeholder\"\n        }, this.mergedPlaceholder[0]) : null, this.autosize ? h(VResizeObserver, {\n          onResize: this.handleTextAreaMirrorResize\n        }, {\n          default: () => h(\"div\", {\n            ref: \"textareaMirrorElRef\",\n            class: `${mergedClsPrefix}-input__textarea-mirror`,\n            key: \"mirror\"\n          })\n        }) : null);\n      }\n    }) : h(\"div\", {\n      class: `${mergedClsPrefix}-input__input`\n    }, h(\"input\", Object.assign({\n      type: type === 'password' && this.mergedShowPasswordOn && this.passwordVisible ? 'text' : type\n    }, this.inputProps, {\n      ref: \"inputElRef\",\n      class: [`${mergedClsPrefix}-input__input-el`, (_a = this.inputProps) === null || _a === void 0 ? void 0 : _a.class],\n      style: [this.textDecorationStyle[0], (_b = this.inputProps) === null || _b === void 0 ? void 0 : _b.style],\n      tabindex: this.passivelyActivated && !this.activated ? -1 : undefined,\n      placeholder: this.mergedPlaceholder[0],\n      disabled: this.mergedDisabled,\n      maxlength: this.maxlength,\n      minlength: this.minlength,\n      value: Array.isArray(this.mergedValue) ? this.mergedValue[0] : this.mergedValue,\n      readonly: this.readonly,\n      autofocus: this.autofocus,\n      size: this.attrSize,\n      onBlur: this.handleInputBlur,\n      onFocus: e => this.handleInputFocus(e, 0),\n      onInput: e => this.handleInput(e, 0),\n      onChange: e => this.handleChange(e, 0)\n    })), this.showPlaceholder1 ? h(\"div\", {\n      class: `${mergedClsPrefix}-input__placeholder`\n    }, h(\"span\", null, this.mergedPlaceholder[0])) : null, this.autosize ? h(\"div\", {\n      class: `${mergedClsPrefix}-input__input-mirror`,\n      key: \"mirror\",\n      ref: \"inputMirrorElRef\"\n    }, \"\\u00A0\") : null), !this.pair && resolveWrappedSlot($slots.suffix, children => {\n      return children || this.clearable || this.showCount || this.mergedShowPasswordOn || this.loading !== undefined ? h(\"div\", {\n        class: `${mergedClsPrefix}-input__suffix`\n      }, [resolveWrappedSlot($slots['clear-icon-placeholder'], children => {\n        return (this.clearable || children) && h(NBaseClear, {\n          clsPrefix: mergedClsPrefix,\n          show: this.showClearButton,\n          onClear: this.handleClear\n        }, {\n          placeholder: () => children,\n          icon: () => {\n            var _a, _b;\n\n            return (_b = (_a = this.$slots)['clear-icon']) === null || _b === void 0 ? void 0 : _b.call(_a);\n          }\n        });\n      }), !this.internalLoadingBeforeSuffix ? children : null, this.loading !== undefined ? h(NBaseSuffix, {\n        clsPrefix: mergedClsPrefix,\n        loading: this.loading,\n        showArrow: false,\n        showClear: false,\n        style: this.cssVars\n      }) : null, this.internalLoadingBeforeSuffix ? children : null, this.showCount && this.type !== 'textarea' ? h(WordCount, null, {\n        default: props => {\n          var _a;\n\n          return (_a = $slots.count) === null || _a === void 0 ? void 0 : _a.call($slots, props);\n        }\n      }) : null, this.mergedShowPasswordOn && this.type === 'password' ? h(\"div\", {\n        class: `${mergedClsPrefix}-input__eye`,\n        onMousedown: this.handlePasswordToggleMousedown,\n        onClick: this.handlePasswordToggleClick\n      }, this.passwordVisible ? resolveSlot($slots['password-visible-icon'], () => [h(NBaseIcon, {\n        clsPrefix: mergedClsPrefix\n      }, {\n        default: () => h(EyeIcon, null)\n      })]) : resolveSlot($slots['password-invisible-icon'], () => [h(NBaseIcon, {\n        clsPrefix: mergedClsPrefix\n      }, {\n        default: () => h(EyeOffIcon, null)\n      })])) : null]) : null;\n    })), this.pair ? h(\"span\", {\n      class: `${mergedClsPrefix}-input__separator`\n    }, resolveSlot($slots.separator, () => [this.separator])) : null, this.pair ? h(\"div\", {\n      class: `${mergedClsPrefix}-input-wrapper`\n    }, h(\"div\", {\n      class: `${mergedClsPrefix}-input__input`\n    }, h(\"input\", {\n      ref: \"inputEl2Ref\",\n      type: this.type,\n      class: `${mergedClsPrefix}-input__input-el`,\n      tabindex: this.passivelyActivated && !this.activated ? -1 : undefined,\n      placeholder: this.mergedPlaceholder[1],\n      disabled: this.mergedDisabled,\n      maxlength: this.maxlength,\n      minlength: this.minlength,\n      value: Array.isArray(this.mergedValue) ? this.mergedValue[1] : undefined,\n      readonly: this.readonly,\n      style: this.textDecorationStyle[1],\n      onBlur: this.handleInputBlur,\n      onFocus: e => this.handleInputFocus(e, 1),\n      onInput: e => this.handleInput(e, 1),\n      onChange: e => this.handleChange(e, 1)\n    }), this.showPlaceholder2 ? h(\"div\", {\n      class: `${mergedClsPrefix}-input__placeholder`\n    }, h(\"span\", null, this.mergedPlaceholder[1])) : null), resolveWrappedSlot($slots.suffix, children => {\n      return (this.clearable || children) && h(\"div\", {\n        class: `${mergedClsPrefix}-input__suffix`\n      }, [this.clearable && h(NBaseClear, {\n        clsPrefix: mergedClsPrefix,\n        show: this.showClearButton,\n        onClear: this.handleClear\n      }, {\n        icon: () => {\n          var _a;\n\n          return (_a = $slots['clear-icon']) === null || _a === void 0 ? void 0 : _a.call($slots);\n        },\n        placeholder: () => {\n          var _a;\n\n          return (_a = $slots['clear-icon-placeholder']) === null || _a === void 0 ? void 0 : _a.call($slots);\n        }\n      }), children]);\n    })) : null, this.mergedBordered ? h(\"div\", {\n      class: `${mergedClsPrefix}-input__border`\n    }) : null, this.mergedBordered ? h(\"div\", {\n      class: `${mergedClsPrefix}-input__state-border`\n    }) : null, this.showCount && type === 'textarea' ? h(WordCount, null, {\n      default: props => {\n        var _a;\n\n        const {\n          renderCount\n        } = this;\n\n        if (renderCount) {\n          return renderCount(props);\n        }\n\n        return (_a = $slots.count) === null || _a === void 0 ? void 0 : _a.call($slots, props);\n      }\n    }) : null);\n  }\n\n});","map":{"version":3,"names":["h","computed","defineComponent","nextTick","ref","toRef","onMounted","getCurrentInstance","watch","watchEffect","provide","Fragment","useMergedState","useMemo","getPadding","VResizeObserver","off","on","isSafari","EyeIcon","EyeOffIcon","useRtl","NBaseClear","NBaseIcon","NBaseSuffix","NScrollbar","useTheme","useLocale","useFormItem","useConfig","useThemeClass","useStyle","call","createKey","resolveSlot","resolveWrappedSlot","warnOnce","inputLight","inputInjectionKey","isEmptyInputValue","useCursor","WordCount","style","safariStyle","inputProps","Object","assign","props","bordered","type","Boolean","default","undefined","String","placeholder","Array","defaultValue","value","disabled","size","rows","Number","round","minlength","maxlength","clearable","autosize","pair","separator","readonly","passivelyActivated","showPasswordOn","stateful","autofocus","resizable","showCount","loading","allowInput","Function","renderCount","onMousedown","onKeydown","onKeyup","onInput","onFocus","onBlur","onClick","onChange","onClear","status","onUpdateValue","textDecoration","attrSize","onInputBlur","onInputFocus","onDeactivate","onActivate","onWrapperFocus","onWrapperBlur","internalDeactivateOnEnter","internalForceFocus","internalLoadingBeforeSuffix","showPasswordToggle","name","setup","process","env","NODE_ENV","mergedClsPrefixRef","mergedBorderedRef","inlineThemeDisabled","mergedRtlRef","themeRef","wrapperElRef","textareaElRef","textareaMirrorElRef","inputMirrorElRef","inputElRef","inputEl2Ref","currentFocusedInputRef","focusedInputCursorControl","textareaScrollbarInstRef","localeRef","uncontrolledValueRef","controlledValueRef","mergedValueRef","formItem","mergedSizeRef","mergedDisabledRef","mergedStatusRef","focusedRef","hoverRef","isComposingRef","activatedRef","syncSource","mergedPlaceholderRef","isArray","showPlaceholder1Ref","isComposing","mergedValue","mergedPlaceholder","showPlaceholder2Ref","mergedFocusRef","showClearButton","mergedFocus","mergedShowPasswordOnRef","passwordVisibleRef","textDecorationStyleRef","map","v","textAreaScrollContainerWidthRef","updateTextAreaStyle","_a","_b","$el","offsetWidth","paddingTop","stylePaddingTop","paddingBottom","stylePaddingBottom","lineHeight","styleLineHeight","window","getComputedStyle","slice","textareaMirrorEl","minRows","Math","max","styleMinHeight","minHeight","maxRows","styleMaxHeight","maxHeight","maxlengthRef","syncMirror","vm","proxy","doUpdateValue","_onUpdateValue","nTriggerFormInput","doChange","nTriggerFormChange","doBlur","e","nTriggerFormBlur","doFocus","nTriggerFormFocus","doClear","doUpdateValueBlur","doUpdateValueFocus","doDeactivate","doActivate","doClick","doWrapperFocus","doWrapperBlur","handleCompositionStart","handleCompositionEnd","target","handleInput","index","event","targetValue","InputEvent","textareaScrollbarInst","syncUnifiedContainer","recordCursor","isIncomingValueValid","$forceUpdate","restoreCursor","handleInputBlur","relatedTarget","dealWithEvent","handleInputFocus","handleWrapperBlur","handleWrapperFocus","handleChange","handleClick","handleClear","handleMouseDown","tagName","wrapperEl","left","top","width","height","getBoundingClientRect","resizeHandleSize","clientX","clientY","preventDefault","focus","handleMouseEnter","handleMouseEnterWrapper","handleMouseLeave","handleMouseLeaveWrapper","handlePasswordToggleClick","handlePasswordToggleMousedown","preventDefaultOnce","document","hidePassword","handleWrapperKeydown","key","handleWrapperKeydownEsc","handleWrapperKeydownEnter","focused","_c","blur","contains","activeElement","select","activate","deactivate","scrollTo","options","textareaEl","inputEl","textContent","inputMirrorEl","innerHTML","handleTextAreaMirrorResize","placeholderStyleRef","handleTextAreaScroll","scrollTop","stopWatchMergedValue1","stopWatchMergedValue2","exposedProps","isCompositing","rtlEnabledRef","cssVarsRef","common","cubicBezierEaseInOut","self","color","borderRadius","textColor","caretColor","caretColorError","caretColorWarning","textDecorationColor","border","borderDisabled","borderHover","borderFocus","placeholderColor","placeholderColorDisabled","lineHeightTextarea","colorDisabled","colorFocus","textColorDisabled","boxShadowFocus","iconSize","colorFocusWarning","boxShadowFocusWarning","borderWarning","borderFocusWarning","borderHoverWarning","colorFocusError","boxShadowFocusError","borderError","borderFocusError","borderHoverError","clearSize","clearColor","clearColorHover","clearColorPressed","iconColor","iconColorDisabled","suffixTextColor","countTextColor","countTextColorDisabled","iconColorHover","iconColorPressed","loadingColor","loadingColorError","loadingColorWarning","padding","fontSize","paddingLeft","right","paddingRight","themeClassHandle","rtlEnabled","uncontrolledValue","passwordVisible","showPlaceholder1","showPlaceholder2","activated","mergedSize","mergedDisabled","textDecorationStyle","mergedClsPrefix","mergedBordered","mergedShowPasswordOn","placeholderStyle","mergedStatus","textAreaScrollContainerWidth","getTextareaScrollContainer","mergedTheme","cssVars","themeClass","onRender","render","$slots","class","tabindex","onMouseenter","onMouseleave","onCompositionstart","onCompositionend","prefix","children","container","triggerDisplayManually","useUnifiedContainer","internalHoistYRail","scrollContainerWidthStyle","onScroll","onResize","suffix","clsPrefix","show","icon","showArrow","showClear","count"],"sources":["E:/VCode/SHC社区管理系统/shc_community_manager_system/node_modules/naive-ui/es/input/src/Input.js"],"sourcesContent":["import { h, computed, defineComponent, nextTick, ref, toRef, onMounted, getCurrentInstance, watch, watchEffect, provide, Fragment } from 'vue';\nimport { useMergedState, useMemo } from 'vooks';\nimport { getPadding } from 'seemly';\nimport { VResizeObserver } from 'vueuc';\nimport { off, on } from 'evtd';\nimport { isSafari } from '../../_utils/env/browser';\nimport { EyeIcon, EyeOffIcon } from '../../_internal/icons';\nimport { useRtl } from '../../_mixins/use-rtl';\nimport { NBaseClear, NBaseIcon, NBaseSuffix, NScrollbar } from '../../_internal';\nimport { useTheme, useLocale, useFormItem, useConfig, useThemeClass, useStyle } from '../../_mixins';\nimport { call, createKey, resolveSlot, resolveWrappedSlot, warnOnce } from '../../_utils';\nimport { inputLight } from '../styles';\nimport { inputInjectionKey } from './interface';\nimport { isEmptyInputValue, useCursor } from './utils';\nimport WordCount from './WordCount';\nimport style, { safariStyle } from './styles/input.cssr';\nexport const inputProps = Object.assign(Object.assign({}, useTheme.props), { bordered: {\n        type: Boolean,\n        default: undefined\n    }, type: {\n        type: String,\n        default: 'text'\n    }, placeholder: [Array, String], defaultValue: {\n        type: [String, Array],\n        default: null\n    }, value: [String, Array], disabled: {\n        type: Boolean,\n        default: undefined\n    }, size: String, rows: {\n        type: [Number, String],\n        default: 3\n    }, round: Boolean, minlength: [String, Number], maxlength: [String, Number], clearable: Boolean, autosize: {\n        type: [Boolean, Object],\n        default: false\n    }, pair: Boolean, separator: String, readonly: {\n        type: [String, Boolean],\n        default: false\n    }, passivelyActivated: Boolean, showPasswordOn: String, stateful: {\n        type: Boolean,\n        default: true\n    }, autofocus: Boolean, inputProps: Object, resizable: {\n        type: Boolean,\n        default: true\n    }, showCount: Boolean, loading: {\n        type: Boolean,\n        default: undefined\n    }, allowInput: Function, renderCount: Function, onMousedown: Function, onKeydown: Function, onKeyup: Function, onInput: [Function, Array], onFocus: [Function, Array], onBlur: [Function, Array], onClick: [Function, Array], onChange: [Function, Array], onClear: [Function, Array], status: String, 'onUpdate:value': [Function, Array], onUpdateValue: [Function, Array], \n    /** private */\n    textDecoration: [String, Array], attrSize: {\n        type: Number,\n        default: 20\n    }, onInputBlur: [Function, Array], onInputFocus: [Function, Array], onDeactivate: [Function, Array], onActivate: [Function, Array], onWrapperFocus: [Function, Array], onWrapperBlur: [Function, Array], internalDeactivateOnEnter: Boolean, internalForceFocus: Boolean, internalLoadingBeforeSuffix: Boolean, \n    /** deprecated */\n    showPasswordToggle: Boolean });\nexport default defineComponent({\n    name: 'Input',\n    props: inputProps,\n    setup(props) {\n        if (process.env.NODE_ENV !== 'production') {\n            watchEffect(() => {\n                if (props.showPasswordToggle) {\n                    warnOnce('input', '`show-password-toggle` is deprecated, please use `showPasswordOn=\"click\"` instead');\n                }\n            });\n        }\n        const { mergedClsPrefixRef, mergedBorderedRef, inlineThemeDisabled, mergedRtlRef } = useConfig(props);\n        const themeRef = useTheme('Input', '-input', style, inputLight, props, mergedClsPrefixRef);\n        if (isSafari) {\n            useStyle('-input-safari', safariStyle, mergedClsPrefixRef);\n        }\n        // dom refs\n        const wrapperElRef = ref(null);\n        const textareaElRef = ref(null);\n        const textareaMirrorElRef = ref(null);\n        const inputMirrorElRef = ref(null);\n        const inputElRef = ref(null);\n        const inputEl2Ref = ref(null);\n        const currentFocusedInputRef = ref(null);\n        const focusedInputCursorControl = useCursor(currentFocusedInputRef);\n        const textareaScrollbarInstRef = ref(null);\n        // local\n        const { localeRef } = useLocale('Input');\n        // value\n        const uncontrolledValueRef = ref(props.defaultValue);\n        const controlledValueRef = toRef(props, 'value');\n        const mergedValueRef = useMergedState(controlledValueRef, uncontrolledValueRef);\n        // form-item\n        const formItem = useFormItem(props);\n        const { mergedSizeRef, mergedDisabledRef, mergedStatusRef } = formItem;\n        // states\n        const focusedRef = ref(false);\n        const hoverRef = ref(false);\n        const isComposingRef = ref(false);\n        const activatedRef = ref(false);\n        let syncSource = null;\n        // placeholder\n        const mergedPlaceholderRef = computed(() => {\n            const { placeholder, pair } = props;\n            if (pair) {\n                if (Array.isArray(placeholder)) {\n                    return placeholder;\n                }\n                else if (placeholder === undefined) {\n                    return ['', ''];\n                }\n                return [placeholder, placeholder];\n            }\n            else if (placeholder === undefined) {\n                return [localeRef.value.placeholder];\n            }\n            else {\n                return [placeholder];\n            }\n        });\n        const showPlaceholder1Ref = computed(() => {\n            const { value: isComposing } = isComposingRef;\n            const { value: mergedValue } = mergedValueRef;\n            const { value: mergedPlaceholder } = mergedPlaceholderRef;\n            return (!isComposing &&\n                (isEmptyInputValue(mergedValue) ||\n                    (Array.isArray(mergedValue) && isEmptyInputValue(mergedValue[0]))) &&\n                mergedPlaceholder[0]);\n        });\n        const showPlaceholder2Ref = computed(() => {\n            const { value: isComposing } = isComposingRef;\n            const { value: mergedValue } = mergedValueRef;\n            const { value: mergedPlaceholder } = mergedPlaceholderRef;\n            return (!isComposing &&\n                mergedPlaceholder[1] &&\n                (isEmptyInputValue(mergedValue) ||\n                    (Array.isArray(mergedValue) && isEmptyInputValue(mergedValue[1]))));\n        });\n        // focus\n        const mergedFocusRef = useMemo(() => {\n            return props.internalForceFocus || focusedRef.value;\n        });\n        // clear\n        const showClearButton = useMemo(() => {\n            if (mergedDisabledRef.value ||\n                props.readonly ||\n                !props.clearable ||\n                (!mergedFocusRef.value && !hoverRef.value)) {\n                return false;\n            }\n            const { value: mergedValue } = mergedValueRef;\n            const { value: mergedFocus } = mergedFocusRef;\n            if (props.pair) {\n                return (!!(Array.isArray(mergedValue) &&\n                    (mergedValue[0] || mergedValue[1])) &&\n                    (hoverRef.value || mergedFocus));\n            }\n            else {\n                return !!mergedValue && (hoverRef.value || mergedFocus);\n            }\n        });\n        // passwordVisible\n        const mergedShowPasswordOnRef = computed(() => {\n            const { showPasswordOn } = props;\n            if (showPasswordOn) {\n                return showPasswordOn;\n            }\n            if (props.showPasswordToggle)\n                return 'click';\n            return undefined;\n        });\n        const passwordVisibleRef = ref(false);\n        // text-decoration\n        const textDecorationStyleRef = computed(() => {\n            const { textDecoration } = props;\n            if (!textDecoration)\n                return ['', ''];\n            if (Array.isArray(textDecoration)) {\n                return textDecoration.map((v) => ({\n                    textDecoration: v\n                }));\n            }\n            return [\n                {\n                    textDecoration\n                }\n            ];\n        });\n        const textAreaScrollContainerWidthRef = ref(undefined);\n        // textarea autosize\n        const updateTextAreaStyle = () => {\n            var _a, _b;\n            if (props.type === 'textarea') {\n                const { autosize } = props;\n                if (autosize) {\n                    textAreaScrollContainerWidthRef.value =\n                        (_b = (_a = textareaScrollbarInstRef.value) === null || _a === void 0 ? void 0 : _a.$el) === null || _b === void 0 ? void 0 : _b.offsetWidth;\n                }\n                if (!textareaElRef.value)\n                    return;\n                if (typeof autosize === 'boolean')\n                    return;\n                const { paddingTop: stylePaddingTop, paddingBottom: stylePaddingBottom, lineHeight: styleLineHeight } = window.getComputedStyle(textareaElRef.value);\n                const paddingTop = Number(stylePaddingTop.slice(0, -2));\n                const paddingBottom = Number(stylePaddingBottom.slice(0, -2));\n                const lineHeight = Number(styleLineHeight.slice(0, -2));\n                const { value: textareaMirrorEl } = textareaMirrorElRef;\n                if (!textareaMirrorEl)\n                    return;\n                if (autosize.minRows) {\n                    const minRows = Math.max(autosize.minRows, 1);\n                    const styleMinHeight = `${paddingTop + paddingBottom + lineHeight * minRows}px`;\n                    textareaMirrorEl.style.minHeight = styleMinHeight;\n                }\n                if (autosize.maxRows) {\n                    const styleMaxHeight = `${paddingTop + paddingBottom + lineHeight * autosize.maxRows}px`;\n                    textareaMirrorEl.style.maxHeight = styleMaxHeight;\n                }\n            }\n        };\n        // word count\n        const maxlengthRef = computed(() => {\n            const { maxlength } = props;\n            return maxlength === undefined ? undefined : Number(maxlength);\n        });\n        onMounted(() => {\n            // sync mirror if is not pair\n            const { value } = mergedValueRef;\n            if (!Array.isArray(value)) {\n                syncMirror(value);\n            }\n        });\n        // other methods\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const vm = getCurrentInstance().proxy;\n        function doUpdateValue(value) {\n            const { onUpdateValue, 'onUpdate:value': _onUpdateValue, onInput } = props;\n            const { nTriggerFormInput } = formItem;\n            if (onUpdateValue)\n                call(onUpdateValue, value);\n            if (_onUpdateValue)\n                call(_onUpdateValue, value);\n            if (onInput)\n                call(onInput, value);\n            uncontrolledValueRef.value = value;\n            nTriggerFormInput();\n        }\n        function doChange(value) {\n            const { onChange } = props;\n            const { nTriggerFormChange } = formItem;\n            if (onChange)\n                call(onChange, value);\n            uncontrolledValueRef.value = value;\n            nTriggerFormChange();\n        }\n        function doBlur(e) {\n            const { onBlur } = props;\n            const { nTriggerFormBlur } = formItem;\n            if (onBlur)\n                call(onBlur, e);\n            nTriggerFormBlur();\n        }\n        function doFocus(e) {\n            const { onFocus } = props;\n            const { nTriggerFormFocus } = formItem;\n            if (onFocus)\n                call(onFocus, e);\n            nTriggerFormFocus();\n        }\n        function doClear(e) {\n            const { onClear } = props;\n            if (onClear)\n                call(onClear, e);\n        }\n        function doUpdateValueBlur(e) {\n            const { onInputBlur } = props;\n            if (onInputBlur)\n                call(onInputBlur, e);\n        }\n        function doUpdateValueFocus(e) {\n            const { onInputFocus } = props;\n            if (onInputFocus)\n                call(onInputFocus, e);\n        }\n        function doDeactivate() {\n            const { onDeactivate } = props;\n            if (onDeactivate)\n                call(onDeactivate);\n        }\n        function doActivate() {\n            const { onActivate } = props;\n            if (onActivate)\n                call(onActivate);\n        }\n        function doClick(e) {\n            const { onClick } = props;\n            if (onClick)\n                call(onClick, e);\n        }\n        function doWrapperFocus(e) {\n            const { onWrapperFocus } = props;\n            if (onWrapperFocus)\n                call(onWrapperFocus, e);\n        }\n        function doWrapperBlur(e) {\n            const { onWrapperBlur } = props;\n            if (onWrapperBlur)\n                call(onWrapperBlur, e);\n        }\n        // methods\n        function handleCompositionStart() {\n            isComposingRef.value = true;\n        }\n        function handleCompositionEnd(e) {\n            isComposingRef.value = false;\n            if (e.target === inputEl2Ref.value) {\n                handleInput(e, 1);\n            }\n            else {\n                handleInput(e, 0);\n            }\n        }\n        function handleInput(e, index = 0, event = 'input') {\n            const targetValue = e.target.value;\n            syncMirror(targetValue);\n            if (e instanceof InputEvent && !e.isComposing) {\n                isComposingRef.value = false;\n            }\n            if (props.type === 'textarea') {\n                const { value: textareaScrollbarInst } = textareaScrollbarInstRef;\n                if (textareaScrollbarInst) {\n                    textareaScrollbarInst.syncUnifiedContainer();\n                }\n            }\n            syncSource = targetValue;\n            if (isComposingRef.value)\n                return;\n            focusedInputCursorControl.recordCursor();\n            const isIncomingValueValid = allowInput(targetValue);\n            if (isIncomingValueValid) {\n                if (!props.pair) {\n                    event === 'input' ? doUpdateValue(targetValue) : doChange(targetValue);\n                }\n                else {\n                    let { value } = mergedValueRef;\n                    if (!Array.isArray(value)) {\n                        value = ['', ''];\n                    }\n                    else {\n                        value = [value[0], value[1]];\n                    }\n                    value[index] = targetValue;\n                    event === 'input' ? doUpdateValue(value) : doChange(value);\n                }\n            }\n            // force update to sync input's view with value\n            // if not set, after input, input value won't sync with dom input value\n            vm.$forceUpdate();\n            if (!isIncomingValueValid) {\n                void nextTick(focusedInputCursorControl.restoreCursor);\n            }\n        }\n        function allowInput(value) {\n            const { allowInput } = props;\n            if (typeof allowInput === 'function') {\n                return allowInput(value);\n            }\n            return true;\n        }\n        function handleInputBlur(e) {\n            doUpdateValueBlur(e);\n            if (e.relatedTarget === wrapperElRef.value) {\n                doDeactivate();\n            }\n            if (!(e.relatedTarget !== null &&\n                (e.relatedTarget === inputElRef.value ||\n                    e.relatedTarget === inputEl2Ref.value ||\n                    e.relatedTarget === textareaElRef.value))) {\n                activatedRef.value = false;\n            }\n            dealWithEvent(e, 'blur');\n            currentFocusedInputRef.value = null;\n        }\n        function handleInputFocus(e, index) {\n            doUpdateValueFocus(e);\n            focusedRef.value = true;\n            activatedRef.value = true;\n            doActivate();\n            dealWithEvent(e, 'focus');\n            if (index === 0) {\n                currentFocusedInputRef.value = inputElRef.value;\n            }\n            else if (index === 1) {\n                currentFocusedInputRef.value = inputEl2Ref.value;\n            }\n            else if (index === 2) {\n                currentFocusedInputRef.value = textareaElRef.value;\n            }\n        }\n        function handleWrapperBlur(e) {\n            if (props.passivelyActivated) {\n                doWrapperBlur(e);\n                dealWithEvent(e, 'blur');\n            }\n        }\n        function handleWrapperFocus(e) {\n            if (props.passivelyActivated) {\n                focusedRef.value = true;\n                doWrapperFocus(e);\n                dealWithEvent(e, 'focus');\n            }\n        }\n        function dealWithEvent(e, type) {\n            if (e.relatedTarget !== null &&\n                (e.relatedTarget === inputElRef.value ||\n                    e.relatedTarget === inputEl2Ref.value ||\n                    e.relatedTarget === textareaElRef.value ||\n                    e.relatedTarget === wrapperElRef.value)) {\n                /**\n                 * activeElement transfer inside the input, do nothing\n                 */\n            }\n            else {\n                if (type === 'focus') {\n                    doFocus(e);\n                    focusedRef.value = true;\n                }\n                else if (type === 'blur') {\n                    doBlur(e);\n                    focusedRef.value = false;\n                }\n            }\n        }\n        function handleChange(e, index) {\n            handleInput(e, index, 'change');\n        }\n        function handleClick(e) {\n            doClick(e);\n        }\n        function handleClear(e) {\n            doClear(e);\n            if (props.pair) {\n                doUpdateValue(['', '']);\n                doChange(['', '']);\n            }\n            else {\n                doUpdateValue('');\n                doChange('');\n            }\n        }\n        function handleMouseDown(e) {\n            const { onMousedown } = props;\n            if (onMousedown)\n                onMousedown(e);\n            const { tagName } = e.target;\n            if (tagName !== 'INPUT' && tagName !== 'TEXTAREA') {\n                if (props.resizable) {\n                    const { value: wrapperEl } = wrapperElRef;\n                    if (wrapperEl) {\n                        const { left, top, width, height } = wrapperEl.getBoundingClientRect();\n                        const resizeHandleSize = 14;\n                        if (left + width - resizeHandleSize < e.clientX &&\n                            e.clientX < left + width &&\n                            top + height - resizeHandleSize < e.clientY &&\n                            e.clientY < top + height) {\n                            // touching resize handle, just let it go.\n                            // resize won't take focus, maybe there is a better way to do this.\n                            // hope someone can figure out a better solution\n                            return;\n                        }\n                    }\n                }\n                e.preventDefault();\n                if (!focusedRef.value) {\n                    focus();\n                }\n            }\n        }\n        function handleMouseEnter() {\n            var _a;\n            hoverRef.value = true;\n            if (props.type === 'textarea') {\n                (_a = textareaScrollbarInstRef.value) === null || _a === void 0 ? void 0 : _a.handleMouseEnterWrapper();\n            }\n        }\n        function handleMouseLeave() {\n            var _a;\n            hoverRef.value = false;\n            if (props.type === 'textarea') {\n                (_a = textareaScrollbarInstRef.value) === null || _a === void 0 ? void 0 : _a.handleMouseLeaveWrapper();\n            }\n        }\n        function handlePasswordToggleClick() {\n            if (mergedDisabledRef.value)\n                return;\n            if (mergedShowPasswordOnRef.value !== 'click')\n                return;\n            passwordVisibleRef.value = !passwordVisibleRef.value;\n        }\n        function handlePasswordToggleMousedown(e) {\n            if (mergedDisabledRef.value)\n                return;\n            e.preventDefault();\n            const preventDefaultOnce = (e) => {\n                e.preventDefault();\n                off('mouseup', document, preventDefaultOnce);\n            };\n            on('mouseup', document, preventDefaultOnce);\n            if (mergedShowPasswordOnRef.value !== 'mousedown')\n                return;\n            passwordVisibleRef.value = true;\n            const hidePassword = () => {\n                passwordVisibleRef.value = false;\n                off('mouseup', document, hidePassword);\n            };\n            on('mouseup', document, hidePassword);\n        }\n        function handleWrapperKeydown(e) {\n            var _a;\n            (_a = props.onKeydown) === null || _a === void 0 ? void 0 : _a.call(props, e);\n            switch (e.key) {\n                case 'Escape':\n                    handleWrapperKeydownEsc();\n                    break;\n                case 'Enter':\n                    handleWrapperKeydownEnter(e);\n                    break;\n            }\n        }\n        function handleWrapperKeydownEnter(e) {\n            var _a, _b;\n            if (props.passivelyActivated) {\n                const { value: focused } = activatedRef;\n                if (focused) {\n                    if (props.internalDeactivateOnEnter) {\n                        handleWrapperKeydownEsc();\n                    }\n                    return;\n                }\n                e.preventDefault();\n                if (props.type === 'textarea') {\n                    (_a = textareaElRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n                }\n                else {\n                    (_b = inputElRef.value) === null || _b === void 0 ? void 0 : _b.focus();\n                }\n            }\n        }\n        function handleWrapperKeydownEsc() {\n            if (props.passivelyActivated) {\n                activatedRef.value = false;\n                void nextTick(() => {\n                    var _a;\n                    (_a = wrapperElRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n                });\n            }\n        }\n        function focus() {\n            var _a, _b, _c;\n            if (mergedDisabledRef.value)\n                return;\n            if (props.passivelyActivated) {\n                (_a = wrapperElRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n            }\n            else {\n                (_b = textareaElRef.value) === null || _b === void 0 ? void 0 : _b.focus();\n                (_c = inputElRef.value) === null || _c === void 0 ? void 0 : _c.focus();\n            }\n        }\n        function blur() {\n            var _a;\n            if ((_a = wrapperElRef.value) === null || _a === void 0 ? void 0 : _a.contains(document.activeElement)) {\n                ;\n                document.activeElement.blur();\n            }\n        }\n        function select() {\n            var _a, _b;\n            (_a = textareaElRef.value) === null || _a === void 0 ? void 0 : _a.select();\n            (_b = inputElRef.value) === null || _b === void 0 ? void 0 : _b.select();\n        }\n        function activate() {\n            if (mergedDisabledRef.value)\n                return;\n            if (textareaElRef.value)\n                textareaElRef.value.focus();\n            else if (inputElRef.value)\n                inputElRef.value.focus();\n        }\n        function deactivate() {\n            const { value: wrapperEl } = wrapperElRef;\n            if ((wrapperEl === null || wrapperEl === void 0 ? void 0 : wrapperEl.contains(document.activeElement)) &&\n                wrapperEl !== document.activeElement) {\n                handleWrapperKeydownEsc();\n            }\n        }\n        function scrollTo(options) {\n            if (props.type === 'textarea') {\n                const { value: textareaEl } = textareaElRef;\n                textareaEl === null || textareaEl === void 0 ? void 0 : textareaEl.scrollTo(options);\n            }\n            else {\n                const { value: inputEl } = inputElRef;\n                inputEl === null || inputEl === void 0 ? void 0 : inputEl.scrollTo(options);\n            }\n        }\n        function syncMirror(value) {\n            const { type, pair, autosize } = props;\n            if (!pair && autosize) {\n                if (type === 'textarea') {\n                    const { value: textareaMirrorEl } = textareaMirrorElRef;\n                    if (textareaMirrorEl) {\n                        textareaMirrorEl.textContent = (value !== null && value !== void 0 ? value : '') + '\\r\\n';\n                    }\n                }\n                else {\n                    const { value: inputMirrorEl } = inputMirrorElRef;\n                    if (inputMirrorEl) {\n                        if (value) {\n                            inputMirrorEl.textContent = value;\n                        }\n                        else {\n                            inputMirrorEl.innerHTML = '&nbsp;';\n                        }\n                    }\n                }\n            }\n        }\n        function handleTextAreaMirrorResize() {\n            updateTextAreaStyle();\n        }\n        const placeholderStyleRef = ref({\n            top: '0'\n        });\n        function handleTextAreaScroll(e) {\n            var _a;\n            const { scrollTop } = e.target;\n            placeholderStyleRef.value.top = `${-scrollTop}px`;\n            (_a = textareaScrollbarInstRef.value) === null || _a === void 0 ? void 0 : _a.syncUnifiedContainer();\n        }\n        let stopWatchMergedValue1 = null;\n        watchEffect(() => {\n            const { autosize, type } = props;\n            if (autosize && type === 'textarea') {\n                stopWatchMergedValue1 = watch(mergedValueRef, (value) => {\n                    if (!Array.isArray(value) && value !== syncSource) {\n                        syncMirror(value);\n                    }\n                });\n            }\n            else {\n                stopWatchMergedValue1 === null || stopWatchMergedValue1 === void 0 ? void 0 : stopWatchMergedValue1();\n            }\n        });\n        let stopWatchMergedValue2 = null;\n        watchEffect(() => {\n            if (props.type === 'textarea') {\n                stopWatchMergedValue2 = watch(mergedValueRef, (value) => {\n                    var _a;\n                    if (!Array.isArray(value) && value !== syncSource) {\n                        (_a = textareaScrollbarInstRef.value) === null || _a === void 0 ? void 0 : _a.syncUnifiedContainer();\n                    }\n                });\n            }\n            else {\n                stopWatchMergedValue2 === null || stopWatchMergedValue2 === void 0 ? void 0 : stopWatchMergedValue2();\n            }\n        });\n        provide(inputInjectionKey, {\n            mergedValueRef,\n            maxlengthRef,\n            mergedClsPrefixRef\n        });\n        const exposedProps = {\n            wrapperElRef,\n            inputElRef,\n            textareaElRef,\n            isCompositing: isComposingRef,\n            focus,\n            blur,\n            select,\n            deactivate,\n            activate,\n            scrollTo\n        };\n        const rtlEnabledRef = useRtl('Input', mergedRtlRef, mergedClsPrefixRef);\n        const cssVarsRef = computed(() => {\n            const { value: size } = mergedSizeRef;\n            const { common: { cubicBezierEaseInOut }, self: { color, borderRadius, textColor, caretColor, caretColorError, caretColorWarning, textDecorationColor, border, borderDisabled, borderHover, borderFocus, placeholderColor, placeholderColorDisabled, lineHeightTextarea, colorDisabled, colorFocus, textColorDisabled, boxShadowFocus, iconSize, colorFocusWarning, boxShadowFocusWarning, borderWarning, borderFocusWarning, borderHoverWarning, colorFocusError, boxShadowFocusError, borderError, borderFocusError, borderHoverError, clearSize, clearColor, clearColorHover, clearColorPressed, iconColor, iconColorDisabled, suffixTextColor, countTextColor, countTextColorDisabled, iconColorHover, iconColorPressed, loadingColor, loadingColorError, loadingColorWarning, [createKey('padding', size)]: padding, [createKey('fontSize', size)]: fontSize, [createKey('height', size)]: height } } = themeRef.value;\n            const { left: paddingLeft, right: paddingRight } = getPadding(padding);\n            return {\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-count-text-color': countTextColor,\n                '--n-count-text-color-disabled': countTextColorDisabled,\n                '--n-color': color,\n                '--n-font-size': fontSize,\n                '--n-border-radius': borderRadius,\n                '--n-height': height,\n                '--n-padding-left': paddingLeft,\n                '--n-padding-right': paddingRight,\n                '--n-text-color': textColor,\n                '--n-caret-color': caretColor,\n                '--n-text-decoration-color': textDecorationColor,\n                '--n-border': border,\n                '--n-border-disabled': borderDisabled,\n                '--n-border-hover': borderHover,\n                '--n-border-focus': borderFocus,\n                '--n-placeholder-color': placeholderColor,\n                '--n-placeholder-color-disabled': placeholderColorDisabled,\n                '--n-icon-size': iconSize,\n                '--n-line-height-textarea': lineHeightTextarea,\n                '--n-color-disabled': colorDisabled,\n                '--n-color-focus': colorFocus,\n                '--n-text-color-disabled': textColorDisabled,\n                '--n-box-shadow-focus': boxShadowFocus,\n                '--n-loading-color': loadingColor,\n                // form warning\n                '--n-caret-color-warning': caretColorWarning,\n                '--n-color-focus-warning': colorFocusWarning,\n                '--n-box-shadow-focus-warning': boxShadowFocusWarning,\n                '--n-border-warning': borderWarning,\n                '--n-border-focus-warning': borderFocusWarning,\n                '--n-border-hover-warning': borderHoverWarning,\n                '--n-loading-color-warning': loadingColorWarning,\n                // form error\n                '--n-caret-color-error': caretColorError,\n                '--n-color-focus-error': colorFocusError,\n                '--n-box-shadow-focus-error': boxShadowFocusError,\n                '--n-border-error': borderError,\n                '--n-border-focus-error': borderFocusError,\n                '--n-border-hover-error': borderHoverError,\n                '--n-loading-color-error': loadingColorError,\n                // clear-button\n                '--n-clear-color': clearColor,\n                '--n-clear-size': clearSize,\n                '--n-clear-color-hover': clearColorHover,\n                '--n-clear-color-pressed': clearColorPressed,\n                '--n-icon-color': iconColor,\n                '--n-icon-color-hover': iconColorHover,\n                '--n-icon-color-pressed': iconColorPressed,\n                '--n-icon-color-disabled': iconColorDisabled,\n                '--n-suffix-text-color': suffixTextColor\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('input', computed(() => {\n                const { value: size } = mergedSizeRef;\n                return size[0];\n            }), cssVarsRef, props)\n            : undefined;\n        return Object.assign(Object.assign({}, exposedProps), { \n            // DOM ref\n            wrapperElRef,\n            inputElRef,\n            inputMirrorElRef,\n            inputEl2Ref,\n            textareaElRef,\n            textareaMirrorElRef,\n            textareaScrollbarInstRef, \n            // value\n            rtlEnabled: rtlEnabledRef, uncontrolledValue: uncontrolledValueRef, mergedValue: mergedValueRef, passwordVisible: passwordVisibleRef, mergedPlaceholder: mergedPlaceholderRef, showPlaceholder1: showPlaceholder1Ref, showPlaceholder2: showPlaceholder2Ref, mergedFocus: mergedFocusRef, isComposing: isComposingRef, activated: activatedRef, showClearButton, mergedSize: mergedSizeRef, mergedDisabled: mergedDisabledRef, textDecorationStyle: textDecorationStyleRef, mergedClsPrefix: mergedClsPrefixRef, mergedBordered: mergedBorderedRef, mergedShowPasswordOn: mergedShowPasswordOnRef, placeholderStyle: placeholderStyleRef, mergedStatus: mergedStatusRef, textAreaScrollContainerWidth: textAreaScrollContainerWidthRef, \n            // methods\n            handleTextAreaScroll,\n            handleCompositionStart,\n            handleCompositionEnd,\n            handleInput,\n            handleInputBlur,\n            handleInputFocus,\n            handleWrapperBlur,\n            handleWrapperFocus,\n            handleMouseEnter,\n            handleMouseLeave,\n            handleMouseDown,\n            handleChange,\n            handleClick,\n            handleClear,\n            handlePasswordToggleClick,\n            handlePasswordToggleMousedown,\n            handleWrapperKeydown,\n            handleTextAreaMirrorResize, getTextareaScrollContainer: () => {\n                return textareaElRef.value;\n            }, mergedTheme: themeRef, cssVars: inlineThemeDisabled ? undefined : cssVarsRef, themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass, onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender });\n    },\n    render() {\n        var _a, _b;\n        const { mergedClsPrefix, mergedStatus, themeClass, type, onRender } = this;\n        const $slots = this.$slots;\n        onRender === null || onRender === void 0 ? void 0 : onRender();\n        return (h(\"div\", { ref: \"wrapperElRef\", class: [\n                `${mergedClsPrefix}-input`,\n                themeClass,\n                mergedStatus && `${mergedClsPrefix}-input--${mergedStatus}-status`,\n                {\n                    [`${mergedClsPrefix}-input--rtl`]: this.rtlEnabled,\n                    [`${mergedClsPrefix}-input--disabled`]: this.mergedDisabled,\n                    [`${mergedClsPrefix}-input--textarea`]: type === 'textarea',\n                    [`${mergedClsPrefix}-input--resizable`]: this.resizable && !this.autosize,\n                    [`${mergedClsPrefix}-input--autosize`]: this.autosize,\n                    [`${mergedClsPrefix}-input--round`]: this.round && !(type === 'textarea'),\n                    [`${mergedClsPrefix}-input--pair`]: this.pair,\n                    [`${mergedClsPrefix}-input--focus`]: this.mergedFocus,\n                    [`${mergedClsPrefix}-input--stateful`]: this.stateful\n                }\n            ], style: this.cssVars, tabindex: !this.mergedDisabled && this.passivelyActivated && !this.activated\n                ? 0\n                : undefined, onFocus: this.handleWrapperFocus, onBlur: this.handleWrapperBlur, onClick: this.handleClick, onMousedown: this.handleMouseDown, onMouseenter: this.handleMouseEnter, onMouseleave: this.handleMouseLeave, onCompositionstart: this.handleCompositionStart, onCompositionend: this.handleCompositionEnd, onKeyup: this.onKeyup, onKeydown: this.handleWrapperKeydown },\n            h(\"div\", { class: `${mergedClsPrefix}-input-wrapper` },\n                resolveWrappedSlot($slots.prefix, (children) => children && (h(\"div\", { class: `${mergedClsPrefix}-input__prefix` }, children))),\n                type === 'textarea' ? (h(NScrollbar, { ref: \"textareaScrollbarInstRef\", class: `${mergedClsPrefix}-input__textarea`, container: this.getTextareaScrollContainer, triggerDisplayManually: true, useUnifiedContainer: true, internalHoistYRail: true }, {\n                    default: () => {\n                        var _a, _b;\n                        const { textAreaScrollContainerWidth } = this;\n                        const scrollContainerWidthStyle = {\n                            width: this.autosize &&\n                                textAreaScrollContainerWidth &&\n                                `${textAreaScrollContainerWidth}px`\n                        };\n                        return (h(Fragment, null,\n                            h(\"textarea\", Object.assign({}, this.inputProps, { ref: \"textareaElRef\", class: [\n                                    `${mergedClsPrefix}-input__textarea-el`,\n                                    (_a = this.inputProps) === null || _a === void 0 ? void 0 : _a.class\n                                ], autofocus: this.autofocus, rows: Number(this.rows), placeholder: this.placeholder, value: this.mergedValue, disabled: this.mergedDisabled, maxlength: this.maxlength, minlength: this.minlength, readonly: this.readonly, tabindex: this.passivelyActivated && !this.activated\n                                    ? -1\n                                    : undefined, style: [\n                                    this.textDecorationStyle[0],\n                                    (_b = this.inputProps) === null || _b === void 0 ? void 0 : _b.style,\n                                    scrollContainerWidthStyle\n                                ], onBlur: this.handleInputBlur, onFocus: (e) => this.handleInputFocus(e, 2), onInput: this.handleInput, onChange: this.handleChange, onScroll: this.handleTextAreaScroll })),\n                            this.showPlaceholder1 ? (h(\"div\", { class: `${mergedClsPrefix}-input__placeholder`, style: [\n                                    this.placeholderStyle,\n                                    scrollContainerWidthStyle\n                                ], key: \"placeholder\" }, this.mergedPlaceholder[0])) : null,\n                            this.autosize ? (h(VResizeObserver, { onResize: this.handleTextAreaMirrorResize }, {\n                                default: () => (h(\"div\", { ref: \"textareaMirrorElRef\", class: `${mergedClsPrefix}-input__textarea-mirror`, key: \"mirror\" }))\n                            })) : null));\n                    }\n                })) : (h(\"div\", { class: `${mergedClsPrefix}-input__input` },\n                    h(\"input\", Object.assign({ type: type === 'password' &&\n                            this.mergedShowPasswordOn &&\n                            this.passwordVisible\n                            ? 'text'\n                            : type }, this.inputProps, { ref: \"inputElRef\", class: [\n                            `${mergedClsPrefix}-input__input-el`,\n                            (_a = this.inputProps) === null || _a === void 0 ? void 0 : _a.class\n                        ], style: [\n                            this.textDecorationStyle[0],\n                            (_b = this.inputProps) === null || _b === void 0 ? void 0 : _b.style\n                        ], tabindex: this.passivelyActivated && !this.activated ? -1 : undefined, placeholder: this.mergedPlaceholder[0], disabled: this.mergedDisabled, maxlength: this.maxlength, minlength: this.minlength, value: Array.isArray(this.mergedValue)\n                            ? this.mergedValue[0]\n                            : this.mergedValue, readonly: this.readonly, autofocus: this.autofocus, size: this.attrSize, onBlur: this.handleInputBlur, onFocus: (e) => this.handleInputFocus(e, 0), onInput: (e) => this.handleInput(e, 0), onChange: (e) => this.handleChange(e, 0) })),\n                    this.showPlaceholder1 ? (h(\"div\", { class: `${mergedClsPrefix}-input__placeholder` },\n                        h(\"span\", null, this.mergedPlaceholder[0]))) : null,\n                    this.autosize ? (h(\"div\", { class: `${mergedClsPrefix}-input__input-mirror`, key: \"mirror\", ref: \"inputMirrorElRef\" }, \"\\u00A0\")) : null)),\n                !this.pair &&\n                    resolveWrappedSlot($slots.suffix, (children) => {\n                        return children ||\n                            this.clearable ||\n                            this.showCount ||\n                            this.mergedShowPasswordOn ||\n                            this.loading !== undefined ? (h(\"div\", { class: `${mergedClsPrefix}-input__suffix` }, [\n                            resolveWrappedSlot($slots['clear-icon-placeholder'], (children) => {\n                                return ((this.clearable || children) && (h(NBaseClear, { clsPrefix: mergedClsPrefix, show: this.showClearButton, onClear: this.handleClear }, {\n                                    placeholder: () => children,\n                                    icon: () => { var _a, _b; return (_b = (_a = this.$slots)['clear-icon']) === null || _b === void 0 ? void 0 : _b.call(_a); }\n                                })));\n                            }),\n                            !this.internalLoadingBeforeSuffix ? children : null,\n                            this.loading !== undefined ? (h(NBaseSuffix, { clsPrefix: mergedClsPrefix, loading: this.loading, showArrow: false, showClear: false, style: this.cssVars })) : null,\n                            this.internalLoadingBeforeSuffix ? children : null,\n                            this.showCount && this.type !== 'textarea' ? (h(WordCount, null, {\n                                default: (props) => { var _a; return (_a = $slots.count) === null || _a === void 0 ? void 0 : _a.call($slots, props); }\n                            })) : null,\n                            this.mergedShowPasswordOn && this.type === 'password' ? (h(\"div\", { class: `${mergedClsPrefix}-input__eye`, onMousedown: this.handlePasswordToggleMousedown, onClick: this.handlePasswordToggleClick }, this.passwordVisible\n                                ? resolveSlot($slots['password-visible-icon'], () => [\n                                    h(NBaseIcon, { clsPrefix: mergedClsPrefix }, { default: () => h(EyeIcon, null) })\n                                ])\n                                : resolveSlot($slots['password-invisible-icon'], () => [\n                                    h(NBaseIcon, { clsPrefix: mergedClsPrefix }, { default: () => h(EyeOffIcon, null) })\n                                ]))) : null\n                        ])) : null;\n                    })),\n            this.pair ? (h(\"span\", { class: `${mergedClsPrefix}-input__separator` }, resolveSlot($slots.separator, () => [this.separator]))) : null,\n            this.pair ? (h(\"div\", { class: `${mergedClsPrefix}-input-wrapper` },\n                h(\"div\", { class: `${mergedClsPrefix}-input__input` },\n                    h(\"input\", { ref: \"inputEl2Ref\", type: this.type, class: `${mergedClsPrefix}-input__input-el`, tabindex: this.passivelyActivated && !this.activated ? -1 : undefined, placeholder: this.mergedPlaceholder[1], disabled: this.mergedDisabled, maxlength: this.maxlength, minlength: this.minlength, value: Array.isArray(this.mergedValue)\n                            ? this.mergedValue[1]\n                            : undefined, readonly: this.readonly, style: this.textDecorationStyle[1], onBlur: this.handleInputBlur, onFocus: (e) => this.handleInputFocus(e, 1), onInput: (e) => this.handleInput(e, 1), onChange: (e) => this.handleChange(e, 1) }),\n                    this.showPlaceholder2 ? (h(\"div\", { class: `${mergedClsPrefix}-input__placeholder` },\n                        h(\"span\", null, this.mergedPlaceholder[1]))) : null),\n                resolveWrappedSlot($slots.suffix, (children) => {\n                    return ((this.clearable || children) && (h(\"div\", { class: `${mergedClsPrefix}-input__suffix` }, [\n                        this.clearable && (h(NBaseClear, { clsPrefix: mergedClsPrefix, show: this.showClearButton, onClear: this.handleClear }, {\n                            icon: () => { var _a; return (_a = $slots['clear-icon']) === null || _a === void 0 ? void 0 : _a.call($slots); },\n                            placeholder: () => { var _a; return (_a = $slots['clear-icon-placeholder']) === null || _a === void 0 ? void 0 : _a.call($slots); }\n                        })),\n                        children\n                    ])));\n                }))) : null,\n            this.mergedBordered ? (h(\"div\", { class: `${mergedClsPrefix}-input__border` })) : null,\n            this.mergedBordered ? (h(\"div\", { class: `${mergedClsPrefix}-input__state-border` })) : null,\n            this.showCount && type === 'textarea' ? (h(WordCount, null, {\n                default: (props) => {\n                    var _a;\n                    const { renderCount } = this;\n                    if (renderCount) {\n                        return renderCount(props);\n                    }\n                    return (_a = $slots.count) === null || _a === void 0 ? void 0 : _a.call($slots, props);\n                }\n            })) : null));\n    }\n});\n"],"mappings":"AAAA,SAASA,CAAT,EAAYC,QAAZ,EAAsBC,eAAtB,EAAuCC,QAAvC,EAAiDC,GAAjD,EAAsDC,KAAtD,EAA6DC,SAA7D,EAAwEC,kBAAxE,EAA4FC,KAA5F,EAAmGC,WAAnG,EAAgHC,OAAhH,EAAyHC,QAAzH,QAAyI,KAAzI;AACA,SAASC,cAAT,EAAyBC,OAAzB,QAAwC,OAAxC;AACA,SAASC,UAAT,QAA2B,QAA3B;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,SAASC,GAAT,EAAcC,EAAd,QAAwB,MAAxB;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,uBAApC;AACA,SAASC,MAAT,QAAuB,uBAAvB;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,WAAhC,EAA6CC,UAA7C,QAA+D,iBAA/D;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,WAA9B,EAA2CC,SAA3C,EAAsDC,aAAtD,EAAqEC,QAArE,QAAqF,eAArF;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,WAA1B,EAAuCC,kBAAvC,EAA2DC,QAA3D,QAA2E,cAA3E;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,SAASC,iBAAT,QAAkC,aAAlC;AACA,SAASC,iBAAT,EAA4BC,SAA5B,QAA6C,SAA7C;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,IAAgBC,WAAhB,QAAmC,qBAAnC;AACA,OAAO,MAAMC,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBpB,QAAQ,CAACqB,KAA3B,CAAd,EAAiD;EAAEC,QAAQ,EAAE;IAC/EC,IAAI,EAAEC,OADyE;IAE/EC,OAAO,EAAEC;EAFsE,CAAZ;EAGpEH,IAAI,EAAE;IACLA,IAAI,EAAEI,MADD;IAELF,OAAO,EAAE;EAFJ,CAH8D;EAMpEG,WAAW,EAAE,CAACC,KAAD,EAAQF,MAAR,CANuD;EAMtCG,YAAY,EAAE;IAC3CP,IAAI,EAAE,CAACI,MAAD,EAASE,KAAT,CADqC;IAE3CJ,OAAO,EAAE;EAFkC,CANwB;EASpEM,KAAK,EAAE,CAACJ,MAAD,EAASE,KAAT,CAT6D;EAS5CG,QAAQ,EAAE;IACjCT,IAAI,EAAEC,OAD2B;IAEjCC,OAAO,EAAEC;EAFwB,CATkC;EAYpEO,IAAI,EAAEN,MAZ8D;EAYtDO,IAAI,EAAE;IACnBX,IAAI,EAAE,CAACY,MAAD,EAASR,MAAT,CADa;IAEnBF,OAAO,EAAE;EAFU,CAZgD;EAepEW,KAAK,EAAEZ,OAf6D;EAepDa,SAAS,EAAE,CAACV,MAAD,EAASQ,MAAT,CAfyC;EAevBG,SAAS,EAAE,CAACX,MAAD,EAASQ,MAAT,CAfY;EAeMI,SAAS,EAAEf,OAfjB;EAe0BgB,QAAQ,EAAE;IACvGjB,IAAI,EAAE,CAACC,OAAD,EAAUL,MAAV,CADiG;IAEvGM,OAAO,EAAE;EAF8F,CAfpC;EAkBpEgB,IAAI,EAAEjB,OAlB8D;EAkBrDkB,SAAS,EAAEf,MAlB0C;EAkBlCgB,QAAQ,EAAE;IAC3CpB,IAAI,EAAE,CAACI,MAAD,EAASH,OAAT,CADqC;IAE3CC,OAAO,EAAE;EAFkC,CAlBwB;EAqBpEmB,kBAAkB,EAAEpB,OArBgD;EAqBvCqB,cAAc,EAAElB,MArBuB;EAqBfmB,QAAQ,EAAE;IAC9DvB,IAAI,EAAEC,OADwD;IAE9DC,OAAO,EAAE;EAFqD,CArBK;EAwBpEsB,SAAS,EAAEvB,OAxByD;EAwBhDN,UAAU,EAAEC,MAxBoC;EAwB5B6B,SAAS,EAAE;IAClDzB,IAAI,EAAEC,OAD4C;IAElDC,OAAO,EAAE;EAFyC,CAxBiB;EA2BpEwB,SAAS,EAAEzB,OA3ByD;EA2BhD0B,OAAO,EAAE;IAC5B3B,IAAI,EAAEC,OADsB;IAE5BC,OAAO,EAAEC;EAFmB,CA3BuC;EA8BpEyB,UAAU,EAAEC,QA9BwD;EA8B9CC,WAAW,EAAED,QA9BiC;EA8BvBE,WAAW,EAAEF,QA9BU;EA8BAG,SAAS,EAAEH,QA9BX;EA8BqBI,OAAO,EAAEJ,QA9B9B;EA8BwCK,OAAO,EAAE,CAACL,QAAD,EAAWvB,KAAX,CA9BjD;EA8BoE6B,OAAO,EAAE,CAACN,QAAD,EAAWvB,KAAX,CA9B7E;EA8BgG8B,MAAM,EAAE,CAACP,QAAD,EAAWvB,KAAX,CA9BxG;EA8B2H+B,OAAO,EAAE,CAACR,QAAD,EAAWvB,KAAX,CA9BpI;EA8BuJgC,QAAQ,EAAE,CAACT,QAAD,EAAWvB,KAAX,CA9BjK;EA8BoLiC,OAAO,EAAE,CAACV,QAAD,EAAWvB,KAAX,CA9B7L;EA8BgNkC,MAAM,EAAEpC,MA9BxN;EA8BgO,kBAAkB,CAACyB,QAAD,EAAWvB,KAAX,CA9BlP;EA8BqQmC,aAAa,EAAE,CAACZ,QAAD,EAAWvB,KAAX,CA9BpR;;EA+BvE;EACAoC,cAAc,EAAE,CAACtC,MAAD,EAASE,KAAT,CAhCuD;EAgCtCqC,QAAQ,EAAE;IACvC3C,IAAI,EAAEY,MADiC;IAEvCV,OAAO,EAAE;EAF8B,CAhC4B;EAmCpE0C,WAAW,EAAE,CAACf,QAAD,EAAWvB,KAAX,CAnCuD;EAmCpCuC,YAAY,EAAE,CAAChB,QAAD,EAAWvB,KAAX,CAnCsB;EAmCHwC,YAAY,EAAE,CAACjB,QAAD,EAAWvB,KAAX,CAnCX;EAmC8ByC,UAAU,EAAE,CAAClB,QAAD,EAAWvB,KAAX,CAnC1C;EAmC6D0C,cAAc,EAAE,CAACnB,QAAD,EAAWvB,KAAX,CAnC7E;EAmCgG2C,aAAa,EAAE,CAACpB,QAAD,EAAWvB,KAAX,CAnC/G;EAmCkI4C,yBAAyB,EAAEjD,OAnC7J;EAmCsKkD,kBAAkB,EAAElD,OAnC1L;EAmCmMmD,2BAA2B,EAAEnD,OAnChO;;EAoCvE;EACAoD,kBAAkB,EAAEpD;AArCmD,CAAjD,CAAnB;AAsCP,eAAehD,eAAe,CAAC;EAC3BqG,IAAI,EAAE,OADqB;EAE3BxD,KAAK,EAAEH,UAFoB;;EAG3B4D,KAAK,CAACzD,KAAD,EAAQ;IACT,IAAI0D,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;MACvClG,WAAW,CAAC,MAAM;QACd,IAAIsC,KAAK,CAACuD,kBAAV,EAA8B;UAC1BlE,QAAQ,CAAC,OAAD,EAAU,mFAAV,CAAR;QACH;MACJ,CAJU,CAAX;IAKH;;IACD,MAAM;MAAEwE,kBAAF;MAAsBC,iBAAtB;MAAyCC,mBAAzC;MAA8DC;IAA9D,IAA+ElF,SAAS,CAACkB,KAAD,CAA9F;IACA,MAAMiE,QAAQ,GAAGtF,QAAQ,CAAC,OAAD,EAAU,QAAV,EAAoBgB,KAApB,EAA2BL,UAA3B,EAAuCU,KAAvC,EAA8C6D,kBAA9C,CAAzB;;IACA,IAAI1F,QAAJ,EAAc;MACVa,QAAQ,CAAC,eAAD,EAAkBY,WAAlB,EAA+BiE,kBAA/B,CAAR;IACH,CAZQ,CAaT;;;IACA,MAAMK,YAAY,GAAG7G,GAAG,CAAC,IAAD,CAAxB;IACA,MAAM8G,aAAa,GAAG9G,GAAG,CAAC,IAAD,CAAzB;IACA,MAAM+G,mBAAmB,GAAG/G,GAAG,CAAC,IAAD,CAA/B;IACA,MAAMgH,gBAAgB,GAAGhH,GAAG,CAAC,IAAD,CAA5B;IACA,MAAMiH,UAAU,GAAGjH,GAAG,CAAC,IAAD,CAAtB;IACA,MAAMkH,WAAW,GAAGlH,GAAG,CAAC,IAAD,CAAvB;IACA,MAAMmH,sBAAsB,GAAGnH,GAAG,CAAC,IAAD,CAAlC;IACA,MAAMoH,yBAAyB,GAAGhF,SAAS,CAAC+E,sBAAD,CAA3C;IACA,MAAME,wBAAwB,GAAGrH,GAAG,CAAC,IAAD,CAApC,CAtBS,CAuBT;;IACA,MAAM;MAAEsH;IAAF,IAAgB/F,SAAS,CAAC,OAAD,CAA/B,CAxBS,CAyBT;;IACA,MAAMgG,oBAAoB,GAAGvH,GAAG,CAAC2C,KAAK,CAACS,YAAP,CAAhC;IACA,MAAMoE,kBAAkB,GAAGvH,KAAK,CAAC0C,KAAD,EAAQ,OAAR,CAAhC;IACA,MAAM8E,cAAc,GAAGjH,cAAc,CAACgH,kBAAD,EAAqBD,oBAArB,CAArC,CA5BS,CA6BT;;IACA,MAAMG,QAAQ,GAAGlG,WAAW,CAACmB,KAAD,CAA5B;IACA,MAAM;MAAEgF,aAAF;MAAiBC,iBAAjB;MAAoCC;IAApC,IAAwDH,QAA9D,CA/BS,CAgCT;;IACA,MAAMI,UAAU,GAAG9H,GAAG,CAAC,KAAD,CAAtB;IACA,MAAM+H,QAAQ,GAAG/H,GAAG,CAAC,KAAD,CAApB;IACA,MAAMgI,cAAc,GAAGhI,GAAG,CAAC,KAAD,CAA1B;IACA,MAAMiI,YAAY,GAAGjI,GAAG,CAAC,KAAD,CAAxB;IACA,IAAIkI,UAAU,GAAG,IAAjB,CArCS,CAsCT;;IACA,MAAMC,oBAAoB,GAAGtI,QAAQ,CAAC,MAAM;MACxC,MAAM;QAAEqD,WAAF;QAAea;MAAf,IAAwBpB,KAA9B;;MACA,IAAIoB,IAAJ,EAAU;QACN,IAAIZ,KAAK,CAACiF,OAAN,CAAclF,WAAd,CAAJ,EAAgC;UAC5B,OAAOA,WAAP;QACH,CAFD,MAGK,IAAIA,WAAW,KAAKF,SAApB,EAA+B;UAChC,OAAO,CAAC,EAAD,EAAK,EAAL,CAAP;QACH;;QACD,OAAO,CAACE,WAAD,EAAcA,WAAd,CAAP;MACH,CARD,MASK,IAAIA,WAAW,KAAKF,SAApB,EAA+B;QAChC,OAAO,CAACsE,SAAS,CAACjE,KAAV,CAAgBH,WAAjB,CAAP;MACH,CAFI,MAGA;QACD,OAAO,CAACA,WAAD,CAAP;MACH;IACJ,CAjBoC,CAArC;IAkBA,MAAMmF,mBAAmB,GAAGxI,QAAQ,CAAC,MAAM;MACvC,MAAM;QAAEwD,KAAK,EAAEiF;MAAT,IAAyBN,cAA/B;MACA,MAAM;QAAE3E,KAAK,EAAEkF;MAAT,IAAyBd,cAA/B;MACA,MAAM;QAAEpE,KAAK,EAAEmF;MAAT,IAA+BL,oBAArC;MACA,OAAQ,CAACG,WAAD,KACHnG,iBAAiB,CAACoG,WAAD,CAAjB,IACIpF,KAAK,CAACiF,OAAN,CAAcG,WAAd,KAA8BpG,iBAAiB,CAACoG,WAAW,CAAC,CAAD,CAAZ,CAFhD,KAGJC,iBAAiB,CAAC,CAAD,CAHrB;IAIH,CARmC,CAApC;IASA,MAAMC,mBAAmB,GAAG5I,QAAQ,CAAC,MAAM;MACvC,MAAM;QAAEwD,KAAK,EAAEiF;MAAT,IAAyBN,cAA/B;MACA,MAAM;QAAE3E,KAAK,EAAEkF;MAAT,IAAyBd,cAA/B;MACA,MAAM;QAAEpE,KAAK,EAAEmF;MAAT,IAA+BL,oBAArC;MACA,OAAQ,CAACG,WAAD,IACJE,iBAAiB,CAAC,CAAD,CADb,KAEHrG,iBAAiB,CAACoG,WAAD,CAAjB,IACIpF,KAAK,CAACiF,OAAN,CAAcG,WAAd,KAA8BpG,iBAAiB,CAACoG,WAAW,CAAC,CAAD,CAAZ,CAHhD,CAAR;IAIH,CARmC,CAApC,CAlES,CA2ET;;IACA,MAAMG,cAAc,GAAGjI,OAAO,CAAC,MAAM;MACjC,OAAOkC,KAAK,CAACqD,kBAAN,IAA4B8B,UAAU,CAACzE,KAA9C;IACH,CAF6B,CAA9B,CA5ES,CA+ET;;IACA,MAAMsF,eAAe,GAAGlI,OAAO,CAAC,MAAM;MAClC,IAAImH,iBAAiB,CAACvE,KAAlB,IACAV,KAAK,CAACsB,QADN,IAEA,CAACtB,KAAK,CAACkB,SAFP,IAGC,CAAC6E,cAAc,CAACrF,KAAhB,IAAyB,CAAC0E,QAAQ,CAAC1E,KAHxC,EAGgD;QAC5C,OAAO,KAAP;MACH;;MACD,MAAM;QAAEA,KAAK,EAAEkF;MAAT,IAAyBd,cAA/B;MACA,MAAM;QAAEpE,KAAK,EAAEuF;MAAT,IAAyBF,cAA/B;;MACA,IAAI/F,KAAK,CAACoB,IAAV,EAAgB;QACZ,OAAQ,CAAC,EAAEZ,KAAK,CAACiF,OAAN,CAAcG,WAAd,MACNA,WAAW,CAAC,CAAD,CAAX,IAAkBA,WAAW,CAAC,CAAD,CADvB,CAAF,CAAD,KAEHR,QAAQ,CAAC1E,KAAT,IAAkBuF,WAFf,CAAR;MAGH,CAJD,MAKK;QACD,OAAO,CAAC,CAACL,WAAF,KAAkBR,QAAQ,CAAC1E,KAAT,IAAkBuF,WAApC,CAAP;MACH;IACJ,CAjB8B,CAA/B,CAhFS,CAkGT;;IACA,MAAMC,uBAAuB,GAAGhJ,QAAQ,CAAC,MAAM;MAC3C,MAAM;QAAEsE;MAAF,IAAqBxB,KAA3B;;MACA,IAAIwB,cAAJ,EAAoB;QAChB,OAAOA,cAAP;MACH;;MACD,IAAIxB,KAAK,CAACuD,kBAAV,EACI,OAAO,OAAP;MACJ,OAAOlD,SAAP;IACH,CARuC,CAAxC;IASA,MAAM8F,kBAAkB,GAAG9I,GAAG,CAAC,KAAD,CAA9B,CA5GS,CA6GT;;IACA,MAAM+I,sBAAsB,GAAGlJ,QAAQ,CAAC,MAAM;MAC1C,MAAM;QAAE0F;MAAF,IAAqB5C,KAA3B;MACA,IAAI,CAAC4C,cAAL,EACI,OAAO,CAAC,EAAD,EAAK,EAAL,CAAP;;MACJ,IAAIpC,KAAK,CAACiF,OAAN,CAAc7C,cAAd,CAAJ,EAAmC;QAC/B,OAAOA,cAAc,CAACyD,GAAf,CAAoBC,CAAD,KAAQ;UAC9B1D,cAAc,EAAE0D;QADc,CAAR,CAAnB,CAAP;MAGH;;MACD,OAAO,CACH;QACI1D;MADJ,CADG,CAAP;IAKH,CAdsC,CAAvC;IAeA,MAAM2D,+BAA+B,GAAGlJ,GAAG,CAACgD,SAAD,CAA3C,CA7HS,CA8HT;;IACA,MAAMmG,mBAAmB,GAAG,MAAM;MAC9B,IAAIC,EAAJ,EAAQC,EAAR;;MACA,IAAI1G,KAAK,CAACE,IAAN,KAAe,UAAnB,EAA+B;QAC3B,MAAM;UAAEiB;QAAF,IAAenB,KAArB;;QACA,IAAImB,QAAJ,EAAc;UACVoF,+BAA+B,CAAC7F,KAAhC,GACI,CAACgG,EAAE,GAAG,CAACD,EAAE,GAAG/B,wBAAwB,CAAChE,KAA/B,MAA0C,IAA1C,IAAkD+F,EAAE,KAAK,KAAK,CAA9D,GAAkE,KAAK,CAAvE,GAA2EA,EAAE,CAACE,GAApF,MAA6F,IAA7F,IAAqGD,EAAE,KAAK,KAAK,CAAjH,GAAqH,KAAK,CAA1H,GAA8HA,EAAE,CAACE,WADrI;QAEH;;QACD,IAAI,CAACzC,aAAa,CAACzD,KAAnB,EACI;QACJ,IAAI,OAAOS,QAAP,KAAoB,SAAxB,EACI;QACJ,MAAM;UAAE0F,UAAU,EAAEC,eAAd;UAA+BC,aAAa,EAAEC,kBAA9C;UAAkEC,UAAU,EAAEC;QAA9E,IAAkGC,MAAM,CAACC,gBAAP,CAAwBjD,aAAa,CAACzD,KAAtC,CAAxG;QACA,MAAMmG,UAAU,GAAG/F,MAAM,CAACgG,eAAe,CAACO,KAAhB,CAAsB,CAAtB,EAAyB,CAAC,CAA1B,CAAD,CAAzB;QACA,MAAMN,aAAa,GAAGjG,MAAM,CAACkG,kBAAkB,CAACK,KAAnB,CAAyB,CAAzB,EAA4B,CAAC,CAA7B,CAAD,CAA5B;QACA,MAAMJ,UAAU,GAAGnG,MAAM,CAACoG,eAAe,CAACG,KAAhB,CAAsB,CAAtB,EAAyB,CAAC,CAA1B,CAAD,CAAzB;QACA,MAAM;UAAE3G,KAAK,EAAE4G;QAAT,IAA8BlD,mBAApC;QACA,IAAI,CAACkD,gBAAL,EACI;;QACJ,IAAInG,QAAQ,CAACoG,OAAb,EAAsB;UAClB,MAAMA,OAAO,GAAGC,IAAI,CAACC,GAAL,CAAStG,QAAQ,CAACoG,OAAlB,EAA2B,CAA3B,CAAhB;UACA,MAAMG,cAAc,GAAI,GAAEb,UAAU,GAAGE,aAAb,GAA6BE,UAAU,GAAGM,OAAQ,IAA5E;UACAD,gBAAgB,CAAC3H,KAAjB,CAAuBgI,SAAvB,GAAmCD,cAAnC;QACH;;QACD,IAAIvG,QAAQ,CAACyG,OAAb,EAAsB;UAClB,MAAMC,cAAc,GAAI,GAAEhB,UAAU,GAAGE,aAAb,GAA6BE,UAAU,GAAG9F,QAAQ,CAACyG,OAAQ,IAArF;UACAN,gBAAgB,CAAC3H,KAAjB,CAAuBmI,SAAvB,GAAmCD,cAAnC;QACH;MACJ;IACJ,CA7BD,CA/HS,CA6JT;;;IACA,MAAME,YAAY,GAAG7K,QAAQ,CAAC,MAAM;MAChC,MAAM;QAAE+D;MAAF,IAAgBjB,KAAtB;MACA,OAAOiB,SAAS,KAAKZ,SAAd,GAA0BA,SAA1B,GAAsCS,MAAM,CAACG,SAAD,CAAnD;IACH,CAH4B,CAA7B;IAIA1D,SAAS,CAAC,MAAM;MACZ;MACA,MAAM;QAAEmD;MAAF,IAAYoE,cAAlB;;MACA,IAAI,CAACtE,KAAK,CAACiF,OAAN,CAAc/E,KAAd,CAAL,EAA2B;QACvBsH,UAAU,CAACtH,KAAD,CAAV;MACH;IACJ,CANQ,CAAT,CAlKS,CAyKT;IACA;;IACA,MAAMuH,EAAE,GAAGzK,kBAAkB,GAAG0K,KAAhC;;IACA,SAASC,aAAT,CAAuBzH,KAAvB,EAA8B;MAC1B,MAAM;QAAEiC,aAAF;QAAiB,kBAAkByF,cAAnC;QAAmDhG;MAAnD,IAA+DpC,KAArE;MACA,MAAM;QAAEqI;MAAF,IAAwBtD,QAA9B;MACA,IAAIpC,aAAJ,EACI1D,IAAI,CAAC0D,aAAD,EAAgBjC,KAAhB,CAAJ;MACJ,IAAI0H,cAAJ,EACInJ,IAAI,CAACmJ,cAAD,EAAiB1H,KAAjB,CAAJ;MACJ,IAAI0B,OAAJ,EACInD,IAAI,CAACmD,OAAD,EAAU1B,KAAV,CAAJ;MACJkE,oBAAoB,CAAClE,KAArB,GAA6BA,KAA7B;MACA2H,iBAAiB;IACpB;;IACD,SAASC,QAAT,CAAkB5H,KAAlB,EAAyB;MACrB,MAAM;QAAE8B;MAAF,IAAexC,KAArB;MACA,MAAM;QAAEuI;MAAF,IAAyBxD,QAA/B;MACA,IAAIvC,QAAJ,EACIvD,IAAI,CAACuD,QAAD,EAAW9B,KAAX,CAAJ;MACJkE,oBAAoB,CAAClE,KAArB,GAA6BA,KAA7B;MACA6H,kBAAkB;IACrB;;IACD,SAASC,MAAT,CAAgBC,CAAhB,EAAmB;MACf,MAAM;QAAEnG;MAAF,IAAatC,KAAnB;MACA,MAAM;QAAE0I;MAAF,IAAuB3D,QAA7B;MACA,IAAIzC,MAAJ,EACIrD,IAAI,CAACqD,MAAD,EAASmG,CAAT,CAAJ;MACJC,gBAAgB;IACnB;;IACD,SAASC,OAAT,CAAiBF,CAAjB,EAAoB;MAChB,MAAM;QAAEpG;MAAF,IAAcrC,KAApB;MACA,MAAM;QAAE4I;MAAF,IAAwB7D,QAA9B;MACA,IAAI1C,OAAJ,EACIpD,IAAI,CAACoD,OAAD,EAAUoG,CAAV,CAAJ;MACJG,iBAAiB;IACpB;;IACD,SAASC,OAAT,CAAiBJ,CAAjB,EAAoB;MAChB,MAAM;QAAEhG;MAAF,IAAczC,KAApB;MACA,IAAIyC,OAAJ,EACIxD,IAAI,CAACwD,OAAD,EAAUgG,CAAV,CAAJ;IACP;;IACD,SAASK,iBAAT,CAA2BL,CAA3B,EAA8B;MAC1B,MAAM;QAAE3F;MAAF,IAAkB9C,KAAxB;MACA,IAAI8C,WAAJ,EACI7D,IAAI,CAAC6D,WAAD,EAAc2F,CAAd,CAAJ;IACP;;IACD,SAASM,kBAAT,CAA4BN,CAA5B,EAA+B;MAC3B,MAAM;QAAE1F;MAAF,IAAmB/C,KAAzB;MACA,IAAI+C,YAAJ,EACI9D,IAAI,CAAC8D,YAAD,EAAe0F,CAAf,CAAJ;IACP;;IACD,SAASO,YAAT,GAAwB;MACpB,MAAM;QAAEhG;MAAF,IAAmBhD,KAAzB;MACA,IAAIgD,YAAJ,EACI/D,IAAI,CAAC+D,YAAD,CAAJ;IACP;;IACD,SAASiG,UAAT,GAAsB;MAClB,MAAM;QAAEhG;MAAF,IAAiBjD,KAAvB;MACA,IAAIiD,UAAJ,EACIhE,IAAI,CAACgE,UAAD,CAAJ;IACP;;IACD,SAASiG,OAAT,CAAiBT,CAAjB,EAAoB;MAChB,MAAM;QAAElG;MAAF,IAAcvC,KAApB;MACA,IAAIuC,OAAJ,EACItD,IAAI,CAACsD,OAAD,EAAUkG,CAAV,CAAJ;IACP;;IACD,SAASU,cAAT,CAAwBV,CAAxB,EAA2B;MACvB,MAAM;QAAEvF;MAAF,IAAqBlD,KAA3B;MACA,IAAIkD,cAAJ,EACIjE,IAAI,CAACiE,cAAD,EAAiBuF,CAAjB,CAAJ;IACP;;IACD,SAASW,aAAT,CAAuBX,CAAvB,EAA0B;MACtB,MAAM;QAAEtF;MAAF,IAAoBnD,KAA1B;MACA,IAAImD,aAAJ,EACIlE,IAAI,CAACkE,aAAD,EAAgBsF,CAAhB,CAAJ;IACP,CArPQ,CAsPT;;;IACA,SAASY,sBAAT,GAAkC;MAC9BhE,cAAc,CAAC3E,KAAf,GAAuB,IAAvB;IACH;;IACD,SAAS4I,oBAAT,CAA8Bb,CAA9B,EAAiC;MAC7BpD,cAAc,CAAC3E,KAAf,GAAuB,KAAvB;;MACA,IAAI+H,CAAC,CAACc,MAAF,KAAahF,WAAW,CAAC7D,KAA7B,EAAoC;QAChC8I,WAAW,CAACf,CAAD,EAAI,CAAJ,CAAX;MACH,CAFD,MAGK;QACDe,WAAW,CAACf,CAAD,EAAI,CAAJ,CAAX;MACH;IACJ;;IACD,SAASe,WAAT,CAAqBf,CAArB,EAAwBgB,KAAK,GAAG,CAAhC,EAAmCC,KAAK,GAAG,OAA3C,EAAoD;MAChD,MAAMC,WAAW,GAAGlB,CAAC,CAACc,MAAF,CAAS7I,KAA7B;MACAsH,UAAU,CAAC2B,WAAD,CAAV;;MACA,IAAIlB,CAAC,YAAYmB,UAAb,IAA2B,CAACnB,CAAC,CAAC9C,WAAlC,EAA+C;QAC3CN,cAAc,CAAC3E,KAAf,GAAuB,KAAvB;MACH;;MACD,IAAIV,KAAK,CAACE,IAAN,KAAe,UAAnB,EAA+B;QAC3B,MAAM;UAAEQ,KAAK,EAAEmJ;QAAT,IAAmCnF,wBAAzC;;QACA,IAAImF,qBAAJ,EAA2B;UACvBA,qBAAqB,CAACC,oBAAtB;QACH;MACJ;;MACDvE,UAAU,GAAGoE,WAAb;MACA,IAAItE,cAAc,CAAC3E,KAAnB,EACI;MACJ+D,yBAAyB,CAACsF,YAA1B;MACA,MAAMC,oBAAoB,GAAGlI,UAAU,CAAC6H,WAAD,CAAvC;;MACA,IAAIK,oBAAJ,EAA0B;QACtB,IAAI,CAAChK,KAAK,CAACoB,IAAX,EAAiB;UACbsI,KAAK,KAAK,OAAV,GAAoBvB,aAAa,CAACwB,WAAD,CAAjC,GAAiDrB,QAAQ,CAACqB,WAAD,CAAzD;QACH,CAFD,MAGK;UACD,IAAI;YAAEjJ;UAAF,IAAYoE,cAAhB;;UACA,IAAI,CAACtE,KAAK,CAACiF,OAAN,CAAc/E,KAAd,CAAL,EAA2B;YACvBA,KAAK,GAAG,CAAC,EAAD,EAAK,EAAL,CAAR;UACH,CAFD,MAGK;YACDA,KAAK,GAAG,CAACA,KAAK,CAAC,CAAD,CAAN,EAAWA,KAAK,CAAC,CAAD,CAAhB,CAAR;UACH;;UACDA,KAAK,CAAC+I,KAAD,CAAL,GAAeE,WAAf;UACAD,KAAK,KAAK,OAAV,GAAoBvB,aAAa,CAACzH,KAAD,CAAjC,GAA2C4H,QAAQ,CAAC5H,KAAD,CAAnD;QACH;MACJ,CAhC+C,CAiChD;MACA;;;MACAuH,EAAE,CAACgC,YAAH;;MACA,IAAI,CAACD,oBAAL,EAA2B;QACvB,KAAK5M,QAAQ,CAACqH,yBAAyB,CAACyF,aAA3B,CAAb;MACH;IACJ;;IACD,SAASpI,UAAT,CAAoBpB,KAApB,EAA2B;MACvB,MAAM;QAAEoB;MAAF,IAAiB9B,KAAvB;;MACA,IAAI,OAAO8B,UAAP,KAAsB,UAA1B,EAAsC;QAClC,OAAOA,UAAU,CAACpB,KAAD,CAAjB;MACH;;MACD,OAAO,IAAP;IACH;;IACD,SAASyJ,eAAT,CAAyB1B,CAAzB,EAA4B;MACxBK,iBAAiB,CAACL,CAAD,CAAjB;;MACA,IAAIA,CAAC,CAAC2B,aAAF,KAAoBlG,YAAY,CAACxD,KAArC,EAA4C;QACxCsI,YAAY;MACf;;MACD,IAAI,EAAEP,CAAC,CAAC2B,aAAF,KAAoB,IAApB,KACD3B,CAAC,CAAC2B,aAAF,KAAoB9F,UAAU,CAAC5D,KAA/B,IACG+H,CAAC,CAAC2B,aAAF,KAAoB7F,WAAW,CAAC7D,KADnC,IAEG+H,CAAC,CAAC2B,aAAF,KAAoBjG,aAAa,CAACzD,KAHpC,CAAF,CAAJ,EAGmD;QAC/C4E,YAAY,CAAC5E,KAAb,GAAqB,KAArB;MACH;;MACD2J,aAAa,CAAC5B,CAAD,EAAI,MAAJ,CAAb;MACAjE,sBAAsB,CAAC9D,KAAvB,GAA+B,IAA/B;IACH;;IACD,SAAS4J,gBAAT,CAA0B7B,CAA1B,EAA6BgB,KAA7B,EAAoC;MAChCV,kBAAkB,CAACN,CAAD,CAAlB;MACAtD,UAAU,CAACzE,KAAX,GAAmB,IAAnB;MACA4E,YAAY,CAAC5E,KAAb,GAAqB,IAArB;MACAuI,UAAU;MACVoB,aAAa,CAAC5B,CAAD,EAAI,OAAJ,CAAb;;MACA,IAAIgB,KAAK,KAAK,CAAd,EAAiB;QACbjF,sBAAsB,CAAC9D,KAAvB,GAA+B4D,UAAU,CAAC5D,KAA1C;MACH,CAFD,MAGK,IAAI+I,KAAK,KAAK,CAAd,EAAiB;QAClBjF,sBAAsB,CAAC9D,KAAvB,GAA+B6D,WAAW,CAAC7D,KAA3C;MACH,CAFI,MAGA,IAAI+I,KAAK,KAAK,CAAd,EAAiB;QAClBjF,sBAAsB,CAAC9D,KAAvB,GAA+ByD,aAAa,CAACzD,KAA7C;MACH;IACJ;;IACD,SAAS6J,iBAAT,CAA2B9B,CAA3B,EAA8B;MAC1B,IAAIzI,KAAK,CAACuB,kBAAV,EAA8B;QAC1B6H,aAAa,CAACX,CAAD,CAAb;QACA4B,aAAa,CAAC5B,CAAD,EAAI,MAAJ,CAAb;MACH;IACJ;;IACD,SAAS+B,kBAAT,CAA4B/B,CAA5B,EAA+B;MAC3B,IAAIzI,KAAK,CAACuB,kBAAV,EAA8B;QAC1B4D,UAAU,CAACzE,KAAX,GAAmB,IAAnB;QACAyI,cAAc,CAACV,CAAD,CAAd;QACA4B,aAAa,CAAC5B,CAAD,EAAI,OAAJ,CAAb;MACH;IACJ;;IACD,SAAS4B,aAAT,CAAuB5B,CAAvB,EAA0BvI,IAA1B,EAAgC;MAC5B,IAAIuI,CAAC,CAAC2B,aAAF,KAAoB,IAApB,KACC3B,CAAC,CAAC2B,aAAF,KAAoB9F,UAAU,CAAC5D,KAA/B,IACG+H,CAAC,CAAC2B,aAAF,KAAoB7F,WAAW,CAAC7D,KADnC,IAEG+H,CAAC,CAAC2B,aAAF,KAAoBjG,aAAa,CAACzD,KAFrC,IAGG+H,CAAC,CAAC2B,aAAF,KAAoBlG,YAAY,CAACxD,KAJrC,CAAJ,EAIiD;QAC7C;AAChB;AACA;MACa,CARD,MASK;QACD,IAAIR,IAAI,KAAK,OAAb,EAAsB;UAClByI,OAAO,CAACF,CAAD,CAAP;UACAtD,UAAU,CAACzE,KAAX,GAAmB,IAAnB;QACH,CAHD,MAIK,IAAIR,IAAI,KAAK,MAAb,EAAqB;UACtBsI,MAAM,CAACC,CAAD,CAAN;UACAtD,UAAU,CAACzE,KAAX,GAAmB,KAAnB;QACH;MACJ;IACJ;;IACD,SAAS+J,YAAT,CAAsBhC,CAAtB,EAAyBgB,KAAzB,EAAgC;MAC5BD,WAAW,CAACf,CAAD,EAAIgB,KAAJ,EAAW,QAAX,CAAX;IACH;;IACD,SAASiB,WAAT,CAAqBjC,CAArB,EAAwB;MACpBS,OAAO,CAACT,CAAD,CAAP;IACH;;IACD,SAASkC,WAAT,CAAqBlC,CAArB,EAAwB;MACpBI,OAAO,CAACJ,CAAD,CAAP;;MACA,IAAIzI,KAAK,CAACoB,IAAV,EAAgB;QACZ+G,aAAa,CAAC,CAAC,EAAD,EAAK,EAAL,CAAD,CAAb;QACAG,QAAQ,CAAC,CAAC,EAAD,EAAK,EAAL,CAAD,CAAR;MACH,CAHD,MAIK;QACDH,aAAa,CAAC,EAAD,CAAb;QACAG,QAAQ,CAAC,EAAD,CAAR;MACH;IACJ;;IACD,SAASsC,eAAT,CAAyBnC,CAAzB,EAA4B;MACxB,MAAM;QAAExG;MAAF,IAAkBjC,KAAxB;MACA,IAAIiC,WAAJ,EACIA,WAAW,CAACwG,CAAD,CAAX;MACJ,MAAM;QAAEoC;MAAF,IAAcpC,CAAC,CAACc,MAAtB;;MACA,IAAIsB,OAAO,KAAK,OAAZ,IAAuBA,OAAO,KAAK,UAAvC,EAAmD;QAC/C,IAAI7K,KAAK,CAAC2B,SAAV,EAAqB;UACjB,MAAM;YAAEjB,KAAK,EAAEoK;UAAT,IAAuB5G,YAA7B;;UACA,IAAI4G,SAAJ,EAAe;YACX,MAAM;cAAEC,IAAF;cAAQC,GAAR;cAAaC,KAAb;cAAoBC;YAApB,IAA+BJ,SAAS,CAACK,qBAAV,EAArC;YACA,MAAMC,gBAAgB,GAAG,EAAzB;;YACA,IAAIL,IAAI,GAAGE,KAAP,GAAeG,gBAAf,GAAkC3C,CAAC,CAAC4C,OAApC,IACA5C,CAAC,CAAC4C,OAAF,GAAYN,IAAI,GAAGE,KADnB,IAEAD,GAAG,GAAGE,MAAN,GAAeE,gBAAf,GAAkC3C,CAAC,CAAC6C,OAFpC,IAGA7C,CAAC,CAAC6C,OAAF,GAAYN,GAAG,GAAGE,MAHtB,EAG8B;cAC1B;cACA;cACA;cACA;YACH;UACJ;QACJ;;QACDzC,CAAC,CAAC8C,cAAF;;QACA,IAAI,CAACpG,UAAU,CAACzE,KAAhB,EAAuB;UACnB8K,KAAK;QACR;MACJ;IACJ;;IACD,SAASC,gBAAT,GAA4B;MACxB,IAAIhF,EAAJ;;MACArB,QAAQ,CAAC1E,KAAT,GAAiB,IAAjB;;MACA,IAAIV,KAAK,CAACE,IAAN,KAAe,UAAnB,EAA+B;QAC3B,CAACuG,EAAE,GAAG/B,wBAAwB,CAAChE,KAA/B,MAA0C,IAA1C,IAAkD+F,EAAE,KAAK,KAAK,CAA9D,GAAkE,KAAK,CAAvE,GAA2EA,EAAE,CAACiF,uBAAH,EAA3E;MACH;IACJ;;IACD,SAASC,gBAAT,GAA4B;MACxB,IAAIlF,EAAJ;;MACArB,QAAQ,CAAC1E,KAAT,GAAiB,KAAjB;;MACA,IAAIV,KAAK,CAACE,IAAN,KAAe,UAAnB,EAA+B;QAC3B,CAACuG,EAAE,GAAG/B,wBAAwB,CAAChE,KAA/B,MAA0C,IAA1C,IAAkD+F,EAAE,KAAK,KAAK,CAA9D,GAAkE,KAAK,CAAvE,GAA2EA,EAAE,CAACmF,uBAAH,EAA3E;MACH;IACJ;;IACD,SAASC,yBAAT,GAAqC;MACjC,IAAI5G,iBAAiB,CAACvE,KAAtB,EACI;MACJ,IAAIwF,uBAAuB,CAACxF,KAAxB,KAAkC,OAAtC,EACI;MACJyF,kBAAkB,CAACzF,KAAnB,GAA2B,CAACyF,kBAAkB,CAACzF,KAA/C;IACH;;IACD,SAASoL,6BAAT,CAAuCrD,CAAvC,EAA0C;MACtC,IAAIxD,iBAAiB,CAACvE,KAAtB,EACI;MACJ+H,CAAC,CAAC8C,cAAF;;MACA,MAAMQ,kBAAkB,GAAItD,CAAD,IAAO;QAC9BA,CAAC,CAAC8C,cAAF;QACAtN,GAAG,CAAC,SAAD,EAAY+N,QAAZ,EAAsBD,kBAAtB,CAAH;MACH,CAHD;;MAIA7N,EAAE,CAAC,SAAD,EAAY8N,QAAZ,EAAsBD,kBAAtB,CAAF;MACA,IAAI7F,uBAAuB,CAACxF,KAAxB,KAAkC,WAAtC,EACI;MACJyF,kBAAkB,CAACzF,KAAnB,GAA2B,IAA3B;;MACA,MAAMuL,YAAY,GAAG,MAAM;QACvB9F,kBAAkB,CAACzF,KAAnB,GAA2B,KAA3B;QACAzC,GAAG,CAAC,SAAD,EAAY+N,QAAZ,EAAsBC,YAAtB,CAAH;MACH,CAHD;;MAIA/N,EAAE,CAAC,SAAD,EAAY8N,QAAZ,EAAsBC,YAAtB,CAAF;IACH;;IACD,SAASC,oBAAT,CAA8BzD,CAA9B,EAAiC;MAC7B,IAAIhC,EAAJ;;MACA,CAACA,EAAE,GAAGzG,KAAK,CAACkC,SAAZ,MAA2B,IAA3B,IAAmCuE,EAAE,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,EAAE,CAACxH,IAAH,CAAQe,KAAR,EAAeyI,CAAf,CAA5D;;MACA,QAAQA,CAAC,CAAC0D,GAAV;QACI,KAAK,QAAL;UACIC,uBAAuB;UACvB;;QACJ,KAAK,OAAL;UACIC,yBAAyB,CAAC5D,CAAD,CAAzB;UACA;MANR;IAQH;;IACD,SAAS4D,yBAAT,CAAmC5D,CAAnC,EAAsC;MAClC,IAAIhC,EAAJ,EAAQC,EAAR;;MACA,IAAI1G,KAAK,CAACuB,kBAAV,EAA8B;QAC1B,MAAM;UAAEb,KAAK,EAAE4L;QAAT,IAAqBhH,YAA3B;;QACA,IAAIgH,OAAJ,EAAa;UACT,IAAItM,KAAK,CAACoD,yBAAV,EAAqC;YACjCgJ,uBAAuB;UAC1B;;UACD;QACH;;QACD3D,CAAC,CAAC8C,cAAF;;QACA,IAAIvL,KAAK,CAACE,IAAN,KAAe,UAAnB,EAA+B;UAC3B,CAACuG,EAAE,GAAGtC,aAAa,CAACzD,KAApB,MAA+B,IAA/B,IAAuC+F,EAAE,KAAK,KAAK,CAAnD,GAAuD,KAAK,CAA5D,GAAgEA,EAAE,CAAC+E,KAAH,EAAhE;QACH,CAFD,MAGK;UACD,CAAC9E,EAAE,GAAGpC,UAAU,CAAC5D,KAAjB,MAA4B,IAA5B,IAAoCgG,EAAE,KAAK,KAAK,CAAhD,GAAoD,KAAK,CAAzD,GAA6DA,EAAE,CAAC8E,KAAH,EAA7D;QACH;MACJ;IACJ;;IACD,SAASY,uBAAT,GAAmC;MAC/B,IAAIpM,KAAK,CAACuB,kBAAV,EAA8B;QAC1B+D,YAAY,CAAC5E,KAAb,GAAqB,KAArB;QACA,KAAKtD,QAAQ,CAAC,MAAM;UAChB,IAAIqJ,EAAJ;;UACA,CAACA,EAAE,GAAGvC,YAAY,CAACxD,KAAnB,MAA8B,IAA9B,IAAsC+F,EAAE,KAAK,KAAK,CAAlD,GAAsD,KAAK,CAA3D,GAA+DA,EAAE,CAAC+E,KAAH,EAA/D;QACH,CAHY,CAAb;MAIH;IACJ;;IACD,SAASA,KAAT,GAAiB;MACb,IAAI/E,EAAJ,EAAQC,EAAR,EAAY6F,EAAZ;;MACA,IAAItH,iBAAiB,CAACvE,KAAtB,EACI;;MACJ,IAAIV,KAAK,CAACuB,kBAAV,EAA8B;QAC1B,CAACkF,EAAE,GAAGvC,YAAY,CAACxD,KAAnB,MAA8B,IAA9B,IAAsC+F,EAAE,KAAK,KAAK,CAAlD,GAAsD,KAAK,CAA3D,GAA+DA,EAAE,CAAC+E,KAAH,EAA/D;MACH,CAFD,MAGK;QACD,CAAC9E,EAAE,GAAGvC,aAAa,CAACzD,KAApB,MAA+B,IAA/B,IAAuCgG,EAAE,KAAK,KAAK,CAAnD,GAAuD,KAAK,CAA5D,GAAgEA,EAAE,CAAC8E,KAAH,EAAhE;QACA,CAACe,EAAE,GAAGjI,UAAU,CAAC5D,KAAjB,MAA4B,IAA5B,IAAoC6L,EAAE,KAAK,KAAK,CAAhD,GAAoD,KAAK,CAAzD,GAA6DA,EAAE,CAACf,KAAH,EAA7D;MACH;IACJ;;IACD,SAASgB,IAAT,GAAgB;MACZ,IAAI/F,EAAJ;;MACA,IAAI,CAACA,EAAE,GAAGvC,YAAY,CAACxD,KAAnB,MAA8B,IAA9B,IAAsC+F,EAAE,KAAK,KAAK,CAAlD,GAAsD,KAAK,CAA3D,GAA+DA,EAAE,CAACgG,QAAH,CAAYT,QAAQ,CAACU,aAArB,CAAnE,EAAwG;QACpG;QACAV,QAAQ,CAACU,aAAT,CAAuBF,IAAvB;MACH;IACJ;;IACD,SAASG,MAAT,GAAkB;MACd,IAAIlG,EAAJ,EAAQC,EAAR;;MACA,CAACD,EAAE,GAAGtC,aAAa,CAACzD,KAApB,MAA+B,IAA/B,IAAuC+F,EAAE,KAAK,KAAK,CAAnD,GAAuD,KAAK,CAA5D,GAAgEA,EAAE,CAACkG,MAAH,EAAhE;MACA,CAACjG,EAAE,GAAGpC,UAAU,CAAC5D,KAAjB,MAA4B,IAA5B,IAAoCgG,EAAE,KAAK,KAAK,CAAhD,GAAoD,KAAK,CAAzD,GAA6DA,EAAE,CAACiG,MAAH,EAA7D;IACH;;IACD,SAASC,QAAT,GAAoB;MAChB,IAAI3H,iBAAiB,CAACvE,KAAtB,EACI;MACJ,IAAIyD,aAAa,CAACzD,KAAlB,EACIyD,aAAa,CAACzD,KAAd,CAAoB8K,KAApB,GADJ,KAEK,IAAIlH,UAAU,CAAC5D,KAAf,EACD4D,UAAU,CAAC5D,KAAX,CAAiB8K,KAAjB;IACP;;IACD,SAASqB,UAAT,GAAsB;MAClB,MAAM;QAAEnM,KAAK,EAAEoK;MAAT,IAAuB5G,YAA7B;;MACA,IAAI,CAAC4G,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAK,KAAK,CAAzC,GAA6C,KAAK,CAAlD,GAAsDA,SAAS,CAAC2B,QAAV,CAAmBT,QAAQ,CAACU,aAA5B,CAAvD,KACA5B,SAAS,KAAKkB,QAAQ,CAACU,aAD3B,EAC0C;QACtCN,uBAAuB;MAC1B;IACJ;;IACD,SAASU,QAAT,CAAkBC,OAAlB,EAA2B;MACvB,IAAI/M,KAAK,CAACE,IAAN,KAAe,UAAnB,EAA+B;QAC3B,MAAM;UAAEQ,KAAK,EAAEsM;QAAT,IAAwB7I,aAA9B;QACA6I,UAAU,KAAK,IAAf,IAAuBA,UAAU,KAAK,KAAK,CAA3C,GAA+C,KAAK,CAApD,GAAwDA,UAAU,CAACF,QAAX,CAAoBC,OAApB,CAAxD;MACH,CAHD,MAIK;QACD,MAAM;UAAErM,KAAK,EAAEuM;QAAT,IAAqB3I,UAA3B;QACA2I,OAAO,KAAK,IAAZ,IAAoBA,OAAO,KAAK,KAAK,CAArC,GAAyC,KAAK,CAA9C,GAAkDA,OAAO,CAACH,QAAR,CAAiBC,OAAjB,CAAlD;MACH;IACJ;;IACD,SAAS/E,UAAT,CAAoBtH,KAApB,EAA2B;MACvB,MAAM;QAAER,IAAF;QAAQkB,IAAR;QAAcD;MAAd,IAA2BnB,KAAjC;;MACA,IAAI,CAACoB,IAAD,IAASD,QAAb,EAAuB;QACnB,IAAIjB,IAAI,KAAK,UAAb,EAAyB;UACrB,MAAM;YAAEQ,KAAK,EAAE4G;UAAT,IAA8BlD,mBAApC;;UACA,IAAIkD,gBAAJ,EAAsB;YAClBA,gBAAgB,CAAC4F,WAAjB,GAA+B,CAACxM,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,KAAK,CAAjC,GAAqCA,KAArC,GAA6C,EAA9C,IAAoD,MAAnF;UACH;QACJ,CALD,MAMK;UACD,MAAM;YAAEA,KAAK,EAAEyM;UAAT,IAA2B9I,gBAAjC;;UACA,IAAI8I,aAAJ,EAAmB;YACf,IAAIzM,KAAJ,EAAW;cACPyM,aAAa,CAACD,WAAd,GAA4BxM,KAA5B;YACH,CAFD,MAGK;cACDyM,aAAa,CAACC,SAAd,GAA0B,QAA1B;YACH;UACJ;QACJ;MACJ;IACJ;;IACD,SAASC,0BAAT,GAAsC;MAClC7G,mBAAmB;IACtB;;IACD,MAAM8G,mBAAmB,GAAGjQ,GAAG,CAAC;MAC5B2N,GAAG,EAAE;IADuB,CAAD,CAA/B;;IAGA,SAASuC,oBAAT,CAA8B9E,CAA9B,EAAiC;MAC7B,IAAIhC,EAAJ;;MACA,MAAM;QAAE+G;MAAF,IAAgB/E,CAAC,CAACc,MAAxB;MACA+D,mBAAmB,CAAC5M,KAApB,CAA0BsK,GAA1B,GAAiC,GAAE,CAACwC,SAAU,IAA9C;MACA,CAAC/G,EAAE,GAAG/B,wBAAwB,CAAChE,KAA/B,MAA0C,IAA1C,IAAkD+F,EAAE,KAAK,KAAK,CAA9D,GAAkE,KAAK,CAAvE,GAA2EA,EAAE,CAACqD,oBAAH,EAA3E;IACH;;IACD,IAAI2D,qBAAqB,GAAG,IAA5B;IACA/P,WAAW,CAAC,MAAM;MACd,MAAM;QAAEyD,QAAF;QAAYjB;MAAZ,IAAqBF,KAA3B;;MACA,IAAImB,QAAQ,IAAIjB,IAAI,KAAK,UAAzB,EAAqC;QACjCuN,qBAAqB,GAAGhQ,KAAK,CAACqH,cAAD,EAAkBpE,KAAD,IAAW;UACrD,IAAI,CAACF,KAAK,CAACiF,OAAN,CAAc/E,KAAd,CAAD,IAAyBA,KAAK,KAAK6E,UAAvC,EAAmD;YAC/CyC,UAAU,CAACtH,KAAD,CAAV;UACH;QACJ,CAJ4B,CAA7B;MAKH,CAND,MAOK;QACD+M,qBAAqB,KAAK,IAA1B,IAAkCA,qBAAqB,KAAK,KAAK,CAAjE,GAAqE,KAAK,CAA1E,GAA8EA,qBAAqB,EAAnG;MACH;IACJ,CAZU,CAAX;IAaA,IAAIC,qBAAqB,GAAG,IAA5B;IACAhQ,WAAW,CAAC,MAAM;MACd,IAAIsC,KAAK,CAACE,IAAN,KAAe,UAAnB,EAA+B;QAC3BwN,qBAAqB,GAAGjQ,KAAK,CAACqH,cAAD,EAAkBpE,KAAD,IAAW;UACrD,IAAI+F,EAAJ;;UACA,IAAI,CAACjG,KAAK,CAACiF,OAAN,CAAc/E,KAAd,CAAD,IAAyBA,KAAK,KAAK6E,UAAvC,EAAmD;YAC/C,CAACkB,EAAE,GAAG/B,wBAAwB,CAAChE,KAA/B,MAA0C,IAA1C,IAAkD+F,EAAE,KAAK,KAAK,CAA9D,GAAkE,KAAK,CAAvE,GAA2EA,EAAE,CAACqD,oBAAH,EAA3E;UACH;QACJ,CAL4B,CAA7B;MAMH,CAPD,MAQK;QACD4D,qBAAqB,KAAK,IAA1B,IAAkCA,qBAAqB,KAAK,KAAK,CAAjE,GAAqE,KAAK,CAA1E,GAA8EA,qBAAqB,EAAnG;MACH;IACJ,CAZU,CAAX;IAaA/P,OAAO,CAAC4B,iBAAD,EAAoB;MACvBuF,cADuB;MAEvBiD,YAFuB;MAGvBlE;IAHuB,CAApB,CAAP;IAKA,MAAM8J,YAAY,GAAG;MACjBzJ,YADiB;MAEjBI,UAFiB;MAGjBH,aAHiB;MAIjByJ,aAAa,EAAEvI,cAJE;MAKjBmG,KALiB;MAMjBgB,IANiB;MAOjBG,MAPiB;MAQjBE,UARiB;MASjBD,QATiB;MAUjBE;IAViB,CAArB;IAYA,MAAMe,aAAa,GAAGvP,MAAM,CAAC,OAAD,EAAU0F,YAAV,EAAwBH,kBAAxB,CAA5B;IACA,MAAMiK,UAAU,GAAG5Q,QAAQ,CAAC,MAAM;MAC9B,MAAM;QAAEwD,KAAK,EAAEE;MAAT,IAAkBoE,aAAxB;MACA,MAAM;QAAE+I,MAAM,EAAE;UAAEC;QAAF,CAAV;QAAoCC,IAAI,EAAE;UAAEC,KAAF;UAASC,YAAT;UAAuBC,SAAvB;UAAkCC,UAAlC;UAA8CC,eAA9C;UAA+DC,iBAA/D;UAAkFC,mBAAlF;UAAuGC,MAAvG;UAA+GC,cAA/G;UAA+HC,WAA/H;UAA4IC,WAA5I;UAAyJC,gBAAzJ;UAA2KC,wBAA3K;UAAqMC,kBAArM;UAAyNC,aAAzN;UAAwOC,UAAxO;UAAoPC,iBAApP;UAAuQC,cAAvQ;UAAuRC,QAAvR;UAAiSC,iBAAjS;UAAoTC,qBAApT;UAA2UC,aAA3U;UAA0VC,kBAA1V;UAA8WC,kBAA9W;UAAkYC,eAAlY;UAAmZC,mBAAnZ;UAAwaC,WAAxa;UAAqbC,gBAArb;UAAucC,gBAAvc;UAAydC,SAAzd;UAAoeC,UAApe;UAAgfC,eAAhf;UAAigBC,iBAAjgB;UAAohBC,SAAphB;UAA+hBC,iBAA/hB;UAAkjBC,eAAljB;UAAmkBC,cAAnkB;UAAmlBC,sBAAnlB;UAA2mBC,cAA3mB;UAA2nBC,gBAA3nB;UAA6oBC,YAA7oB;UAA2pBC,iBAA3pB;UAA8qBC,mBAA9qB;UAAmsB,CAAC1R,SAAS,CAAC,SAAD,EAAY0B,IAAZ,CAAV,GAA8BiQ,OAAjuB;UAA0uB,CAAC3R,SAAS,CAAC,UAAD,EAAa0B,IAAb,CAAV,GAA+BkQ,QAAzwB;UAAmxB,CAAC5R,SAAS,CAAC,QAAD,EAAW0B,IAAX,CAAV,GAA6BsK;QAAhzB;MAA1C,IAAu2BjH,QAAQ,CAACvD,KAAt3B;MACA,MAAM;QAAEqK,IAAI,EAAEgG,WAAR;QAAqBC,KAAK,EAAEC;MAA5B,IAA6ClT,UAAU,CAAC8S,OAAD,CAA7D;MACA,OAAO;QACH,cAAc7C,oBADX;QAEH,wBAAwBsC,cAFrB;QAGH,iCAAiCC,sBAH9B;QAIH,aAAarC,KAJV;QAKH,iBAAiB4C,QALd;QAMH,qBAAqB3C,YANlB;QAOH,cAAcjD,MAPX;QAQH,oBAAoB6F,WARjB;QASH,qBAAqBE,YATlB;QAUH,kBAAkB7C,SAVf;QAWH,mBAAmBC,UAXhB;QAYH,6BAA6BG,mBAZ1B;QAaH,cAAcC,MAbX;QAcH,uBAAuBC,cAdpB;QAeH,oBAAoBC,WAfjB;QAgBH,oBAAoBC,WAhBjB;QAiBH,yBAAyBC,gBAjBtB;QAkBH,kCAAkCC,wBAlB/B;QAmBH,iBAAiBM,QAnBd;QAoBH,4BAA4BL,kBApBzB;QAqBH,sBAAsBC,aArBnB;QAsBH,mBAAmBC,UAtBhB;QAuBH,2BAA2BC,iBAvBxB;QAwBH,wBAAwBC,cAxBrB;QAyBH,qBAAqBuB,YAzBlB;QA0BH;QACA,2BAA2BnC,iBA3BxB;QA4BH,2BAA2Bc,iBA5BxB;QA6BH,gCAAgCC,qBA7B7B;QA8BH,sBAAsBC,aA9BnB;QA+BH,4BAA4BC,kBA/BzB;QAgCH,4BAA4BC,kBAhCzB;QAiCH,6BAA6BmB,mBAjC1B;QAkCH;QACA,yBAAyBtC,eAnCtB;QAoCH,yBAAyBoB,eApCtB;QAqCH,8BAA8BC,mBArC3B;QAsCH,oBAAoBC,WAtCjB;QAuCH,0BAA0BC,gBAvCvB;QAwCH,0BAA0BC,gBAxCvB;QAyCH,2BAA2Ba,iBAzCxB;QA0CH;QACA,mBAAmBX,UA3ChB;QA4CH,kBAAkBD,SA5Cf;QA6CH,yBAAyBE,eA7CtB;QA8CH,2BAA2BC,iBA9CxB;QA+CH,kBAAkBC,SA/Cf;QAgDH,wBAAwBK,cAhDrB;QAiDH,0BAA0BC,gBAjDvB;QAkDH,2BAA2BL,iBAlDxB;QAmDH,yBAAyBC;MAnDtB,CAAP;IAqDH,CAzD0B,CAA3B;IA0DA,MAAMa,gBAAgB,GAAGnN,mBAAmB,GACtChF,aAAa,CAAC,OAAD,EAAU7B,QAAQ,CAAC,MAAM;MACpC,MAAM;QAAEwD,KAAK,EAAEE;MAAT,IAAkBoE,aAAxB;MACA,OAAOpE,IAAI,CAAC,CAAD,CAAX;IACH,CAHgC,CAAlB,EAGXkN,UAHW,EAGC9N,KAHD,CADyB,GAKtCK,SALN;IAMA,OAAOP,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB4N,YAAlB,CAAd,EAA+C;MAClD;MACAzJ,YAFkD;MAGlDI,UAHkD;MAIlDD,gBAJkD;MAKlDE,WALkD;MAMlDJ,aANkD;MAOlDC,mBAPkD;MAQlDM,wBARkD;MASlD;MACAyM,UAAU,EAAEtD,aAVsC;MAUvBuD,iBAAiB,EAAExM,oBAVI;MAUkBgB,WAAW,EAAEd,cAV/B;MAU+CuM,eAAe,EAAElL,kBAVhE;MAUoFN,iBAAiB,EAAEL,oBAVvG;MAU6H8L,gBAAgB,EAAE5L,mBAV/I;MAUoK6L,gBAAgB,EAAEzL,mBAVtL;MAU2MG,WAAW,EAAEF,cAVxN;MAUwOJ,WAAW,EAAEN,cAVrP;MAUqQmM,SAAS,EAAElM,YAVhR;MAU8RU,eAV9R;MAU+SyL,UAAU,EAAEzM,aAV3T;MAU0U0M,cAAc,EAAEzM,iBAV1V;MAU6W0M,mBAAmB,EAAEvL,sBAVlY;MAU0ZwL,eAAe,EAAE/N,kBAV3a;MAU+bgO,cAAc,EAAE/N,iBAV/c;MAUkegO,oBAAoB,EAAE5L,uBAVxf;MAUihB6L,gBAAgB,EAAEzE,mBAVniB;MAUwjB0E,YAAY,EAAE9M,eAVtkB;MAUulB+M,4BAA4B,EAAE1L,+BAVrnB;MAWlD;MACAgH,oBAZkD;MAalDlE,sBAbkD;MAclDC,oBAdkD;MAelDE,WAfkD;MAgBlDW,eAhBkD;MAiBlDG,gBAjBkD;MAkBlDC,iBAlBkD;MAmBlDC,kBAnBkD;MAoBlDiB,gBApBkD;MAqBlDE,gBArBkD;MAsBlDf,eAtBkD;MAuBlDH,YAvBkD;MAwBlDC,WAxBkD;MAyBlDC,WAzBkD;MA0BlDkB,yBA1BkD;MA2BlDC,6BA3BkD;MA4BlDI,oBA5BkD;MA6BlDmB,0BA7BkD;MA6BtB6E,0BAA0B,EAAE,MAAM;QAC1D,OAAO/N,aAAa,CAACzD,KAArB;MACH,CA/BiD;MA+B/CyR,WAAW,EAAElO,QA/BkC;MA+BxBmO,OAAO,EAAErO,mBAAmB,GAAG1D,SAAH,GAAeyN,UA/BnB;MA+B+BuE,UAAU,EAAEnB,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,KAAK,KAAK,CAAvD,GAA2D,KAAK,CAAhE,GAAoEA,gBAAgB,CAACmB,UA/BhI;MA+B4IC,QAAQ,EAAEpB,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,KAAK,KAAK,CAAvD,GAA2D,KAAK,CAAhE,GAAoEA,gBAAgB,CAACoB;IA/B3O,CAA/C,CAAP;EAgCH,CAltB0B;;EAmtB3BC,MAAM,GAAG;IACL,IAAI9L,EAAJ,EAAQC,EAAR;;IACA,MAAM;MAAEkL,eAAF;MAAmBI,YAAnB;MAAiCK,UAAjC;MAA6CnS,IAA7C;MAAmDoS;IAAnD,IAAgE,IAAtE;IACA,MAAME,MAAM,GAAG,KAAKA,MAApB;IACAF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,EAA5D;IACA,OAAQrV,CAAC,CAAC,KAAD,EAAQ;MAAEI,GAAG,EAAE,cAAP;MAAuBoV,KAAK,EAAE,CACtC,GAAEb,eAAgB,QADoB,EAEvCS,UAFuC,EAGvCL,YAAY,IAAK,GAAEJ,eAAgB,WAAUI,YAAa,SAHnB,EAIvC;QACI,CAAE,GAAEJ,eAAgB,aAApB,GAAmC,KAAKT,UAD5C;QAEI,CAAE,GAAES,eAAgB,kBAApB,GAAwC,KAAKF,cAFjD;QAGI,CAAE,GAAEE,eAAgB,kBAApB,GAAwC1R,IAAI,KAAK,UAHrD;QAII,CAAE,GAAE0R,eAAgB,mBAApB,GAAyC,KAAKjQ,SAAL,IAAkB,CAAC,KAAKR,QAJrE;QAKI,CAAE,GAAEyQ,eAAgB,kBAApB,GAAwC,KAAKzQ,QALjD;QAMI,CAAE,GAAEyQ,eAAgB,eAApB,GAAqC,KAAK7Q,KAAL,IAAc,EAAEb,IAAI,KAAK,UAAX,CANvD;QAOI,CAAE,GAAE0R,eAAgB,cAApB,GAAoC,KAAKxQ,IAP7C;QAQI,CAAE,GAAEwQ,eAAgB,eAApB,GAAqC,KAAK3L,WAR9C;QASI,CAAE,GAAE2L,eAAgB,kBAApB,GAAwC,KAAKnQ;MATjD,CAJuC,CAA9B;MAeV9B,KAAK,EAAE,KAAKyS,OAfF;MAeWM,QAAQ,EAAE,CAAC,KAAKhB,cAAN,IAAwB,KAAKnQ,kBAA7B,IAAmD,CAAC,KAAKiQ,SAAzD,GAC5B,CAD4B,GAE5BnR,SAjBO;MAiBIgC,OAAO,EAAE,KAAKmI,kBAjBlB;MAiBsClI,MAAM,EAAE,KAAKiI,iBAjBnD;MAiBsEhI,OAAO,EAAE,KAAKmI,WAjBpF;MAiBiGzI,WAAW,EAAE,KAAK2I,eAjBnH;MAiBoI+H,YAAY,EAAE,KAAKlH,gBAjBvJ;MAiByKmH,YAAY,EAAE,KAAKjH,gBAjB5L;MAiB8MkH,kBAAkB,EAAE,KAAKxJ,sBAjBvO;MAiB+PyJ,gBAAgB,EAAE,KAAKxJ,oBAjBtR;MAiB4SnH,OAAO,EAAE,KAAKA,OAjB1T;MAiBmUD,SAAS,EAAE,KAAKgK;IAjBnV,CAAR,EAkBLjP,CAAC,CAAC,KAAD,EAAQ;MAAEwV,KAAK,EAAG,GAAEb,eAAgB;IAA5B,CAAR,EACGxS,kBAAkB,CAACoT,MAAM,CAACO,MAAR,EAAiBC,QAAD,IAAcA,QAAQ,IAAK/V,CAAC,CAAC,KAAD,EAAQ;MAAEwV,KAAK,EAAG,GAAEb,eAAgB;IAA5B,CAAR,EAAuDoB,QAAvD,CAA5C,CADrB,EAEG9S,IAAI,KAAK,UAAT,GAAuBjD,CAAC,CAACyB,UAAD,EAAa;MAAErB,GAAG,EAAE,0BAAP;MAAmCoV,KAAK,EAAG,GAAEb,eAAgB,kBAA7D;MAAgFqB,SAAS,EAAE,KAAKf,0BAAhG;MAA4HgB,sBAAsB,EAAE,IAApJ;MAA0JC,mBAAmB,EAAE,IAA/K;MAAqLC,kBAAkB,EAAE;IAAzM,CAAb,EAA8N;MAClPhT,OAAO,EAAE,MAAM;QACX,IAAIqG,EAAJ,EAAQC,EAAR;;QACA,MAAM;UAAEuL;QAAF,IAAmC,IAAzC;QACA,MAAMoB,yBAAyB,GAAG;UAC9BpI,KAAK,EAAE,KAAK9J,QAAL,IACH8Q,4BADG,IAEF,GAAEA,4BAA6B;QAHN,CAAlC;QAKA,OAAQhV,CAAC,CAACW,QAAD,EAAW,IAAX,EACLX,CAAC,CAAC,UAAD,EAAa6C,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKF,UAAvB,EAAmC;UAAExC,GAAG,EAAE,eAAP;UAAwBoV,KAAK,EAAE,CACvE,GAAEb,eAAgB,qBADqD,EAExE,CAACnL,EAAE,GAAG,KAAK5G,UAAX,MAA2B,IAA3B,IAAmC4G,EAAE,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,EAAE,CAACgM,KAFS,CAA/B;UAG1C/Q,SAAS,EAAE,KAAKA,SAH0B;UAGfb,IAAI,EAAEC,MAAM,CAAC,KAAKD,IAAN,CAHG;UAGUN,WAAW,EAAE,KAAKA,WAH5B;UAGyCG,KAAK,EAAE,KAAKkF,WAHrD;UAGkEjF,QAAQ,EAAE,KAAK+Q,cAHjF;UAGiGzQ,SAAS,EAAE,KAAKA,SAHjH;UAG4HD,SAAS,EAAE,KAAKA,SAH5I;UAGuJM,QAAQ,EAAE,KAAKA,QAHtK;UAGgLoR,QAAQ,EAAE,KAAKnR,kBAAL,IAA2B,CAAC,KAAKiQ,SAAjC,GACjO,CAAC,CADgO,GAEjOnR,SALuC;UAK5BV,KAAK,EAAE,CACpB,KAAKgS,mBAAL,CAAyB,CAAzB,CADoB,EAEpB,CAACjL,EAAE,GAAG,KAAK7G,UAAX,MAA2B,IAA3B,IAAmC6G,EAAE,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,EAAE,CAAC/G,KAF3C,EAGpB0T,yBAHoB,CALqB;UAS1C/Q,MAAM,EAAE,KAAK6H,eAT6B;UASZ9H,OAAO,EAAGoG,CAAD,IAAO,KAAK6B,gBAAL,CAAsB7B,CAAtB,EAAyB,CAAzB,CATJ;UASiCrG,OAAO,EAAE,KAAKoH,WAT/C;UAS4DhH,QAAQ,EAAE,KAAKiI,YAT3E;UASyF6I,QAAQ,EAAE,KAAK/F;QATxG,CAAnC,CAAb,CADI,EAWL,KAAK+D,gBAAL,GAAyBrU,CAAC,CAAC,KAAD,EAAQ;UAAEwV,KAAK,EAAG,GAAEb,eAAgB,qBAA5B;UAAkDjS,KAAK,EAAE,CACnF,KAAKoS,gBAD8E,EAEnFsB,yBAFmF,CAAzD;UAG3BlH,GAAG,EAAE;QAHsB,CAAR,EAGG,KAAKtG,iBAAL,CAAuB,CAAvB,CAHH,CAA1B,GAG2D,IAdtD,EAeL,KAAK1E,QAAL,GAAiBlE,CAAC,CAACe,eAAD,EAAkB;UAAEuV,QAAQ,EAAE,KAAKlG;QAAjB,CAAlB,EAAiE;UAC/EjN,OAAO,EAAE,MAAOnD,CAAC,CAAC,KAAD,EAAQ;YAAEI,GAAG,EAAE,qBAAP;YAA8BoV,KAAK,EAAG,GAAEb,eAAgB,yBAAxD;YAAkFzF,GAAG,EAAE;UAAvF,CAAR;QAD8D,CAAjE,CAAlB,GAEM,IAjBD,CAAT;MAkBH;IA3BiP,CAA9N,CAAxB,GA4BOlP,CAAC,CAAC,KAAD,EAAQ;MAAEwV,KAAK,EAAG,GAAEb,eAAgB;IAA5B,CAAR,EACJ3U,CAAC,CAAC,OAAD,EAAU6C,MAAM,CAACC,MAAP,CAAc;MAAEG,IAAI,EAAEA,IAAI,KAAK,UAAT,IACzB,KAAK4R,oBADoB,IAEzB,KAAKT,eAFoB,GAGvB,MAHuB,GAIvBnR;IAJe,CAAd,EAIO,KAAKL,UAJZ,EAIwB;MAAExC,GAAG,EAAE,YAAP;MAAqBoV,KAAK,EAAE,CACtD,GAAEb,eAAgB,kBADoC,EAEvD,CAACnL,EAAE,GAAG,KAAK5G,UAAX,MAA2B,IAA3B,IAAmC4G,EAAE,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,EAAE,CAACgM,KAFR,CAA5B;MAG5B9S,KAAK,EAAE,CACN,KAAKgS,mBAAL,CAAyB,CAAzB,CADM,EAEN,CAACjL,EAAE,GAAG,KAAK7G,UAAX,MAA2B,IAA3B,IAAmC6G,EAAE,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,EAAE,CAAC/G,KAFzD,CAHqB;MAM5B+S,QAAQ,EAAE,KAAKnR,kBAAL,IAA2B,CAAC,KAAKiQ,SAAjC,GAA6C,CAAC,CAA9C,GAAkDnR,SANhC;MAM2CE,WAAW,EAAE,KAAKsF,iBAAL,CAAuB,CAAvB,CANxD;MAMmFlF,QAAQ,EAAE,KAAK+Q,cANlG;MAMkHzQ,SAAS,EAAE,KAAKA,SANlI;MAM6ID,SAAS,EAAE,KAAKA,SAN7J;MAMwKN,KAAK,EAAEF,KAAK,CAACiF,OAAN,CAAc,KAAKG,WAAnB,IACxM,KAAKA,WAAL,CAAiB,CAAjB,CADwM,GAExM,KAAKA,WARoB;MAQPtE,QAAQ,EAAE,KAAKA,QARR;MAQkBI,SAAS,EAAE,KAAKA,SARlC;MAQ6Cd,IAAI,EAAE,KAAKiC,QARxD;MAQkEP,MAAM,EAAE,KAAK6H,eAR/E;MAQgG9H,OAAO,EAAGoG,CAAD,IAAO,KAAK6B,gBAAL,CAAsB7B,CAAtB,EAAyB,CAAzB,CARhH;MAQ6IrG,OAAO,EAAGqG,CAAD,IAAO,KAAKe,WAAL,CAAiBf,CAAjB,EAAoB,CAApB,CAR7J;MAQqLjG,QAAQ,EAAGiG,CAAD,IAAO,KAAKgC,YAAL,CAAkBhC,CAAlB,EAAqB,CAArB;IARtM,CAJxB,CAAV,CADG,EAcJ,KAAK6I,gBAAL,GAAyBrU,CAAC,CAAC,KAAD,EAAQ;MAAEwV,KAAK,EAAG,GAAEb,eAAgB;IAA5B,CAAR,EACtB3U,CAAC,CAAC,MAAD,EAAS,IAAT,EAAe,KAAK4I,iBAAL,CAAuB,CAAvB,CAAf,CADqB,CAA1B,GACmD,IAf/C,EAgBJ,KAAK1E,QAAL,GAAiBlE,CAAC,CAAC,KAAD,EAAQ;MAAEwV,KAAK,EAAG,GAAEb,eAAgB,sBAA5B;MAAmDzF,GAAG,EAAE,QAAxD;MAAkE9O,GAAG,EAAE;IAAvE,CAAR,EAAqG,QAArG,CAAlB,GAAoI,IAhBhI,CA9BX,EA+CG,CAAC,KAAK+D,IAAN,IACIhC,kBAAkB,CAACoT,MAAM,CAACgB,MAAR,EAAiBR,QAAD,IAAc;MAC5C,OAAOA,QAAQ,IACX,KAAK9R,SADF,IAEH,KAAKU,SAFF,IAGH,KAAKkQ,oBAHF,IAIH,KAAKjQ,OAAL,KAAiBxB,SAJd,GAI2BpD,CAAC,CAAC,KAAD,EAAQ;QAAEwV,KAAK,EAAG,GAAEb,eAAgB;MAA5B,CAAR,EAAuD,CACtFxS,kBAAkB,CAACoT,MAAM,CAAC,wBAAD,CAAP,EAAoCQ,QAAD,IAAc;QAC/D,OAAQ,CAAC,KAAK9R,SAAL,IAAkB8R,QAAnB,KAAiC/V,CAAC,CAACsB,UAAD,EAAa;UAAEkV,SAAS,EAAE7B,eAAb;UAA8B8B,IAAI,EAAE,KAAK1N,eAAzC;UAA0DvD,OAAO,EAAE,KAAKkI;QAAxE,CAAb,EAAoG;UAC1IpK,WAAW,EAAE,MAAMyS,QADuH;UAE1IW,IAAI,EAAE,MAAM;YAAE,IAAIlN,EAAJ,EAAQC,EAAR;;YAAY,OAAO,CAACA,EAAE,GAAG,CAACD,EAAE,GAAG,KAAK+L,MAAX,EAAmB,YAAnB,CAAN,MAA4C,IAA5C,IAAoD9L,EAAE,KAAK,KAAK,CAAhE,GAAoE,KAAK,CAAzE,GAA6EA,EAAE,CAACzH,IAAH,CAAQwH,EAAR,CAApF;UAAkG;QAFc,CAApG,CAA1C;MAIH,CALiB,CADoE,EAOtF,CAAC,KAAKnD,2BAAN,GAAoC0P,QAApC,GAA+C,IAPuC,EAQtF,KAAKnR,OAAL,KAAiBxB,SAAjB,GAA8BpD,CAAC,CAACwB,WAAD,EAAc;QAAEgV,SAAS,EAAE7B,eAAb;QAA8B/P,OAAO,EAAE,KAAKA,OAA5C;QAAqD+R,SAAS,EAAE,KAAhE;QAAuEC,SAAS,EAAE,KAAlF;QAAyFlU,KAAK,EAAE,KAAKyS;MAArG,CAAd,CAA/B,GAAgK,IAR1E,EAStF,KAAK9O,2BAAL,GAAmC0P,QAAnC,GAA8C,IATwC,EAUtF,KAAKpR,SAAL,IAAkB,KAAK1B,IAAL,KAAc,UAAhC,GAA8CjD,CAAC,CAACyC,SAAD,EAAY,IAAZ,EAAkB;QAC7DU,OAAO,EAAGJ,KAAD,IAAW;UAAE,IAAIyG,EAAJ;;UAAQ,OAAO,CAACA,EAAE,GAAG+L,MAAM,CAACsB,KAAb,MAAwB,IAAxB,IAAgCrN,EAAE,KAAK,KAAK,CAA5C,GAAgD,KAAK,CAArD,GAAyDA,EAAE,CAACxH,IAAH,CAAQuT,MAAR,EAAgBxS,KAAhB,CAAhE;QAAyF;MAD1D,CAAlB,CAA/C,GAEM,IAZgF,EAatF,KAAK8R,oBAAL,IAA6B,KAAK5R,IAAL,KAAc,UAA3C,GAAyDjD,CAAC,CAAC,KAAD,EAAQ;QAAEwV,KAAK,EAAG,GAAEb,eAAgB,aAA5B;QAA0C3P,WAAW,EAAE,KAAK6J,6BAA5D;QAA2FvJ,OAAO,EAAE,KAAKsJ;MAAzG,CAAR,EAA8I,KAAKwF,eAAL,GAClMlS,WAAW,CAACqT,MAAM,CAAC,uBAAD,CAAP,EAAkC,MAAM,CACjDvV,CAAC,CAACuB,SAAD,EAAY;QAAEiV,SAAS,EAAE7B;MAAb,CAAZ,EAA4C;QAAExR,OAAO,EAAE,MAAMnD,CAAC,CAACmB,OAAD,EAAU,IAAV;MAAlB,CAA5C,CADgD,CAAxC,CADuL,GAIlMe,WAAW,CAACqT,MAAM,CAAC,yBAAD,CAAP,EAAoC,MAAM,CACnDvV,CAAC,CAACuB,SAAD,EAAY;QAAEiV,SAAS,EAAE7B;MAAb,CAAZ,EAA4C;QAAExR,OAAO,EAAE,MAAMnD,CAAC,CAACoB,UAAD,EAAa,IAAb;MAAlB,CAA5C,CADkD,CAA1C,CAJyC,CAA1D,GAMW,IAnB2E,CAAvD,CAJ5B,GAwBD,IAxBN;IAyBH,CA1BiB,CAhDzB,CAlBI,EA6FL,KAAK+C,IAAL,GAAanE,CAAC,CAAC,MAAD,EAAS;MAAEwV,KAAK,EAAG,GAAEb,eAAgB;IAA5B,CAAT,EAA2DzS,WAAW,CAACqT,MAAM,CAACnR,SAAR,EAAmB,MAAM,CAAC,KAAKA,SAAN,CAAzB,CAAtE,CAAd,GAAmI,IA7F9H,EA8FL,KAAKD,IAAL,GAAanE,CAAC,CAAC,KAAD,EAAQ;MAAEwV,KAAK,EAAG,GAAEb,eAAgB;IAA5B,CAAR,EACV3U,CAAC,CAAC,KAAD,EAAQ;MAAEwV,KAAK,EAAG,GAAEb,eAAgB;IAA5B,CAAR,EACG3U,CAAC,CAAC,OAAD,EAAU;MAAEI,GAAG,EAAE,aAAP;MAAsB6C,IAAI,EAAE,KAAKA,IAAjC;MAAuCuS,KAAK,EAAG,GAAEb,eAAgB,kBAAjE;MAAoFc,QAAQ,EAAE,KAAKnR,kBAAL,IAA2B,CAAC,KAAKiQ,SAAjC,GAA6C,CAAC,CAA9C,GAAkDnR,SAAhJ;MAA2JE,WAAW,EAAE,KAAKsF,iBAAL,CAAuB,CAAvB,CAAxK;MAAmMlF,QAAQ,EAAE,KAAK+Q,cAAlN;MAAkOzQ,SAAS,EAAE,KAAKA,SAAlP;MAA6PD,SAAS,EAAE,KAAKA,SAA7Q;MAAwRN,KAAK,EAAEF,KAAK,CAACiF,OAAN,CAAc,KAAKG,WAAnB,IAChS,KAAKA,WAAL,CAAiB,CAAjB,CADgS,GAEhSvF,SAFC;MAEUiB,QAAQ,EAAE,KAAKA,QAFzB;MAEmC3B,KAAK,EAAE,KAAKgS,mBAAL,CAAyB,CAAzB,CAF1C;MAEuErP,MAAM,EAAE,KAAK6H,eAFpF;MAEqG9H,OAAO,EAAGoG,CAAD,IAAO,KAAK6B,gBAAL,CAAsB7B,CAAtB,EAAyB,CAAzB,CAFrH;MAEkJrG,OAAO,EAAGqG,CAAD,IAAO,KAAKe,WAAL,CAAiBf,CAAjB,EAAoB,CAApB,CAFlK;MAE0LjG,QAAQ,EAAGiG,CAAD,IAAO,KAAKgC,YAAL,CAAkBhC,CAAlB,EAAqB,CAArB;IAF3M,CAAV,CADJ,EAIG,KAAK8I,gBAAL,GAAyBtU,CAAC,CAAC,KAAD,EAAQ;MAAEwV,KAAK,EAAG,GAAEb,eAAgB;IAA5B,CAAR,EACtB3U,CAAC,CAAC,MAAD,EAAS,IAAT,EAAe,KAAK4I,iBAAL,CAAuB,CAAvB,CAAf,CADqB,CAA1B,GACmD,IALtD,CADS,EAOVzG,kBAAkB,CAACoT,MAAM,CAACgB,MAAR,EAAiBR,QAAD,IAAc;MAC5C,OAAQ,CAAC,KAAK9R,SAAL,IAAkB8R,QAAnB,KAAiC/V,CAAC,CAAC,KAAD,EAAQ;QAAEwV,KAAK,EAAG,GAAEb,eAAgB;MAA5B,CAAR,EAAuD,CAC7F,KAAK1Q,SAAL,IAAmBjE,CAAC,CAACsB,UAAD,EAAa;QAAEkV,SAAS,EAAE7B,eAAb;QAA8B8B,IAAI,EAAE,KAAK1N,eAAzC;QAA0DvD,OAAO,EAAE,KAAKkI;MAAxE,CAAb,EAAoG;QACpHgJ,IAAI,EAAE,MAAM;UAAE,IAAIlN,EAAJ;;UAAQ,OAAO,CAACA,EAAE,GAAG+L,MAAM,CAAC,YAAD,CAAZ,MAAgC,IAAhC,IAAwC/L,EAAE,KAAK,KAAK,CAApD,GAAwD,KAAK,CAA7D,GAAiEA,EAAE,CAACxH,IAAH,CAAQuT,MAAR,CAAxE;QAA0F,CADI;QAEpHjS,WAAW,EAAE,MAAM;UAAE,IAAIkG,EAAJ;;UAAQ,OAAO,CAACA,EAAE,GAAG+L,MAAM,CAAC,wBAAD,CAAZ,MAA4C,IAA5C,IAAoD/L,EAAE,KAAK,KAAK,CAAhE,GAAoE,KAAK,CAAzE,GAA6EA,EAAE,CAACxH,IAAH,CAAQuT,MAAR,CAApF;QAAsG;MAFf,CAApG,CADyE,EAK7FQ,QAL6F,CAAvD,CAA1C;IAOH,CARiB,CAPR,CAAd,GAeW,IA7GN,EA8GL,KAAKnB,cAAL,GAAuB5U,CAAC,CAAC,KAAD,EAAQ;MAAEwV,KAAK,EAAG,GAAEb,eAAgB;IAA5B,CAAR,CAAxB,GAAkF,IA9G7E,EA+GL,KAAKC,cAAL,GAAuB5U,CAAC,CAAC,KAAD,EAAQ;MAAEwV,KAAK,EAAG,GAAEb,eAAgB;IAA5B,CAAR,CAAxB,GAAwF,IA/GnF,EAgHL,KAAKhQ,SAAL,IAAkB1B,IAAI,KAAK,UAA3B,GAAyCjD,CAAC,CAACyC,SAAD,EAAY,IAAZ,EAAkB;MACxDU,OAAO,EAAGJ,KAAD,IAAW;QAChB,IAAIyG,EAAJ;;QACA,MAAM;UAAEzE;QAAF,IAAkB,IAAxB;;QACA,IAAIA,WAAJ,EAAiB;UACb,OAAOA,WAAW,CAAChC,KAAD,CAAlB;QACH;;QACD,OAAO,CAACyG,EAAE,GAAG+L,MAAM,CAACsB,KAAb,MAAwB,IAAxB,IAAgCrN,EAAE,KAAK,KAAK,CAA5C,GAAgD,KAAK,CAArD,GAAyDA,EAAE,CAACxH,IAAH,CAAQuT,MAAR,EAAgBxS,KAAhB,CAAhE;MACH;IARuD,CAAlB,CAA1C,GASM,IAzHD,CAAT;EA0HH;;AAl1B0B,CAAD,CAA9B"},"metadata":{},"sourceType":"module"}