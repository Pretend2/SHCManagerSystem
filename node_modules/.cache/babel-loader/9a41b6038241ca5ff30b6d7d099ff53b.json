{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, computed, toRef } from 'vue';\nimport { useMergedState } from 'vooks'; // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n\nexport function useTransferData(props) {\n  const uncontrolledValueRef = ref(props.defaultValue);\n  const mergedValueRef = useMergedState(toRef(props, 'value'), uncontrolledValueRef);\n  const optionsMapRef = computed(() => {\n    const map = new Map();\n    (props.options || []).forEach(opt => map.set(opt.value, opt));\n    return map;\n  });\n  const targetValueSetRef = computed(() => new Set(mergedValueRef.value || []));\n  const targetOptionsRef = computed(() => {\n    const optionMap = optionsMapRef.value;\n    const targetOptions = [];\n    (mergedValueRef.value || []).forEach(v => {\n      const option = optionMap.get(v);\n\n      if (option) {\n        targetOptions.push(option);\n      }\n    });\n    return targetOptions;\n  });\n  const srcPatternRef = ref('');\n  const tgtPatternRef = ref('');\n  const mergedSrcFilterableRef = computed(() => {\n    return props.sourceFilterable || !!props.filterable;\n  });\n  const filteredSrcOptionsRef = computed(() => {\n    if (!mergedSrcFilterableRef.value) return props.options;\n    const {\n      filter\n    } = props;\n    return props.options.filter(opt => filter(srcPatternRef.value, opt, 'source'));\n  });\n  const filteredTgtOptionsRef = computed(() => {\n    if (!props.targetFilterable) return targetOptionsRef.value;\n    const {\n      filter\n    } = props;\n    return targetOptionsRef.value.filter(opt => filter(tgtPatternRef.value, opt, 'target'));\n  });\n  const mergedValueSetRef = computed(() => {\n    const {\n      value\n    } = mergedValueRef;\n    if (value === null) return new Set();\n    return new Set(value);\n  });\n  const valueSetForCheckAllRef = computed(() => {\n    const values = new Set(mergedValueSetRef.value);\n    filteredSrcOptionsRef.value.forEach(option => {\n      if (!option.disabled && !values.has(option.value)) {\n        values.add(option.value);\n      }\n    });\n    return values;\n  });\n  const valueSetForUncheckAllRef = computed(() => {\n    const values = new Set(mergedValueSetRef.value);\n    filteredSrcOptionsRef.value.forEach(option => {\n      if (!option.disabled && values.has(option.value)) {\n        values.delete(option.value);\n      }\n    });\n    return values;\n  });\n  const valueSetForClearRef = computed(() => {\n    const values = new Set(mergedValueSetRef.value);\n    filteredTgtOptionsRef.value.forEach(option => {\n      if (!option.disabled) {\n        values.delete(option.value);\n      }\n    });\n    return values;\n  });\n  const canNotSelectAnythingRef = computed(() => {\n    return filteredSrcOptionsRef.value.every(option => option.disabled);\n  });\n  const allCheckedRef = computed(() => {\n    if (!filteredSrcOptionsRef.value.length) {\n      return false;\n    }\n\n    const mergedValueSet = mergedValueSetRef.value;\n    return filteredSrcOptionsRef.value.every(option => option.disabled || mergedValueSet.has(option.value));\n  });\n  const canBeClearedRef = computed(() => {\n    return filteredTgtOptionsRef.value.some(option => !option.disabled);\n  });\n\n  function handleSrcFilterUpdateValue(value) {\n    srcPatternRef.value = value !== null && value !== void 0 ? value : '';\n  }\n\n  function handleTgtFilterUpdateValue(value) {\n    tgtPatternRef.value = value !== null && value !== void 0 ? value : '';\n  }\n\n  return {\n    uncontrolledValueRef,\n    mergedValueRef,\n    targetValueSetRef,\n    valueSetForCheckAllRef,\n    valueSetForUncheckAllRef,\n    valueSetForClearRef,\n    filteredTgtOptionsRef,\n    filteredSrcOptionsRef,\n    targetOptionsRef,\n    canNotSelectAnythingRef,\n    canBeClearedRef,\n    allCheckedRef,\n    srcPatternRef,\n    tgtPatternRef,\n    mergedSrcFilterableRef,\n    handleSrcFilterUpdateValue,\n    handleTgtFilterUpdateValue\n  };\n}","map":{"version":3,"names":["ref","computed","toRef","useMergedState","useTransferData","props","uncontrolledValueRef","defaultValue","mergedValueRef","optionsMapRef","map","Map","options","forEach","opt","set","value","targetValueSetRef","Set","targetOptionsRef","optionMap","targetOptions","v","option","get","push","srcPatternRef","tgtPatternRef","mergedSrcFilterableRef","sourceFilterable","filterable","filteredSrcOptionsRef","filter","filteredTgtOptionsRef","targetFilterable","mergedValueSetRef","valueSetForCheckAllRef","values","disabled","has","add","valueSetForUncheckAllRef","delete","valueSetForClearRef","canNotSelectAnythingRef","every","allCheckedRef","length","mergedValueSet","canBeClearedRef","some","handleSrcFilterUpdateValue","handleTgtFilterUpdateValue"],"sources":["E:/VCode/SHC社区管理系统/shc_community_manager_system/node_modules/naive-ui/es/transfer/src/use-transfer-data.js"],"sourcesContent":["import { ref, computed, toRef } from 'vue';\nimport { useMergedState } from 'vooks';\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport function useTransferData(props) {\n    const uncontrolledValueRef = ref(props.defaultValue);\n    const mergedValueRef = useMergedState(toRef(props, 'value'), uncontrolledValueRef);\n    const optionsMapRef = computed(() => {\n        const map = new Map();\n        (props.options || []).forEach((opt) => map.set(opt.value, opt));\n        return map;\n    });\n    const targetValueSetRef = computed(() => new Set(mergedValueRef.value || []));\n    const targetOptionsRef = computed(() => {\n        const optionMap = optionsMapRef.value;\n        const targetOptions = [];\n        (mergedValueRef.value || []).forEach((v) => {\n            const option = optionMap.get(v);\n            if (option) {\n                targetOptions.push(option);\n            }\n        });\n        return targetOptions;\n    });\n    const srcPatternRef = ref('');\n    const tgtPatternRef = ref('');\n    const mergedSrcFilterableRef = computed(() => {\n        return props.sourceFilterable || !!props.filterable;\n    });\n    const filteredSrcOptionsRef = computed(() => {\n        if (!mergedSrcFilterableRef.value)\n            return props.options;\n        const { filter } = props;\n        return props.options.filter((opt) => filter(srcPatternRef.value, opt, 'source'));\n    });\n    const filteredTgtOptionsRef = computed(() => {\n        if (!props.targetFilterable)\n            return targetOptionsRef.value;\n        const { filter } = props;\n        return targetOptionsRef.value.filter((opt) => filter(tgtPatternRef.value, opt, 'target'));\n    });\n    const mergedValueSetRef = computed(() => {\n        const { value } = mergedValueRef;\n        if (value === null)\n            return new Set();\n        return new Set(value);\n    });\n    const valueSetForCheckAllRef = computed(() => {\n        const values = new Set(mergedValueSetRef.value);\n        filteredSrcOptionsRef.value.forEach((option) => {\n            if (!option.disabled && !values.has(option.value)) {\n                values.add(option.value);\n            }\n        });\n        return values;\n    });\n    const valueSetForUncheckAllRef = computed(() => {\n        const values = new Set(mergedValueSetRef.value);\n        filteredSrcOptionsRef.value.forEach((option) => {\n            if (!option.disabled && values.has(option.value)) {\n                values.delete(option.value);\n            }\n        });\n        return values;\n    });\n    const valueSetForClearRef = computed(() => {\n        const values = new Set(mergedValueSetRef.value);\n        filteredTgtOptionsRef.value.forEach((option) => {\n            if (!option.disabled) {\n                values.delete(option.value);\n            }\n        });\n        return values;\n    });\n    const canNotSelectAnythingRef = computed(() => {\n        return filteredSrcOptionsRef.value.every((option) => option.disabled);\n    });\n    const allCheckedRef = computed(() => {\n        if (!filteredSrcOptionsRef.value.length) {\n            return false;\n        }\n        const mergedValueSet = mergedValueSetRef.value;\n        return filteredSrcOptionsRef.value.every((option) => option.disabled || mergedValueSet.has(option.value));\n    });\n    const canBeClearedRef = computed(() => {\n        return filteredTgtOptionsRef.value.some((option) => !option.disabled);\n    });\n    function handleSrcFilterUpdateValue(value) {\n        srcPatternRef.value = value !== null && value !== void 0 ? value : '';\n    }\n    function handleTgtFilterUpdateValue(value) {\n        tgtPatternRef.value = value !== null && value !== void 0 ? value : '';\n    }\n    return {\n        uncontrolledValueRef,\n        mergedValueRef,\n        targetValueSetRef,\n        valueSetForCheckAllRef,\n        valueSetForUncheckAllRef,\n        valueSetForClearRef,\n        filteredTgtOptionsRef,\n        filteredSrcOptionsRef,\n        targetOptionsRef,\n        canNotSelectAnythingRef,\n        canBeClearedRef,\n        allCheckedRef,\n        srcPatternRef,\n        tgtPatternRef,\n        mergedSrcFilterableRef,\n        handleSrcFilterUpdateValue,\n        handleTgtFilterUpdateValue\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}