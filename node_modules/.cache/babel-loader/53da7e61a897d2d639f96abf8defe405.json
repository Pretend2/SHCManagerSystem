{"ast":null,"code":"import { h, createTextVNode, defineComponent, computed } from 'vue';\nimport { format, formatDistanceStrict, fromUnixTime } from 'date-fns/esm';\nimport formatInTimeZone from 'date-fns-tz/esm/formatInTimeZone';\nimport { useLocale } from '../../_mixins';\nexport const timeProps = {\n  time: {\n    type: [Number, Date],\n    default: undefined // For unix or non unix mode, it should be different default value\n\n  },\n  type: {\n    type: String,\n    default: 'datetime'\n  },\n  to: {\n    type: [Number, Date],\n    default: undefined // the same as `time` prop\n\n  },\n  unix: Boolean,\n  format: String,\n  text: Boolean,\n  timeZone: String\n};\nexport default defineComponent({\n  name: 'Time',\n  props: timeProps,\n\n  setup(props) {\n    const now = Date.now();\n    const {\n      localeRef,\n      dateLocaleRef\n    } = useLocale('Time');\n    const mergedFormatRef = computed(() => {\n      const {\n        timeZone\n      } = props;\n\n      if (timeZone) {\n        return (time, _format, options) => {\n          return formatInTimeZone(time, timeZone, _format, options);\n        };\n      }\n\n      return format;\n    });\n    const dateFnsOptionsRef = computed(() => {\n      return {\n        locale: dateLocaleRef.value.locale\n      };\n    });\n    const mergedTimeRef = computed(() => {\n      const {\n        time\n      } = props;\n\n      if (props.unix) {\n        if (time === undefined) return now;\n        return fromUnixTime(typeof time === 'number' ? time : time.valueOf());\n      }\n\n      return time !== null && time !== void 0 ? time : now;\n    });\n    const mergedToRef = computed(() => {\n      const {\n        to\n      } = props;\n\n      if (props.unix) {\n        if (to === undefined) return now;\n        return fromUnixTime(typeof to === 'number' ? to : to.valueOf());\n      }\n\n      return to !== null && to !== void 0 ? to : now;\n    });\n    const renderedTimeRef = computed(() => {\n      if (props.format) {\n        return mergedFormatRef.value(mergedTimeRef.value, props.format, dateFnsOptionsRef.value);\n      } else if (props.type === 'date') {\n        return mergedFormatRef.value(mergedTimeRef.value, localeRef.value.dateFormat, dateFnsOptionsRef.value);\n      } else if (props.type === 'datetime') {\n        return mergedFormatRef.value(mergedTimeRef.value, localeRef.value.dateTimeFormat, dateFnsOptionsRef.value);\n      } else {\n        return formatDistanceStrict(mergedTimeRef.value, mergedToRef.value, {\n          addSuffix: true,\n          locale: dateLocaleRef.value.locale\n        });\n      }\n    });\n    return {\n      renderedTime: renderedTimeRef\n    };\n  },\n\n  render() {\n    return this.text ? createTextVNode(this.renderedTime) : h('time', [this.renderedTime]);\n  }\n\n});","map":{"version":3,"names":["h","createTextVNode","defineComponent","computed","format","formatDistanceStrict","fromUnixTime","formatInTimeZone","useLocale","timeProps","time","type","Number","Date","default","undefined","String","to","unix","Boolean","text","timeZone","name","props","setup","now","localeRef","dateLocaleRef","mergedFormatRef","_format","options","dateFnsOptionsRef","locale","value","mergedTimeRef","valueOf","mergedToRef","renderedTimeRef","dateFormat","dateTimeFormat","addSuffix","renderedTime","render"],"sources":["E:/VCode/SHC社区管理系统/shc_community_manager_system/node_modules/naive-ui/es/time/src/Time.js"],"sourcesContent":["import { h, createTextVNode, defineComponent, computed } from 'vue';\nimport { format, formatDistanceStrict, fromUnixTime } from 'date-fns/esm';\nimport formatInTimeZone from 'date-fns-tz/esm/formatInTimeZone';\nimport { useLocale } from '../../_mixins';\nexport const timeProps = {\n    time: {\n        type: [Number, Date],\n        default: undefined // For unix or non unix mode, it should be different default value\n    },\n    type: {\n        type: String,\n        default: 'datetime'\n    },\n    to: {\n        type: [Number, Date],\n        default: undefined // the same as `time` prop\n    },\n    unix: Boolean,\n    format: String,\n    text: Boolean,\n    timeZone: String\n};\nexport default defineComponent({\n    name: 'Time',\n    props: timeProps,\n    setup(props) {\n        const now = Date.now();\n        const { localeRef, dateLocaleRef } = useLocale('Time');\n        const mergedFormatRef = computed(() => {\n            const { timeZone } = props;\n            if (timeZone) {\n                return (time, _format, options) => {\n                    return formatInTimeZone(time, timeZone, _format, options);\n                };\n            }\n            return format;\n        });\n        const dateFnsOptionsRef = computed(() => {\n            return {\n                locale: dateLocaleRef.value.locale\n            };\n        });\n        const mergedTimeRef = computed(() => {\n            const { time } = props;\n            if (props.unix) {\n                if (time === undefined)\n                    return now;\n                return fromUnixTime(typeof time === 'number' ? time : time.valueOf());\n            }\n            return time !== null && time !== void 0 ? time : now;\n        });\n        const mergedToRef = computed(() => {\n            const { to } = props;\n            if (props.unix) {\n                if (to === undefined)\n                    return now;\n                return fromUnixTime(typeof to === 'number' ? to : to.valueOf());\n            }\n            return to !== null && to !== void 0 ? to : now;\n        });\n        const renderedTimeRef = computed(() => {\n            if (props.format) {\n                return mergedFormatRef.value(mergedTimeRef.value, props.format, dateFnsOptionsRef.value);\n            }\n            else if (props.type === 'date') {\n                return mergedFormatRef.value(mergedTimeRef.value, localeRef.value.dateFormat, dateFnsOptionsRef.value);\n            }\n            else if (props.type === 'datetime') {\n                return mergedFormatRef.value(mergedTimeRef.value, localeRef.value.dateTimeFormat, dateFnsOptionsRef.value);\n            }\n            else {\n                return formatDistanceStrict(mergedTimeRef.value, mergedToRef.value, {\n                    addSuffix: true,\n                    locale: dateLocaleRef.value.locale\n                });\n            }\n        });\n        return {\n            renderedTime: renderedTimeRef\n        };\n    },\n    render() {\n        return this.text\n            ? createTextVNode(this.renderedTime)\n            : h('time', [this.renderedTime]);\n    }\n});\n"],"mappings":"AAAA,SAASA,CAAT,EAAYC,eAAZ,EAA6BC,eAA7B,EAA8CC,QAA9C,QAA8D,KAA9D;AACA,SAASC,MAAT,EAAiBC,oBAAjB,EAAuCC,YAAvC,QAA2D,cAA3D;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,OAAO,MAAMC,SAAS,GAAG;EACrBC,IAAI,EAAE;IACFC,IAAI,EAAE,CAACC,MAAD,EAASC,IAAT,CADJ;IAEFC,OAAO,EAAEC,SAFP,CAEiB;;EAFjB,CADe;EAKrBJ,IAAI,EAAE;IACFA,IAAI,EAAEK,MADJ;IAEFF,OAAO,EAAE;EAFP,CALe;EASrBG,EAAE,EAAE;IACAN,IAAI,EAAE,CAACC,MAAD,EAASC,IAAT,CADN;IAEAC,OAAO,EAAEC,SAFT,CAEmB;;EAFnB,CATiB;EAarBG,IAAI,EAAEC,OAbe;EAcrBf,MAAM,EAAEY,MAda;EAerBI,IAAI,EAAED,OAfe;EAgBrBE,QAAQ,EAAEL;AAhBW,CAAlB;AAkBP,eAAed,eAAe,CAAC;EAC3BoB,IAAI,EAAE,MADqB;EAE3BC,KAAK,EAAEd,SAFoB;;EAG3Be,KAAK,CAACD,KAAD,EAAQ;IACT,MAAME,GAAG,GAAGZ,IAAI,CAACY,GAAL,EAAZ;IACA,MAAM;MAAEC,SAAF;MAAaC;IAAb,IAA+BnB,SAAS,CAAC,MAAD,CAA9C;IACA,MAAMoB,eAAe,GAAGzB,QAAQ,CAAC,MAAM;MACnC,MAAM;QAAEkB;MAAF,IAAeE,KAArB;;MACA,IAAIF,QAAJ,EAAc;QACV,OAAO,CAACX,IAAD,EAAOmB,OAAP,EAAgBC,OAAhB,KAA4B;UAC/B,OAAOvB,gBAAgB,CAACG,IAAD,EAAOW,QAAP,EAAiBQ,OAAjB,EAA0BC,OAA1B,CAAvB;QACH,CAFD;MAGH;;MACD,OAAO1B,MAAP;IACH,CAR+B,CAAhC;IASA,MAAM2B,iBAAiB,GAAG5B,QAAQ,CAAC,MAAM;MACrC,OAAO;QACH6B,MAAM,EAAEL,aAAa,CAACM,KAAd,CAAoBD;MADzB,CAAP;IAGH,CAJiC,CAAlC;IAKA,MAAME,aAAa,GAAG/B,QAAQ,CAAC,MAAM;MACjC,MAAM;QAAEO;MAAF,IAAWa,KAAjB;;MACA,IAAIA,KAAK,CAACL,IAAV,EAAgB;QACZ,IAAIR,IAAI,KAAKK,SAAb,EACI,OAAOU,GAAP;QACJ,OAAOnB,YAAY,CAAC,OAAOI,IAAP,KAAgB,QAAhB,GAA2BA,IAA3B,GAAkCA,IAAI,CAACyB,OAAL,EAAnC,CAAnB;MACH;;MACD,OAAOzB,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,KAAK,CAA/B,GAAmCA,IAAnC,GAA0Ce,GAAjD;IACH,CAR6B,CAA9B;IASA,MAAMW,WAAW,GAAGjC,QAAQ,CAAC,MAAM;MAC/B,MAAM;QAAEc;MAAF,IAASM,KAAf;;MACA,IAAIA,KAAK,CAACL,IAAV,EAAgB;QACZ,IAAID,EAAE,KAAKF,SAAX,EACI,OAAOU,GAAP;QACJ,OAAOnB,YAAY,CAAC,OAAOW,EAAP,KAAc,QAAd,GAAyBA,EAAzB,GAA8BA,EAAE,CAACkB,OAAH,EAA/B,CAAnB;MACH;;MACD,OAAOlB,EAAE,KAAK,IAAP,IAAeA,EAAE,KAAK,KAAK,CAA3B,GAA+BA,EAA/B,GAAoCQ,GAA3C;IACH,CAR2B,CAA5B;IASA,MAAMY,eAAe,GAAGlC,QAAQ,CAAC,MAAM;MACnC,IAAIoB,KAAK,CAACnB,MAAV,EAAkB;QACd,OAAOwB,eAAe,CAACK,KAAhB,CAAsBC,aAAa,CAACD,KAApC,EAA2CV,KAAK,CAACnB,MAAjD,EAAyD2B,iBAAiB,CAACE,KAA3E,CAAP;MACH,CAFD,MAGK,IAAIV,KAAK,CAACZ,IAAN,KAAe,MAAnB,EAA2B;QAC5B,OAAOiB,eAAe,CAACK,KAAhB,CAAsBC,aAAa,CAACD,KAApC,EAA2CP,SAAS,CAACO,KAAV,CAAgBK,UAA3D,EAAuEP,iBAAiB,CAACE,KAAzF,CAAP;MACH,CAFI,MAGA,IAAIV,KAAK,CAACZ,IAAN,KAAe,UAAnB,EAA+B;QAChC,OAAOiB,eAAe,CAACK,KAAhB,CAAsBC,aAAa,CAACD,KAApC,EAA2CP,SAAS,CAACO,KAAV,CAAgBM,cAA3D,EAA2ER,iBAAiB,CAACE,KAA7F,CAAP;MACH,CAFI,MAGA;QACD,OAAO5B,oBAAoB,CAAC6B,aAAa,CAACD,KAAf,EAAsBG,WAAW,CAACH,KAAlC,EAAyC;UAChEO,SAAS,EAAE,IADqD;UAEhER,MAAM,EAAEL,aAAa,CAACM,KAAd,CAAoBD;QAFoC,CAAzC,CAA3B;MAIH;IACJ,CAhB+B,CAAhC;IAiBA,OAAO;MACHS,YAAY,EAAEJ;IADX,CAAP;EAGH,CA1D0B;;EA2D3BK,MAAM,GAAG;IACL,OAAO,KAAKtB,IAAL,GACDnB,eAAe,CAAC,KAAKwC,YAAN,CADd,GAEDzC,CAAC,CAAC,MAAD,EAAS,CAAC,KAAKyC,YAAN,CAAT,CAFP;EAGH;;AA/D0B,CAAD,CAA9B"},"metadata":{},"sourceType":"module"}