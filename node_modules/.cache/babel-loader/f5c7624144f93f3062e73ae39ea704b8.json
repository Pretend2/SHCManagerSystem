{"ast":null,"code":"import { h, defineComponent, inject, computed } from 'vue';\nimport { AddIcon } from '../../_internal/icons';\nimport { NBaseIcon } from '../../_internal';\nimport { resolveSlot, throwError } from '../../_utils';\nimport { uploadInjectionKey } from './interface';\nimport { getFilesFromEntries } from './utils';\nimport NUploadDragger from './UploadDragger';\nexport default defineComponent({\n  name: 'UploadTrigger',\n  props: {\n    abstract: Boolean\n  },\n\n  setup(props, {\n    slots\n  }) {\n    const NUpload = inject(uploadInjectionKey, null);\n\n    if (!NUpload) {\n      throwError('upload-trigger', '`n-upload-trigger` must be placed inside `n-upload`.');\n    }\n\n    const {\n      mergedClsPrefixRef,\n      mergedDisabledRef,\n      maxReachedRef,\n      listTypeRef,\n      dragOverRef,\n      openOpenFileDialog,\n      draggerInsideRef,\n      handleFileAddition,\n      mergedDirectoryDndRef,\n      triggerStyleRef\n    } = NUpload;\n    const isImageCardTypeRef = computed(() => listTypeRef.value === 'image-card');\n\n    function handleTriggerClick() {\n      if (mergedDisabledRef.value || maxReachedRef.value) return;\n      openOpenFileDialog();\n    }\n\n    function handleTriggerDragOver(e) {\n      e.preventDefault();\n      dragOverRef.value = true;\n    }\n\n    function handleTriggerDragEnter(e) {\n      e.preventDefault();\n      dragOverRef.value = true;\n    }\n\n    function handleTriggerDragLeave(e) {\n      e.preventDefault();\n      dragOverRef.value = false;\n    }\n\n    function handleTriggerDrop(e) {\n      var _a;\n\n      e.preventDefault();\n\n      if (!draggerInsideRef.value || mergedDisabledRef.value || maxReachedRef.value) {\n        dragOverRef.value = false;\n        return;\n      }\n\n      const dataTransferItems = (_a = e.dataTransfer) === null || _a === void 0 ? void 0 : _a.items;\n\n      if (dataTransferItems === null || dataTransferItems === void 0 ? void 0 : dataTransferItems.length) {\n        void getFilesFromEntries(Array.from(dataTransferItems).map(item => item.webkitGetAsEntry()), mergedDirectoryDndRef.value).then(files => {\n          handleFileAddition(files);\n        }).finally(() => {\n          dragOverRef.value = false;\n        });\n      } else {\n        dragOverRef.value = false;\n      }\n    }\n\n    return () => {\n      var _a;\n\n      const {\n        value: mergedClsPrefix\n      } = mergedClsPrefixRef;\n      return props.abstract ? (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots, {\n        handleClick: handleTriggerClick,\n        handleDrop: handleTriggerDrop,\n        handleDragOver: handleTriggerDragOver,\n        handleDragEnter: handleTriggerDragEnter,\n        handleDragLeave: handleTriggerDragLeave\n      }) : h(\"div\", {\n        class: [`${mergedClsPrefix}-upload-trigger`, (mergedDisabledRef.value || maxReachedRef.value) && `${mergedClsPrefix}-upload-trigger--disabled`, isImageCardTypeRef.value && `${mergedClsPrefix}-upload-trigger--image-card`],\n        style: triggerStyleRef.value,\n        onClick: handleTriggerClick,\n        onDrop: handleTriggerDrop,\n        onDragover: handleTriggerDragOver,\n        onDragenter: handleTriggerDragEnter,\n        onDragleave: handleTriggerDragLeave\n      }, isImageCardTypeRef.value ? h(NUploadDragger, null, {\n        default: () => resolveSlot(slots.default, () => [h(NBaseIcon, {\n          clsPrefix: mergedClsPrefix\n        }, {\n          default: () => h(AddIcon, null)\n        })])\n      }) : slots);\n    };\n  }\n\n});","map":{"version":3,"names":["h","defineComponent","inject","computed","AddIcon","NBaseIcon","resolveSlot","throwError","uploadInjectionKey","getFilesFromEntries","NUploadDragger","name","props","abstract","Boolean","setup","slots","NUpload","mergedClsPrefixRef","mergedDisabledRef","maxReachedRef","listTypeRef","dragOverRef","openOpenFileDialog","draggerInsideRef","handleFileAddition","mergedDirectoryDndRef","triggerStyleRef","isImageCardTypeRef","value","handleTriggerClick","handleTriggerDragOver","e","preventDefault","handleTriggerDragEnter","handleTriggerDragLeave","handleTriggerDrop","_a","dataTransferItems","dataTransfer","items","length","Array","from","map","item","webkitGetAsEntry","then","files","finally","mergedClsPrefix","default","call","handleClick","handleDrop","handleDragOver","handleDragEnter","handleDragLeave","class","style","onClick","onDrop","onDragover","onDragenter","onDragleave","clsPrefix"],"sources":["D:/VCode/SHC社区管理系统/shc_community_manager_system/node_modules/naive-ui/es/upload/src/UploadTrigger.js"],"sourcesContent":["import { h, defineComponent, inject, computed } from 'vue';\nimport { AddIcon } from '../../_internal/icons';\nimport { NBaseIcon } from '../../_internal';\nimport { resolveSlot, throwError } from '../../_utils';\nimport { uploadInjectionKey } from './interface';\nimport { getFilesFromEntries } from './utils';\nimport NUploadDragger from './UploadDragger';\nexport default defineComponent({\n    name: 'UploadTrigger',\n    props: {\n        abstract: Boolean\n    },\n    setup(props, { slots }) {\n        const NUpload = inject(uploadInjectionKey, null);\n        if (!NUpload) {\n            throwError('upload-trigger', '`n-upload-trigger` must be placed inside `n-upload`.');\n        }\n        const { mergedClsPrefixRef, mergedDisabledRef, maxReachedRef, listTypeRef, dragOverRef, openOpenFileDialog, draggerInsideRef, handleFileAddition, mergedDirectoryDndRef, triggerStyleRef } = NUpload;\n        const isImageCardTypeRef = computed(() => listTypeRef.value === 'image-card');\n        function handleTriggerClick() {\n            if (mergedDisabledRef.value || maxReachedRef.value)\n                return;\n            openOpenFileDialog();\n        }\n        function handleTriggerDragOver(e) {\n            e.preventDefault();\n            dragOverRef.value = true;\n        }\n        function handleTriggerDragEnter(e) {\n            e.preventDefault();\n            dragOverRef.value = true;\n        }\n        function handleTriggerDragLeave(e) {\n            e.preventDefault();\n            dragOverRef.value = false;\n        }\n        function handleTriggerDrop(e) {\n            var _a;\n            e.preventDefault();\n            if (!draggerInsideRef.value ||\n                mergedDisabledRef.value ||\n                maxReachedRef.value) {\n                dragOverRef.value = false;\n                return;\n            }\n            const dataTransferItems = (_a = e.dataTransfer) === null || _a === void 0 ? void 0 : _a.items;\n            if (dataTransferItems === null || dataTransferItems === void 0 ? void 0 : dataTransferItems.length) {\n                void getFilesFromEntries(Array.from(dataTransferItems).map((item) => item.webkitGetAsEntry()), mergedDirectoryDndRef.value)\n                    .then((files) => {\n                    handleFileAddition(files);\n                })\n                    .finally(() => {\n                    dragOverRef.value = false;\n                });\n            }\n            else {\n                dragOverRef.value = false;\n            }\n        }\n        return () => {\n            var _a;\n            const { value: mergedClsPrefix } = mergedClsPrefixRef;\n            return props.abstract ? ((_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots, {\n                handleClick: handleTriggerClick,\n                handleDrop: handleTriggerDrop,\n                handleDragOver: handleTriggerDragOver,\n                handleDragEnter: handleTriggerDragEnter,\n                handleDragLeave: handleTriggerDragLeave\n            })) : (h(\"div\", { class: [\n                    `${mergedClsPrefix}-upload-trigger`,\n                    (mergedDisabledRef.value || maxReachedRef.value) &&\n                        `${mergedClsPrefix}-upload-trigger--disabled`,\n                    isImageCardTypeRef.value &&\n                        `${mergedClsPrefix}-upload-trigger--image-card`\n                ], style: triggerStyleRef.value, onClick: handleTriggerClick, onDrop: handleTriggerDrop, onDragover: handleTriggerDragOver, onDragenter: handleTriggerDragEnter, onDragleave: handleTriggerDragLeave }, isImageCardTypeRef.value ? (h(NUploadDragger, null, {\n                default: () => resolveSlot(slots.default, () => [\n                    h(NBaseIcon, { clsPrefix: mergedClsPrefix }, { default: () => h(AddIcon, null) })\n                ])\n            })) : (slots)));\n        };\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}