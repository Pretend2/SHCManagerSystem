{"ast":null,"code":"import { inject, computed, watch, ref } from 'vue';\nimport { addMonths, format, getYear, getMonth, startOfMonth, isValid, startOfSecond, startOfDay, set, getDate, getTime, startOfQuarter } from 'date-fns/esm';\nimport { dateArray, strictParse, yearArray, monthArray, getDefaultTime, pluckValueFromRange, quarterArray } from '../utils';\nimport { usePanelCommon, usePanelCommonProps } from './use-panel-common';\nimport { datePickerInjectionKey } from '../interface';\nimport { MONTH_ITEM_HEIGHT, START_YEAR } from '../config';\nconst useDualCalendarProps = Object.assign(Object.assign({}, usePanelCommonProps), {\n  defaultCalendarStartTime: Number,\n  defaultCalendarEndTime: Number,\n  bindCalendarMonths: Boolean,\n  actions: {\n    type: Array,\n    default: () => ['clear', 'confirm']\n  }\n}); // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n\nfunction useDualCalendar(props, type) {\n  var _a, _b;\n\n  const {\n    isDateDisabledRef,\n    isStartHourDisabledRef,\n    isEndHourDisabledRef,\n    isStartMinuteDisabledRef,\n    isEndMinuteDisabledRef,\n    isStartSecondDisabledRef,\n    isEndSecondDisabledRef,\n    isStartDateInvalidRef,\n    isEndDateInvalidRef,\n    isStartTimeInvalidRef,\n    isEndTimeInvalidRef,\n    isStartValueInvalidRef,\n    isEndValueInvalidRef,\n    isRangeInvalidRef,\n    localeRef,\n    rangesRef,\n    closeOnSelectRef,\n    updateValueOnCloseRef,\n    firstDayOfWeekRef,\n    datePickerSlots // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n  } = inject(datePickerInjectionKey);\n  const validation = {\n    isDateDisabled: isDateDisabledRef,\n    isStartHourDisabled: isStartHourDisabledRef,\n    isEndHourDisabled: isEndHourDisabledRef,\n    isStartMinuteDisabled: isStartMinuteDisabledRef,\n    isEndMinuteDisabled: isEndMinuteDisabledRef,\n    isStartSecondDisabled: isStartSecondDisabledRef,\n    isEndSecondDisabled: isEndSecondDisabledRef,\n    isStartDateInvalid: isStartDateInvalidRef,\n    isEndDateInvalid: isEndDateInvalidRef,\n    isStartTimeInvalid: isStartTimeInvalidRef,\n    isEndTimeInvalid: isEndTimeInvalidRef,\n    isStartValueInvalid: isStartValueInvalidRef,\n    isEndValueInvalid: isEndValueInvalidRef,\n    isRangeInvalid: isRangeInvalidRef\n  };\n  const panelCommon = usePanelCommon(props);\n  const startDatesElRef = ref(null);\n  const endDatesElRef = ref(null);\n  const startYearScrollbarRef = ref(null);\n  const endYearScrollbarRef = ref(null);\n  const startYearVlRef = ref(null);\n  const endYearVlRef = ref(null);\n  const startMonthScrollbarRef = ref(null);\n  const endMonthScrollbarRef = ref(null);\n  const {\n    value\n  } = props;\n  const defaultCalendarStartTime = (_a = props.defaultCalendarStartTime) !== null && _a !== void 0 ? _a : Array.isArray(value) && typeof value[0] === 'number' ? value[0] : Date.now();\n  const startCalendarDateTimeRef = ref(defaultCalendarStartTime);\n  const endCalendarDateTimeRef = ref((_b = props.defaultCalendarEndTime) !== null && _b !== void 0 ? _b : Array.isArray(value) && typeof value[1] === 'number' ? value[1] : getTime(addMonths(defaultCalendarStartTime, 1)));\n  adjustCalendarTimes(true);\n  const nowRef = ref(Date.now());\n  const isSelectingRef = ref(false);\n  const memorizedStartDateTimeRef = ref(0);\n  const mergedDateFormatRef = computed(() => props.dateFormat || localeRef.value.dateFormat);\n  const startDateInput = ref(Array.isArray(value) ? format(value[0], mergedDateFormatRef.value, panelCommon.dateFnsOptions.value) : '');\n  const endDateInputRef = ref(Array.isArray(value) ? format(value[1], mergedDateFormatRef.value, panelCommon.dateFnsOptions.value) : ''); // derived computed\n\n  const selectingPhaseRef = computed(() => {\n    if (isSelectingRef.value) return 'end';else return 'start';\n  });\n  const startDateArrayRef = computed(() => {\n    var _a;\n\n    return dateArray(startCalendarDateTimeRef.value, props.value, nowRef.value, (_a = firstDayOfWeekRef.value) !== null && _a !== void 0 ? _a : localeRef.value.firstDayOfWeek);\n  });\n  const endDateArrayRef = computed(() => {\n    var _a;\n\n    return dateArray(endCalendarDateTimeRef.value, props.value, nowRef.value, (_a = firstDayOfWeekRef.value) !== null && _a !== void 0 ? _a : localeRef.value.firstDayOfWeek);\n  });\n  const weekdaysRef = computed(() => {\n    return startDateArrayRef.value.slice(0, 7).map(dateItem => {\n      const {\n        ts\n      } = dateItem;\n      return format(ts, localeRef.value.dayFormat, panelCommon.dateFnsOptions.value);\n    });\n  });\n  const startCalendarMonthRef = computed(() => {\n    return format(startCalendarDateTimeRef.value, localeRef.value.monthFormat, panelCommon.dateFnsOptions.value);\n  });\n  const endCalendarMonthRef = computed(() => {\n    return format(endCalendarDateTimeRef.value, localeRef.value.monthFormat, panelCommon.dateFnsOptions.value);\n  });\n  const startCalendarYearRef = computed(() => {\n    return format(startCalendarDateTimeRef.value, localeRef.value.yearFormat, panelCommon.dateFnsOptions.value);\n  });\n  const endCalendarYearRef = computed(() => {\n    return format(endCalendarDateTimeRef.value, localeRef.value.yearFormat, panelCommon.dateFnsOptions.value);\n  });\n  const startTimeValueRef = computed(() => {\n    const {\n      value\n    } = props;\n    if (Array.isArray(value)) return value[0];\n    return null;\n  });\n  const endTimeValueRef = computed(() => {\n    const {\n      value\n    } = props;\n    if (Array.isArray(value)) return value[1];\n    return null;\n  });\n  const shortcutsRef = computed(() => {\n    const {\n      shortcuts\n    } = props;\n    return shortcuts || rangesRef.value;\n  });\n  const startYearArrayRef = computed(() => {\n    return yearArray(pluckValueFromRange(props.value, 'start'), nowRef.value);\n  });\n  const endYearArrayRef = computed(() => {\n    return yearArray(pluckValueFromRange(props.value, 'end'), nowRef.value);\n  });\n  const startQuarterArrayRef = computed(() => {\n    const startValue = pluckValueFromRange(props.value, 'start');\n    return quarterArray(startValue !== null && startValue !== void 0 ? startValue : Date.now(), startValue, nowRef.value);\n  });\n  const endQuarterArrayRef = computed(() => {\n    const endValue = pluckValueFromRange(props.value, 'end');\n    return quarterArray(endValue !== null && endValue !== void 0 ? endValue : Date.now(), endValue, nowRef.value);\n  });\n  const startMonthArrayRef = computed(() => {\n    const startValue = pluckValueFromRange(props.value, 'start');\n    return monthArray(startValue !== null && startValue !== void 0 ? startValue : Date.now(), startValue, nowRef.value);\n  });\n  const endMonthArrayRef = computed(() => {\n    const endValue = pluckValueFromRange(props.value, 'end');\n    return monthArray(endValue !== null && endValue !== void 0 ? endValue : Date.now(), endValue, nowRef.value);\n  });\n  watch(computed(() => props.value), value => {\n    if (value !== null && Array.isArray(value)) {\n      const [startMoment, endMoment] = value;\n      startDateInput.value = format(startMoment, mergedDateFormatRef.value, panelCommon.dateFnsOptions.value);\n      endDateInputRef.value = format(endMoment, mergedDateFormatRef.value, panelCommon.dateFnsOptions.value);\n\n      if (!isSelectingRef.value) {\n        syncCalendarTimeWithValue(value);\n      }\n    } else {\n      startDateInput.value = '';\n      endDateInputRef.value = '';\n    }\n  });\n\n  function handleCalendarChange(value, oldValue) {\n    if (type === 'daterange' || type === 'datetimerange') {\n      if (getYear(value) !== getYear(oldValue) || getMonth(value) !== getMonth(oldValue)) {\n        panelCommon.disableTransitionOneTick();\n      }\n    }\n  }\n\n  watch(startCalendarDateTimeRef, handleCalendarChange);\n  watch(endCalendarDateTimeRef, handleCalendarChange); // change calendar\n\n  function adjustCalendarTimes(byStartCalendarTime) {\n    const startTime = startOfMonth(startCalendarDateTimeRef.value);\n    const endTime = startOfMonth(endCalendarDateTimeRef.value);\n\n    if (props.bindCalendarMonths || startTime >= endTime) {\n      if (byStartCalendarTime) {\n        endCalendarDateTimeRef.value = getTime(addMonths(startTime, 1));\n      } else {\n        startCalendarDateTimeRef.value = getTime(addMonths(endTime, -1));\n      }\n    }\n  }\n\n  function startCalendarNextYear() {\n    startCalendarDateTimeRef.value = getTime(addMonths(startCalendarDateTimeRef.value, 12));\n    adjustCalendarTimes(true);\n  }\n\n  function startCalendarPrevYear() {\n    startCalendarDateTimeRef.value = getTime(addMonths(startCalendarDateTimeRef.value, -12));\n    adjustCalendarTimes(true);\n  }\n\n  function startCalendarNextMonth() {\n    startCalendarDateTimeRef.value = getTime(addMonths(startCalendarDateTimeRef.value, 1));\n    adjustCalendarTimes(true);\n  }\n\n  function startCalendarPrevMonth() {\n    startCalendarDateTimeRef.value = getTime(addMonths(startCalendarDateTimeRef.value, -1));\n    adjustCalendarTimes(true);\n  }\n\n  function endCalendarNextYear() {\n    endCalendarDateTimeRef.value = getTime(addMonths(endCalendarDateTimeRef.value, 12));\n    adjustCalendarTimes(false);\n  }\n\n  function endCalendarPrevYear() {\n    endCalendarDateTimeRef.value = getTime(addMonths(endCalendarDateTimeRef.value, -12));\n    adjustCalendarTimes(false);\n  }\n\n  function endCalendarNextMonth() {\n    endCalendarDateTimeRef.value = getTime(addMonths(endCalendarDateTimeRef.value, 1));\n    adjustCalendarTimes(false);\n  }\n\n  function endCalendarPrevMonth() {\n    endCalendarDateTimeRef.value = getTime(addMonths(endCalendarDateTimeRef.value, -1));\n    adjustCalendarTimes(false);\n  }\n\n  function onUpdateStartCalendarValue(value) {\n    startCalendarDateTimeRef.value = value;\n    adjustCalendarTimes(true);\n  }\n\n  function onUpdateEndCalendarValue(value) {\n    endCalendarDateTimeRef.value = value;\n    adjustCalendarTimes(false);\n  } // The function is used on date panel, not the date-picker value validation\n\n\n  function mergedIsDateDisabled(ts) {\n    const isDateDisabled = isDateDisabledRef.value;\n    if (!isDateDisabled) return false;\n    if (!Array.isArray(props.value)) return isDateDisabled(ts, 'start', null);\n\n    if (selectingPhaseRef.value === 'start') {\n      // before you really start to select\n      return isDateDisabled(ts, 'start', null);\n    } else {\n      const {\n        value: memorizedStartDateTime\n      } = memorizedStartDateTimeRef; // after you starting to select\n\n      if (ts < memorizedStartDateTimeRef.value) {\n        return isDateDisabled(ts, 'start', [memorizedStartDateTime, memorizedStartDateTime]);\n      } else {\n        return isDateDisabled(ts, 'end', [memorizedStartDateTime, memorizedStartDateTime]);\n      }\n    }\n  }\n\n  function syncCalendarTimeWithValue(value) {\n    if (value === null) return;\n    const [startMoment, endMoment] = value;\n    startCalendarDateTimeRef.value = startMoment;\n\n    if (startOfMonth(endMoment) <= startOfMonth(startMoment)) {\n      endCalendarDateTimeRef.value = getTime(startOfMonth(addMonths(startMoment, 1)));\n    } else {\n      endCalendarDateTimeRef.value = getTime(startOfMonth(endMoment));\n    }\n  } // for daterange & datetimerange\n\n\n  function handleDateClick(dateItem) {\n    if (!isSelectingRef.value) {\n      isSelectingRef.value = true;\n      memorizedStartDateTimeRef.value = dateItem.ts;\n      changeStartEndTime(dateItem.ts, dateItem.ts, 'done');\n    } else {\n      isSelectingRef.value = false;\n      const {\n        value\n      } = props;\n\n      if (props.panel && Array.isArray(value)) {\n        changeStartEndTime(value[0], value[1], 'done');\n      } else {\n        if (closeOnSelectRef.value && type === 'daterange') {\n          if (updateValueOnCloseRef.value) {\n            closeCalendar();\n          } else {\n            handleConfirmClick();\n          }\n        }\n      }\n    }\n  }\n\n  function handleDateMouseEnter(dateItem) {\n    if (isSelectingRef.value) {\n      if (mergedIsDateDisabled(dateItem.ts)) return;\n\n      if (dateItem.ts >= memorizedStartDateTimeRef.value) {\n        changeStartEndTime(memorizedStartDateTimeRef.value, dateItem.ts, 'wipPreview');\n      } else {\n        changeStartEndTime(dateItem.ts, memorizedStartDateTimeRef.value, 'wipPreview');\n      }\n    }\n  }\n\n  function handleConfirmClick() {\n    if (isRangeInvalidRef.value) {\n      return;\n    }\n\n    panelCommon.doConfirm();\n    closeCalendar();\n  }\n\n  function closeCalendar() {\n    isSelectingRef.value = false;\n\n    if (props.active) {\n      panelCommon.doClose();\n    }\n  }\n\n  function changeStartDateTime(time) {\n    if (typeof time !== 'number') {\n      time = getTime(time);\n    }\n\n    if (props.value === null) {\n      panelCommon.doUpdateValue([time, time], props.panel);\n    } else if (Array.isArray(props.value)) {\n      panelCommon.doUpdateValue([time, Math.max(props.value[1], time)], props.panel);\n    }\n  }\n\n  function changeEndDateTime(time) {\n    if (typeof time !== 'number') {\n      time = getTime(time);\n    }\n\n    if (props.value === null) {\n      panelCommon.doUpdateValue([time, time], props.panel);\n    } else if (Array.isArray(props.value)) {\n      panelCommon.doUpdateValue([Math.min(props.value[0], time), time], props.panel);\n    }\n  }\n\n  function changeStartEndTime(startTime, endTime, source) {\n    if (typeof startTime !== 'number') {\n      startTime = getTime(startTime);\n    }\n\n    if (source !== 'shortcutPreview') {\n      let startDefaultTime;\n      let endDefaultTime;\n\n      if (type === 'datetimerange') {\n        const {\n          defaultTime\n        } = props;\n\n        if (Array.isArray(defaultTime)) {\n          startDefaultTime = getDefaultTime(defaultTime[0]);\n          endDefaultTime = getDefaultTime(defaultTime[1]);\n        } else {\n          startDefaultTime = getDefaultTime(defaultTime);\n          endDefaultTime = startDefaultTime;\n        }\n      }\n\n      if (startDefaultTime) {\n        startTime = getTime(set(startTime, startDefaultTime));\n      }\n\n      if (endDefaultTime) {\n        endTime = getTime(set(endTime, endDefaultTime));\n      }\n    }\n\n    panelCommon.doUpdateValue([startTime, endTime], props.panel && source === 'done');\n  }\n\n  function sanitizeValue(datetime) {\n    if (type === 'datetimerange') {\n      return getTime(startOfSecond(datetime));\n    } else if (type === 'monthrange') {\n      return getTime(startOfMonth(datetime));\n    } else {\n      // daterange\n      return getTime(startOfDay(datetime));\n    }\n  }\n\n  function handleStartDateInput(value) {\n    const date = strictParse(value, mergedDateFormatRef.value, new Date(), panelCommon.dateFnsOptions.value);\n\n    if (isValid(date)) {\n      if (!props.value) {\n        const newValue = set(new Date(), {\n          year: getYear(date),\n          month: getMonth(date),\n          date: getDate(date)\n        });\n        changeStartDateTime(sanitizeValue(getTime(newValue)));\n      } else if (Array.isArray(props.value)) {\n        const newValue = set(props.value[0], {\n          year: getYear(date),\n          month: getMonth(date),\n          date: getDate(date)\n        });\n        changeStartDateTime(sanitizeValue(getTime(newValue)));\n      }\n    } else {\n      startDateInput.value = value;\n    }\n  }\n\n  function handleEndDateInput(value) {\n    /** strict check when input */\n    const date = strictParse(value, mergedDateFormatRef.value, new Date(), panelCommon.dateFnsOptions.value);\n\n    if (isValid(date)) {\n      if (props.value === null) {\n        const newValue = set(new Date(), {\n          year: getYear(date),\n          month: getMonth(date),\n          date: getDate(date)\n        });\n        changeEndDateTime(sanitizeValue(getTime(newValue)));\n      } else if (Array.isArray(props.value)) {\n        const newValue = set(props.value[1], {\n          year: getYear(date),\n          month: getMonth(date),\n          date: getDate(date)\n        });\n        changeEndDateTime(sanitizeValue(getTime(newValue)));\n      }\n    } else {\n      endDateInputRef.value = value;\n    }\n  }\n\n  function handleStartDateInputBlur() {\n    const date = strictParse(startDateInput.value, mergedDateFormatRef.value, new Date(), panelCommon.dateFnsOptions.value);\n    const {\n      value\n    } = props;\n\n    if (isValid(date)) {\n      if (value === null) {\n        const newValue = set(new Date(), {\n          year: getYear(date),\n          month: getMonth(date),\n          date: getDate(date)\n        });\n        changeStartDateTime(sanitizeValue(getTime(newValue)));\n      } else if (Array.isArray(value)) {\n        const newValue = set(value[0], {\n          year: getYear(date),\n          month: getMonth(date),\n          date: getDate(date)\n        });\n        changeStartDateTime(sanitizeValue(getTime(newValue)));\n      }\n    } else {\n      refreshDisplayDateString();\n    }\n  }\n\n  function handleEndDateInputBlur() {\n    const date = strictParse(endDateInputRef.value, mergedDateFormatRef.value, new Date(), panelCommon.dateFnsOptions.value);\n    const {\n      value\n    } = props;\n\n    if (isValid(date)) {\n      if (value === null) {\n        const newValue = set(new Date(), {\n          year: getYear(date),\n          month: getMonth(date),\n          date: getDate(date)\n        });\n        changeEndDateTime(sanitizeValue(getTime(newValue)));\n      } else if (Array.isArray(value)) {\n        const newValue = set(value[1], {\n          year: getYear(date),\n          month: getMonth(date),\n          date: getDate(date)\n        });\n        changeEndDateTime(sanitizeValue(getTime(newValue)));\n      }\n    } else {\n      refreshDisplayDateString();\n    }\n  }\n\n  function refreshDisplayDateString(times) {\n    // If not selected, display nothing,\n    // else update datetime related string\n    const {\n      value\n    } = props;\n\n    if (value === null || !Array.isArray(value)) {\n      startDateInput.value = '';\n      endDateInputRef.value = '';\n      return;\n    }\n\n    if (times === undefined) {\n      times = value;\n    }\n\n    startDateInput.value = format(times[0], mergedDateFormatRef.value, panelCommon.dateFnsOptions.value);\n    endDateInputRef.value = format(times[1], mergedDateFormatRef.value, panelCommon.dateFnsOptions.value);\n  }\n\n  function handleStartTimePickerChange(value) {\n    if (value === null) return;\n    changeStartDateTime(value);\n  }\n\n  function handleEndTimePickerChange(value) {\n    if (value === null) return;\n    changeEndDateTime(value);\n  }\n\n  function handleRangeShortcutMouseenter(shortcut) {\n    panelCommon.cachePendingValue();\n    const shortcutValue = panelCommon.getShortcutValue(shortcut);\n    if (!Array.isArray(shortcutValue)) return;\n    changeStartEndTime(shortcutValue[0], shortcutValue[1], 'shortcutPreview');\n  }\n\n  function handleRangeShortcutClick(shortcut) {\n    const shortcutValue = panelCommon.getShortcutValue(shortcut);\n    if (!Array.isArray(shortcutValue)) return;\n    changeStartEndTime(shortcutValue[0], shortcutValue[1], 'done');\n    panelCommon.clearPendingValue();\n    handleConfirmClick();\n  }\n\n  function justifyColumnsScrollState(value, type) {\n    const mergedValue = value === undefined ? props.value : value;\n\n    if (value === undefined || type === 'start') {\n      if (startMonthScrollbarRef.value) {\n        const monthIndex = !Array.isArray(mergedValue) ? getMonth(Date.now()) : getMonth(mergedValue[0]);\n        startMonthScrollbarRef.value.scrollTo({\n          debounce: false,\n          index: monthIndex,\n          elSize: MONTH_ITEM_HEIGHT\n        });\n      }\n\n      if (startYearVlRef.value) {\n        const yearIndex = (!Array.isArray(mergedValue) ? getYear(Date.now()) : getYear(mergedValue[0])) - START_YEAR;\n        startYearVlRef.value.scrollTo({\n          index: yearIndex,\n          debounce: false\n        });\n      }\n    }\n\n    if (value === undefined || type === 'end') {\n      if (endMonthScrollbarRef.value) {\n        const monthIndex = !Array.isArray(mergedValue) ? getMonth(Date.now()) : getMonth(mergedValue[1]);\n        endMonthScrollbarRef.value.scrollTo({\n          debounce: false,\n          index: monthIndex,\n          elSize: MONTH_ITEM_HEIGHT\n        });\n      }\n\n      if (endYearVlRef.value) {\n        const yearIndex = (!Array.isArray(mergedValue) ? getYear(Date.now()) : getYear(mergedValue[1])) - START_YEAR;\n        endYearVlRef.value.scrollTo({\n          index: yearIndex,\n          debounce: false\n        });\n      }\n    }\n  } // only for monthrange\n\n\n  function handleColItemClick(dateItem, clickType) {\n    const {\n      value\n    } = props;\n    const noCurrentValue = !Array.isArray(value);\n    const itemTs = dateItem.type === 'year' && type !== 'yearrange' ? noCurrentValue ? set(dateItem.ts, {\n      month: getMonth(type === 'quarterrange' ? startOfQuarter(new Date()) : new Date())\n    }).valueOf() : set(dateItem.ts, {\n      month: getMonth(type === 'quarterrange' ? startOfQuarter(value[clickType === 'start' ? 0 : 1]) : value[clickType === 'start' ? 0 : 1])\n    }).valueOf() : dateItem.ts;\n\n    if (noCurrentValue) {\n      const partialValue = sanitizeValue(itemTs);\n      const nextValue = [partialValue, partialValue];\n      panelCommon.doUpdateValue(nextValue, props.panel);\n      justifyColumnsScrollState(nextValue, 'start');\n      justifyColumnsScrollState(nextValue, 'end');\n      panelCommon.disableTransitionOneTick();\n      return;\n    }\n\n    const nextValue = [value[0], value[1]];\n    let otherPartsChanged = false;\n\n    if (clickType === 'start') {\n      nextValue[0] = sanitizeValue(itemTs);\n\n      if (nextValue[0] > nextValue[1]) {\n        nextValue[1] = nextValue[0];\n        otherPartsChanged = true;\n      }\n    } else {\n      nextValue[1] = sanitizeValue(itemTs);\n\n      if (nextValue[0] > nextValue[1]) {\n        nextValue[0] = nextValue[1];\n        otherPartsChanged = true;\n      }\n    }\n\n    panelCommon.doUpdateValue(nextValue, props.panel);\n\n    switch (type) {\n      case 'monthrange':\n      case 'quarterrange':\n        panelCommon.disableTransitionOneTick();\n\n        if (otherPartsChanged) {\n          justifyColumnsScrollState(nextValue, 'start');\n          justifyColumnsScrollState(nextValue, 'end');\n        } else {\n          justifyColumnsScrollState(nextValue, clickType);\n        }\n\n        break;\n\n      case 'yearrange':\n        panelCommon.disableTransitionOneTick();\n        justifyColumnsScrollState(nextValue, 'start');\n        justifyColumnsScrollState(nextValue, 'end');\n    }\n  }\n\n  function handleStartYearVlScroll() {\n    var _a;\n\n    (_a = startYearScrollbarRef.value) === null || _a === void 0 ? void 0 : _a.sync();\n  }\n\n  function handleEndYearVlScroll() {\n    var _a;\n\n    (_a = endYearScrollbarRef.value) === null || _a === void 0 ? void 0 : _a.sync();\n  }\n\n  function virtualListContainer(type) {\n    var _a, _b;\n\n    if (type === 'start') {\n      return (_a = startYearVlRef.value) === null || _a === void 0 ? void 0 : _a.listElRef;\n    } else {\n      return (_b = endYearVlRef.value) === null || _b === void 0 ? void 0 : _b.listElRef;\n    }\n  }\n\n  function virtualListContent(type) {\n    var _a, _b;\n\n    if (type === 'start') {\n      return (_a = startYearVlRef.value) === null || _a === void 0 ? void 0 : _a.itemsElRef;\n    } else {\n      return (_b = endYearVlRef.value) === null || _b === void 0 ? void 0 : _b.itemsElRef;\n    }\n  }\n\n  const childComponentRefs = {\n    startYearVlRef,\n    endYearVlRef,\n    startMonthScrollbarRef,\n    endMonthScrollbarRef,\n    startYearScrollbarRef,\n    endYearScrollbarRef\n  };\n  return Object.assign(Object.assign(Object.assign(Object.assign({\n    startDatesElRef,\n    endDatesElRef,\n    handleDateClick,\n    handleColItemClick,\n    handleDateMouseEnter,\n    handleConfirmClick,\n    startCalendarPrevYear,\n    startCalendarPrevMonth,\n    startCalendarNextYear,\n    startCalendarNextMonth,\n    endCalendarPrevYear,\n    endCalendarPrevMonth,\n    endCalendarNextMonth,\n    endCalendarNextYear,\n    mergedIsDateDisabled,\n    changeStartEndTime,\n    ranges: rangesRef,\n    startCalendarMonth: startCalendarMonthRef,\n    startCalendarYear: startCalendarYearRef,\n    endCalendarMonth: endCalendarMonthRef,\n    endCalendarYear: endCalendarYearRef,\n    weekdays: weekdaysRef,\n    startDateArray: startDateArrayRef,\n    endDateArray: endDateArrayRef,\n    startYearArray: startYearArrayRef,\n    startMonthArray: startMonthArrayRef,\n    startQuarterArray: startQuarterArrayRef,\n    endYearArray: endYearArrayRef,\n    endMonthArray: endMonthArrayRef,\n    endQuarterArray: endQuarterArrayRef,\n    isSelecting: isSelectingRef,\n    handleRangeShortcutMouseenter,\n    handleRangeShortcutClick\n  }, panelCommon), validation), childComponentRefs), {\n    // datetimerangeonly\n    startDateDisplayString: startDateInput,\n    endDateInput: endDateInputRef,\n    timePickerSize: panelCommon.timePickerSize,\n    startTimeValue: startTimeValueRef,\n    endTimeValue: endTimeValueRef,\n    datePickerSlots,\n    shortcuts: shortcutsRef,\n    startCalendarDateTime: startCalendarDateTimeRef,\n    endCalendarDateTime: endCalendarDateTimeRef,\n    justifyColumnsScrollState,\n    handleFocusDetectorFocus: panelCommon.handleFocusDetectorFocus,\n    handleStartTimePickerChange,\n    handleEndTimePickerChange,\n    handleStartDateInput,\n    handleStartDateInputBlur,\n    handleEndDateInput,\n    handleEndDateInputBlur,\n    handleStartYearVlScroll,\n    handleEndYearVlScroll,\n    virtualListContainer,\n    virtualListContent,\n    onUpdateStartCalendarValue,\n    onUpdateEndCalendarValue\n  });\n}\n\nexport { useDualCalendar, useDualCalendarProps };","map":{"version":3,"names":["inject","computed","watch","ref","addMonths","format","getYear","getMonth","startOfMonth","isValid","startOfSecond","startOfDay","set","getDate","getTime","startOfQuarter","dateArray","strictParse","yearArray","monthArray","getDefaultTime","pluckValueFromRange","quarterArray","usePanelCommon","usePanelCommonProps","datePickerInjectionKey","MONTH_ITEM_HEIGHT","START_YEAR","useDualCalendarProps","Object","assign","defaultCalendarStartTime","Number","defaultCalendarEndTime","bindCalendarMonths","Boolean","actions","type","Array","default","useDualCalendar","props","_a","_b","isDateDisabledRef","isStartHourDisabledRef","isEndHourDisabledRef","isStartMinuteDisabledRef","isEndMinuteDisabledRef","isStartSecondDisabledRef","isEndSecondDisabledRef","isStartDateInvalidRef","isEndDateInvalidRef","isStartTimeInvalidRef","isEndTimeInvalidRef","isStartValueInvalidRef","isEndValueInvalidRef","isRangeInvalidRef","localeRef","rangesRef","closeOnSelectRef","updateValueOnCloseRef","firstDayOfWeekRef","datePickerSlots","validation","isDateDisabled","isStartHourDisabled","isEndHourDisabled","isStartMinuteDisabled","isEndMinuteDisabled","isStartSecondDisabled","isEndSecondDisabled","isStartDateInvalid","isEndDateInvalid","isStartTimeInvalid","isEndTimeInvalid","isStartValueInvalid","isEndValueInvalid","isRangeInvalid","panelCommon","startDatesElRef","endDatesElRef","startYearScrollbarRef","endYearScrollbarRef","startYearVlRef","endYearVlRef","startMonthScrollbarRef","endMonthScrollbarRef","value","isArray","Date","now","startCalendarDateTimeRef","endCalendarDateTimeRef","adjustCalendarTimes","nowRef","isSelectingRef","memorizedStartDateTimeRef","mergedDateFormatRef","dateFormat","startDateInput","dateFnsOptions","endDateInputRef","selectingPhaseRef","startDateArrayRef","firstDayOfWeek","endDateArrayRef","weekdaysRef","slice","map","dateItem","ts","dayFormat","startCalendarMonthRef","monthFormat","endCalendarMonthRef","startCalendarYearRef","yearFormat","endCalendarYearRef","startTimeValueRef","endTimeValueRef","shortcutsRef","shortcuts","startYearArrayRef","endYearArrayRef","startQuarterArrayRef","startValue","endQuarterArrayRef","endValue","startMonthArrayRef","endMonthArrayRef","startMoment","endMoment","syncCalendarTimeWithValue","handleCalendarChange","oldValue","disableTransitionOneTick","byStartCalendarTime","startTime","endTime","startCalendarNextYear","startCalendarPrevYear","startCalendarNextMonth","startCalendarPrevMonth","endCalendarNextYear","endCalendarPrevYear","endCalendarNextMonth","endCalendarPrevMonth","onUpdateStartCalendarValue","onUpdateEndCalendarValue","mergedIsDateDisabled","memorizedStartDateTime","handleDateClick","changeStartEndTime","panel","closeCalendar","handleConfirmClick","handleDateMouseEnter","doConfirm","active","doClose","changeStartDateTime","time","doUpdateValue","Math","max","changeEndDateTime","min","source","startDefaultTime","endDefaultTime","defaultTime","sanitizeValue","datetime","handleStartDateInput","date","newValue","year","month","handleEndDateInput","handleStartDateInputBlur","refreshDisplayDateString","handleEndDateInputBlur","times","undefined","handleStartTimePickerChange","handleEndTimePickerChange","handleRangeShortcutMouseenter","shortcut","cachePendingValue","shortcutValue","getShortcutValue","handleRangeShortcutClick","clearPendingValue","justifyColumnsScrollState","mergedValue","monthIndex","scrollTo","debounce","index","elSize","yearIndex","handleColItemClick","clickType","noCurrentValue","itemTs","valueOf","partialValue","nextValue","otherPartsChanged","handleStartYearVlScroll","sync","handleEndYearVlScroll","virtualListContainer","listElRef","virtualListContent","itemsElRef","childComponentRefs","ranges","startCalendarMonth","startCalendarYear","endCalendarMonth","endCalendarYear","weekdays","startDateArray","endDateArray","startYearArray","startMonthArray","startQuarterArray","endYearArray","endMonthArray","endQuarterArray","isSelecting","startDateDisplayString","endDateInput","timePickerSize","startTimeValue","endTimeValue","startCalendarDateTime","endCalendarDateTime","handleFocusDetectorFocus"],"sources":["D:/VCode/SHC社区管理系统/shc_community_manager_system/node_modules/naive-ui/es/date-picker/src/panel/use-dual-calendar.js"],"sourcesContent":["import { inject, computed, watch, ref } from 'vue';\nimport { addMonths, format, getYear, getMonth, startOfMonth, isValid, startOfSecond, startOfDay, set, getDate, getTime, startOfQuarter } from 'date-fns/esm';\nimport { dateArray, strictParse, yearArray, monthArray, getDefaultTime, pluckValueFromRange, quarterArray } from '../utils';\nimport { usePanelCommon, usePanelCommonProps } from './use-panel-common';\nimport { datePickerInjectionKey } from '../interface';\nimport { MONTH_ITEM_HEIGHT, START_YEAR } from '../config';\nconst useDualCalendarProps = Object.assign(Object.assign({}, usePanelCommonProps), { defaultCalendarStartTime: Number, defaultCalendarEndTime: Number, bindCalendarMonths: Boolean, actions: {\n        type: Array,\n        default: () => ['clear', 'confirm']\n    } });\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nfunction useDualCalendar(props, type) {\n    var _a, _b;\n    const { isDateDisabledRef, isStartHourDisabledRef, isEndHourDisabledRef, isStartMinuteDisabledRef, isEndMinuteDisabledRef, isStartSecondDisabledRef, isEndSecondDisabledRef, isStartDateInvalidRef, isEndDateInvalidRef, isStartTimeInvalidRef, isEndTimeInvalidRef, isStartValueInvalidRef, isEndValueInvalidRef, isRangeInvalidRef, localeRef, rangesRef, closeOnSelectRef, updateValueOnCloseRef, firstDayOfWeekRef, datePickerSlots\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n     } = inject(datePickerInjectionKey);\n    const validation = {\n        isDateDisabled: isDateDisabledRef,\n        isStartHourDisabled: isStartHourDisabledRef,\n        isEndHourDisabled: isEndHourDisabledRef,\n        isStartMinuteDisabled: isStartMinuteDisabledRef,\n        isEndMinuteDisabled: isEndMinuteDisabledRef,\n        isStartSecondDisabled: isStartSecondDisabledRef,\n        isEndSecondDisabled: isEndSecondDisabledRef,\n        isStartDateInvalid: isStartDateInvalidRef,\n        isEndDateInvalid: isEndDateInvalidRef,\n        isStartTimeInvalid: isStartTimeInvalidRef,\n        isEndTimeInvalid: isEndTimeInvalidRef,\n        isStartValueInvalid: isStartValueInvalidRef,\n        isEndValueInvalid: isEndValueInvalidRef,\n        isRangeInvalid: isRangeInvalidRef\n    };\n    const panelCommon = usePanelCommon(props);\n    const startDatesElRef = ref(null);\n    const endDatesElRef = ref(null);\n    const startYearScrollbarRef = ref(null);\n    const endYearScrollbarRef = ref(null);\n    const startYearVlRef = ref(null);\n    const endYearVlRef = ref(null);\n    const startMonthScrollbarRef = ref(null);\n    const endMonthScrollbarRef = ref(null);\n    const { value } = props;\n    const defaultCalendarStartTime = (_a = props.defaultCalendarStartTime) !== null && _a !== void 0 ? _a : (Array.isArray(value) && typeof value[0] === 'number'\n        ? value[0]\n        : Date.now());\n    const startCalendarDateTimeRef = ref(defaultCalendarStartTime);\n    const endCalendarDateTimeRef = ref((_b = props.defaultCalendarEndTime) !== null && _b !== void 0 ? _b : (Array.isArray(value) && typeof value[1] === 'number'\n        ? value[1]\n        : getTime(addMonths(defaultCalendarStartTime, 1))));\n    adjustCalendarTimes(true);\n    const nowRef = ref(Date.now());\n    const isSelectingRef = ref(false);\n    const memorizedStartDateTimeRef = ref(0);\n    const mergedDateFormatRef = computed(() => props.dateFormat || localeRef.value.dateFormat);\n    const startDateInput = ref(Array.isArray(value)\n        ? format(value[0], mergedDateFormatRef.value, panelCommon.dateFnsOptions.value)\n        : '');\n    const endDateInputRef = ref(Array.isArray(value)\n        ? format(value[1], mergedDateFormatRef.value, panelCommon.dateFnsOptions.value)\n        : '');\n    // derived computed\n    const selectingPhaseRef = computed(() => {\n        if (isSelectingRef.value)\n            return 'end';\n        else\n            return 'start';\n    });\n    const startDateArrayRef = computed(() => {\n        var _a;\n        return dateArray(startCalendarDateTimeRef.value, props.value, nowRef.value, (_a = firstDayOfWeekRef.value) !== null && _a !== void 0 ? _a : localeRef.value.firstDayOfWeek);\n    });\n    const endDateArrayRef = computed(() => {\n        var _a;\n        return dateArray(endCalendarDateTimeRef.value, props.value, nowRef.value, (_a = firstDayOfWeekRef.value) !== null && _a !== void 0 ? _a : localeRef.value.firstDayOfWeek);\n    });\n    const weekdaysRef = computed(() => {\n        return startDateArrayRef.value.slice(0, 7).map((dateItem) => {\n            const { ts } = dateItem;\n            return format(ts, localeRef.value.dayFormat, panelCommon.dateFnsOptions.value);\n        });\n    });\n    const startCalendarMonthRef = computed(() => {\n        return format(startCalendarDateTimeRef.value, localeRef.value.monthFormat, panelCommon.dateFnsOptions.value);\n    });\n    const endCalendarMonthRef = computed(() => {\n        return format(endCalendarDateTimeRef.value, localeRef.value.monthFormat, panelCommon.dateFnsOptions.value);\n    });\n    const startCalendarYearRef = computed(() => {\n        return format(startCalendarDateTimeRef.value, localeRef.value.yearFormat, panelCommon.dateFnsOptions.value);\n    });\n    const endCalendarYearRef = computed(() => {\n        return format(endCalendarDateTimeRef.value, localeRef.value.yearFormat, panelCommon.dateFnsOptions.value);\n    });\n    const startTimeValueRef = computed(() => {\n        const { value } = props;\n        if (Array.isArray(value))\n            return value[0];\n        return null;\n    });\n    const endTimeValueRef = computed(() => {\n        const { value } = props;\n        if (Array.isArray(value))\n            return value[1];\n        return null;\n    });\n    const shortcutsRef = computed(() => {\n        const { shortcuts } = props;\n        return shortcuts || rangesRef.value;\n    });\n    const startYearArrayRef = computed(() => {\n        return yearArray(pluckValueFromRange(props.value, 'start'), nowRef.value);\n    });\n    const endYearArrayRef = computed(() => {\n        return yearArray(pluckValueFromRange(props.value, 'end'), nowRef.value);\n    });\n    const startQuarterArrayRef = computed(() => {\n        const startValue = pluckValueFromRange(props.value, 'start');\n        return quarterArray(startValue !== null && startValue !== void 0 ? startValue : Date.now(), startValue, nowRef.value);\n    });\n    const endQuarterArrayRef = computed(() => {\n        const endValue = pluckValueFromRange(props.value, 'end');\n        return quarterArray(endValue !== null && endValue !== void 0 ? endValue : Date.now(), endValue, nowRef.value);\n    });\n    const startMonthArrayRef = computed(() => {\n        const startValue = pluckValueFromRange(props.value, 'start');\n        return monthArray(startValue !== null && startValue !== void 0 ? startValue : Date.now(), startValue, nowRef.value);\n    });\n    const endMonthArrayRef = computed(() => {\n        const endValue = pluckValueFromRange(props.value, 'end');\n        return monthArray(endValue !== null && endValue !== void 0 ? endValue : Date.now(), endValue, nowRef.value);\n    });\n    watch(computed(() => props.value), (value) => {\n        if (value !== null && Array.isArray(value)) {\n            const [startMoment, endMoment] = value;\n            startDateInput.value = format(startMoment, mergedDateFormatRef.value, panelCommon.dateFnsOptions.value);\n            endDateInputRef.value = format(endMoment, mergedDateFormatRef.value, panelCommon.dateFnsOptions.value);\n            if (!isSelectingRef.value) {\n                syncCalendarTimeWithValue(value);\n            }\n        }\n        else {\n            startDateInput.value = '';\n            endDateInputRef.value = '';\n        }\n    });\n    function handleCalendarChange(value, oldValue) {\n        if (type === 'daterange' || type === 'datetimerange') {\n            if (getYear(value) !== getYear(oldValue) ||\n                getMonth(value) !== getMonth(oldValue)) {\n                panelCommon.disableTransitionOneTick();\n            }\n        }\n    }\n    watch(startCalendarDateTimeRef, handleCalendarChange);\n    watch(endCalendarDateTimeRef, handleCalendarChange);\n    // change calendar\n    function adjustCalendarTimes(byStartCalendarTime) {\n        const startTime = startOfMonth(startCalendarDateTimeRef.value);\n        const endTime = startOfMonth(endCalendarDateTimeRef.value);\n        if (props.bindCalendarMonths || startTime >= endTime) {\n            if (byStartCalendarTime) {\n                endCalendarDateTimeRef.value = getTime(addMonths(startTime, 1));\n            }\n            else {\n                startCalendarDateTimeRef.value = getTime(addMonths(endTime, -1));\n            }\n        }\n    }\n    function startCalendarNextYear() {\n        startCalendarDateTimeRef.value = getTime(addMonths(startCalendarDateTimeRef.value, 12));\n        adjustCalendarTimes(true);\n    }\n    function startCalendarPrevYear() {\n        startCalendarDateTimeRef.value = getTime(addMonths(startCalendarDateTimeRef.value, -12));\n        adjustCalendarTimes(true);\n    }\n    function startCalendarNextMonth() {\n        startCalendarDateTimeRef.value = getTime(addMonths(startCalendarDateTimeRef.value, 1));\n        adjustCalendarTimes(true);\n    }\n    function startCalendarPrevMonth() {\n        startCalendarDateTimeRef.value = getTime(addMonths(startCalendarDateTimeRef.value, -1));\n        adjustCalendarTimes(true);\n    }\n    function endCalendarNextYear() {\n        endCalendarDateTimeRef.value = getTime(addMonths(endCalendarDateTimeRef.value, 12));\n        adjustCalendarTimes(false);\n    }\n    function endCalendarPrevYear() {\n        endCalendarDateTimeRef.value = getTime(addMonths(endCalendarDateTimeRef.value, -12));\n        adjustCalendarTimes(false);\n    }\n    function endCalendarNextMonth() {\n        endCalendarDateTimeRef.value = getTime(addMonths(endCalendarDateTimeRef.value, 1));\n        adjustCalendarTimes(false);\n    }\n    function endCalendarPrevMonth() {\n        endCalendarDateTimeRef.value = getTime(addMonths(endCalendarDateTimeRef.value, -1));\n        adjustCalendarTimes(false);\n    }\n    function onUpdateStartCalendarValue(value) {\n        startCalendarDateTimeRef.value = value;\n        adjustCalendarTimes(true);\n    }\n    function onUpdateEndCalendarValue(value) {\n        endCalendarDateTimeRef.value = value;\n        adjustCalendarTimes(false);\n    }\n    // The function is used on date panel, not the date-picker value validation\n    function mergedIsDateDisabled(ts) {\n        const isDateDisabled = isDateDisabledRef.value;\n        if (!isDateDisabled)\n            return false;\n        if (!Array.isArray(props.value))\n            return isDateDisabled(ts, 'start', null);\n        if (selectingPhaseRef.value === 'start') {\n            // before you really start to select\n            return isDateDisabled(ts, 'start', null);\n        }\n        else {\n            const { value: memorizedStartDateTime } = memorizedStartDateTimeRef;\n            // after you starting to select\n            if (ts < memorizedStartDateTimeRef.value) {\n                return isDateDisabled(ts, 'start', [\n                    memorizedStartDateTime,\n                    memorizedStartDateTime\n                ]);\n            }\n            else {\n                return isDateDisabled(ts, 'end', [\n                    memorizedStartDateTime,\n                    memorizedStartDateTime\n                ]);\n            }\n        }\n    }\n    function syncCalendarTimeWithValue(value) {\n        if (value === null)\n            return;\n        const [startMoment, endMoment] = value;\n        startCalendarDateTimeRef.value = startMoment;\n        if (startOfMonth(endMoment) <= startOfMonth(startMoment)) {\n            endCalendarDateTimeRef.value = getTime(startOfMonth(addMonths(startMoment, 1)));\n        }\n        else {\n            endCalendarDateTimeRef.value = getTime(startOfMonth(endMoment));\n        }\n    }\n    // for daterange & datetimerange\n    function handleDateClick(dateItem) {\n        if (!isSelectingRef.value) {\n            isSelectingRef.value = true;\n            memorizedStartDateTimeRef.value = dateItem.ts;\n            changeStartEndTime(dateItem.ts, dateItem.ts, 'done');\n        }\n        else {\n            isSelectingRef.value = false;\n            const { value } = props;\n            if (props.panel && Array.isArray(value)) {\n                changeStartEndTime(value[0], value[1], 'done');\n            }\n            else {\n                if (closeOnSelectRef.value && type === 'daterange') {\n                    if (updateValueOnCloseRef.value) {\n                        closeCalendar();\n                    }\n                    else {\n                        handleConfirmClick();\n                    }\n                }\n            }\n        }\n    }\n    function handleDateMouseEnter(dateItem) {\n        if (isSelectingRef.value) {\n            if (mergedIsDateDisabled(dateItem.ts))\n                return;\n            if (dateItem.ts >= memorizedStartDateTimeRef.value) {\n                changeStartEndTime(memorizedStartDateTimeRef.value, dateItem.ts, 'wipPreview');\n            }\n            else {\n                changeStartEndTime(dateItem.ts, memorizedStartDateTimeRef.value, 'wipPreview');\n            }\n        }\n    }\n    function handleConfirmClick() {\n        if (isRangeInvalidRef.value) {\n            return;\n        }\n        panelCommon.doConfirm();\n        closeCalendar();\n    }\n    function closeCalendar() {\n        isSelectingRef.value = false;\n        if (props.active) {\n            panelCommon.doClose();\n        }\n    }\n    function changeStartDateTime(time) {\n        if (typeof time !== 'number') {\n            time = getTime(time);\n        }\n        if (props.value === null) {\n            panelCommon.doUpdateValue([time, time], props.panel);\n        }\n        else if (Array.isArray(props.value)) {\n            panelCommon.doUpdateValue([time, Math.max(props.value[1], time)], props.panel);\n        }\n    }\n    function changeEndDateTime(time) {\n        if (typeof time !== 'number') {\n            time = getTime(time);\n        }\n        if (props.value === null) {\n            panelCommon.doUpdateValue([time, time], props.panel);\n        }\n        else if (Array.isArray(props.value)) {\n            panelCommon.doUpdateValue([Math.min(props.value[0], time), time], props.panel);\n        }\n    }\n    function changeStartEndTime(startTime, endTime, source) {\n        if (typeof startTime !== 'number') {\n            startTime = getTime(startTime);\n        }\n        if (source !== 'shortcutPreview') {\n            let startDefaultTime;\n            let endDefaultTime;\n            if (type === 'datetimerange') {\n                const { defaultTime } = props;\n                if (Array.isArray(defaultTime)) {\n                    startDefaultTime = getDefaultTime(defaultTime[0]);\n                    endDefaultTime = getDefaultTime(defaultTime[1]);\n                }\n                else {\n                    startDefaultTime = getDefaultTime(defaultTime);\n                    endDefaultTime = startDefaultTime;\n                }\n            }\n            if (startDefaultTime) {\n                startTime = getTime(set(startTime, startDefaultTime));\n            }\n            if (endDefaultTime) {\n                endTime = getTime(set(endTime, endDefaultTime));\n            }\n        }\n        panelCommon.doUpdateValue([startTime, endTime], props.panel && source === 'done');\n    }\n    function sanitizeValue(datetime) {\n        if (type === 'datetimerange') {\n            return getTime(startOfSecond(datetime));\n        }\n        else if (type === 'monthrange') {\n            return getTime(startOfMonth(datetime));\n        }\n        else {\n            // daterange\n            return getTime(startOfDay(datetime));\n        }\n    }\n    function handleStartDateInput(value) {\n        const date = strictParse(value, mergedDateFormatRef.value, new Date(), panelCommon.dateFnsOptions.value);\n        if (isValid(date)) {\n            if (!props.value) {\n                const newValue = set(new Date(), {\n                    year: getYear(date),\n                    month: getMonth(date),\n                    date: getDate(date)\n                });\n                changeStartDateTime(sanitizeValue(getTime(newValue)));\n            }\n            else if (Array.isArray(props.value)) {\n                const newValue = set(props.value[0], {\n                    year: getYear(date),\n                    month: getMonth(date),\n                    date: getDate(date)\n                });\n                changeStartDateTime(sanitizeValue(getTime(newValue)));\n            }\n        }\n        else {\n            startDateInput.value = value;\n        }\n    }\n    function handleEndDateInput(value) {\n        /** strict check when input */\n        const date = strictParse(value, mergedDateFormatRef.value, new Date(), panelCommon.dateFnsOptions.value);\n        if (isValid(date)) {\n            if (props.value === null) {\n                const newValue = set(new Date(), {\n                    year: getYear(date),\n                    month: getMonth(date),\n                    date: getDate(date)\n                });\n                changeEndDateTime(sanitizeValue(getTime(newValue)));\n            }\n            else if (Array.isArray(props.value)) {\n                const newValue = set(props.value[1], {\n                    year: getYear(date),\n                    month: getMonth(date),\n                    date: getDate(date)\n                });\n                changeEndDateTime(sanitizeValue(getTime(newValue)));\n            }\n        }\n        else {\n            endDateInputRef.value = value;\n        }\n    }\n    function handleStartDateInputBlur() {\n        const date = strictParse(startDateInput.value, mergedDateFormatRef.value, new Date(), panelCommon.dateFnsOptions.value);\n        const { value } = props;\n        if (isValid(date)) {\n            if (value === null) {\n                const newValue = set(new Date(), {\n                    year: getYear(date),\n                    month: getMonth(date),\n                    date: getDate(date)\n                });\n                changeStartDateTime(sanitizeValue(getTime(newValue)));\n            }\n            else if (Array.isArray(value)) {\n                const newValue = set(value[0], {\n                    year: getYear(date),\n                    month: getMonth(date),\n                    date: getDate(date)\n                });\n                changeStartDateTime(sanitizeValue(getTime(newValue)));\n            }\n        }\n        else {\n            refreshDisplayDateString();\n        }\n    }\n    function handleEndDateInputBlur() {\n        const date = strictParse(endDateInputRef.value, mergedDateFormatRef.value, new Date(), panelCommon.dateFnsOptions.value);\n        const { value } = props;\n        if (isValid(date)) {\n            if (value === null) {\n                const newValue = set(new Date(), {\n                    year: getYear(date),\n                    month: getMonth(date),\n                    date: getDate(date)\n                });\n                changeEndDateTime(sanitizeValue(getTime(newValue)));\n            }\n            else if (Array.isArray(value)) {\n                const newValue = set(value[1], {\n                    year: getYear(date),\n                    month: getMonth(date),\n                    date: getDate(date)\n                });\n                changeEndDateTime(sanitizeValue(getTime(newValue)));\n            }\n        }\n        else {\n            refreshDisplayDateString();\n        }\n    }\n    function refreshDisplayDateString(times) {\n        // If not selected, display nothing,\n        // else update datetime related string\n        const { value } = props;\n        if (value === null || !Array.isArray(value)) {\n            startDateInput.value = '';\n            endDateInputRef.value = '';\n            return;\n        }\n        if (times === undefined) {\n            times = value;\n        }\n        startDateInput.value = format(times[0], mergedDateFormatRef.value, panelCommon.dateFnsOptions.value);\n        endDateInputRef.value = format(times[1], mergedDateFormatRef.value, panelCommon.dateFnsOptions.value);\n    }\n    function handleStartTimePickerChange(value) {\n        if (value === null)\n            return;\n        changeStartDateTime(value);\n    }\n    function handleEndTimePickerChange(value) {\n        if (value === null)\n            return;\n        changeEndDateTime(value);\n    }\n    function handleRangeShortcutMouseenter(shortcut) {\n        panelCommon.cachePendingValue();\n        const shortcutValue = panelCommon.getShortcutValue(shortcut);\n        if (!Array.isArray(shortcutValue))\n            return;\n        changeStartEndTime(shortcutValue[0], shortcutValue[1], 'shortcutPreview');\n    }\n    function handleRangeShortcutClick(shortcut) {\n        const shortcutValue = panelCommon.getShortcutValue(shortcut);\n        if (!Array.isArray(shortcutValue))\n            return;\n        changeStartEndTime(shortcutValue[0], shortcutValue[1], 'done');\n        panelCommon.clearPendingValue();\n        handleConfirmClick();\n    }\n    function justifyColumnsScrollState(value, type) {\n        const mergedValue = value === undefined ? props.value : value;\n        if (value === undefined || type === 'start') {\n            if (startMonthScrollbarRef.value) {\n                const monthIndex = !Array.isArray(mergedValue)\n                    ? getMonth(Date.now())\n                    : getMonth(mergedValue[0]);\n                startMonthScrollbarRef.value.scrollTo({\n                    debounce: false,\n                    index: monthIndex,\n                    elSize: MONTH_ITEM_HEIGHT\n                });\n            }\n            if (startYearVlRef.value) {\n                const yearIndex = (!Array.isArray(mergedValue)\n                    ? getYear(Date.now())\n                    : getYear(mergedValue[0])) - START_YEAR;\n                startYearVlRef.value.scrollTo({ index: yearIndex, debounce: false });\n            }\n        }\n        if (value === undefined || type === 'end') {\n            if (endMonthScrollbarRef.value) {\n                const monthIndex = !Array.isArray(mergedValue)\n                    ? getMonth(Date.now())\n                    : getMonth(mergedValue[1]);\n                endMonthScrollbarRef.value.scrollTo({\n                    debounce: false,\n                    index: monthIndex,\n                    elSize: MONTH_ITEM_HEIGHT\n                });\n            }\n            if (endYearVlRef.value) {\n                const yearIndex = (!Array.isArray(mergedValue)\n                    ? getYear(Date.now())\n                    : getYear(mergedValue[1])) - START_YEAR;\n                endYearVlRef.value.scrollTo({ index: yearIndex, debounce: false });\n            }\n        }\n    }\n    // only for monthrange\n    function handleColItemClick(dateItem, clickType) {\n        const { value } = props;\n        const noCurrentValue = !Array.isArray(value);\n        const itemTs = dateItem.type === 'year' && type !== 'yearrange'\n            ? noCurrentValue\n                ? set(dateItem.ts, {\n                    month: getMonth(type === 'quarterrange'\n                        ? startOfQuarter(new Date())\n                        : new Date())\n                }).valueOf()\n                : set(dateItem.ts, {\n                    month: getMonth(type === 'quarterrange'\n                        ? startOfQuarter(value[clickType === 'start' ? 0 : 1])\n                        : value[clickType === 'start' ? 0 : 1])\n                }).valueOf()\n            : dateItem.ts;\n        if (noCurrentValue) {\n            const partialValue = sanitizeValue(itemTs);\n            const nextValue = [partialValue, partialValue];\n            panelCommon.doUpdateValue(nextValue, props.panel);\n            justifyColumnsScrollState(nextValue, 'start');\n            justifyColumnsScrollState(nextValue, 'end');\n            panelCommon.disableTransitionOneTick();\n            return;\n        }\n        const nextValue = [value[0], value[1]];\n        let otherPartsChanged = false;\n        if (clickType === 'start') {\n            nextValue[0] = sanitizeValue(itemTs);\n            if (nextValue[0] > nextValue[1]) {\n                nextValue[1] = nextValue[0];\n                otherPartsChanged = true;\n            }\n        }\n        else {\n            nextValue[1] = sanitizeValue(itemTs);\n            if (nextValue[0] > nextValue[1]) {\n                nextValue[0] = nextValue[1];\n                otherPartsChanged = true;\n            }\n        }\n        panelCommon.doUpdateValue(nextValue, props.panel);\n        switch (type) {\n            case 'monthrange':\n            case 'quarterrange':\n                panelCommon.disableTransitionOneTick();\n                if (otherPartsChanged) {\n                    justifyColumnsScrollState(nextValue, 'start');\n                    justifyColumnsScrollState(nextValue, 'end');\n                }\n                else {\n                    justifyColumnsScrollState(nextValue, clickType);\n                }\n                break;\n            case 'yearrange':\n                panelCommon.disableTransitionOneTick();\n                justifyColumnsScrollState(nextValue, 'start');\n                justifyColumnsScrollState(nextValue, 'end');\n        }\n    }\n    function handleStartYearVlScroll() {\n        var _a;\n        (_a = startYearScrollbarRef.value) === null || _a === void 0 ? void 0 : _a.sync();\n    }\n    function handleEndYearVlScroll() {\n        var _a;\n        (_a = endYearScrollbarRef.value) === null || _a === void 0 ? void 0 : _a.sync();\n    }\n    function virtualListContainer(type) {\n        var _a, _b;\n        if (type === 'start') {\n            return (_a = startYearVlRef.value) === null || _a === void 0 ? void 0 : _a.listElRef;\n        }\n        else {\n            return (_b = endYearVlRef.value) === null || _b === void 0 ? void 0 : _b.listElRef;\n        }\n    }\n    function virtualListContent(type) {\n        var _a, _b;\n        if (type === 'start') {\n            return (_a = startYearVlRef.value) === null || _a === void 0 ? void 0 : _a.itemsElRef;\n        }\n        else {\n            return (_b = endYearVlRef.value) === null || _b === void 0 ? void 0 : _b.itemsElRef;\n        }\n    }\n    const childComponentRefs = {\n        startYearVlRef,\n        endYearVlRef,\n        startMonthScrollbarRef,\n        endMonthScrollbarRef,\n        startYearScrollbarRef,\n        endYearScrollbarRef\n    };\n    return Object.assign(Object.assign(Object.assign(Object.assign({ startDatesElRef,\n        endDatesElRef,\n        handleDateClick,\n        handleColItemClick,\n        handleDateMouseEnter,\n        handleConfirmClick,\n        startCalendarPrevYear,\n        startCalendarPrevMonth,\n        startCalendarNextYear,\n        startCalendarNextMonth,\n        endCalendarPrevYear,\n        endCalendarPrevMonth,\n        endCalendarNextMonth,\n        endCalendarNextYear,\n        mergedIsDateDisabled,\n        changeStartEndTime, ranges: rangesRef, startCalendarMonth: startCalendarMonthRef, startCalendarYear: startCalendarYearRef, endCalendarMonth: endCalendarMonthRef, endCalendarYear: endCalendarYearRef, weekdays: weekdaysRef, startDateArray: startDateArrayRef, endDateArray: endDateArrayRef, startYearArray: startYearArrayRef, startMonthArray: startMonthArrayRef, startQuarterArray: startQuarterArrayRef, endYearArray: endYearArrayRef, endMonthArray: endMonthArrayRef, endQuarterArray: endQuarterArrayRef, isSelecting: isSelectingRef, handleRangeShortcutMouseenter,\n        handleRangeShortcutClick }, panelCommon), validation), childComponentRefs), { \n        // datetimerangeonly\n        startDateDisplayString: startDateInput, endDateInput: endDateInputRef, timePickerSize: panelCommon.timePickerSize, startTimeValue: startTimeValueRef, endTimeValue: endTimeValueRef, datePickerSlots, shortcuts: shortcutsRef, startCalendarDateTime: startCalendarDateTimeRef, endCalendarDateTime: endCalendarDateTimeRef, justifyColumnsScrollState, handleFocusDetectorFocus: panelCommon.handleFocusDetectorFocus, handleStartTimePickerChange,\n        handleEndTimePickerChange,\n        handleStartDateInput,\n        handleStartDateInputBlur,\n        handleEndDateInput,\n        handleEndDateInputBlur,\n        handleStartYearVlScroll,\n        handleEndYearVlScroll,\n        virtualListContainer,\n        virtualListContent,\n        onUpdateStartCalendarValue,\n        onUpdateEndCalendarValue });\n}\nexport { useDualCalendar, useDualCalendarProps };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}