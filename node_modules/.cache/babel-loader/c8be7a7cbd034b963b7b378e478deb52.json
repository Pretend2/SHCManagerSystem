{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { defineComponent, provide, ref, inject, getCurrentInstance, onBeforeUnmount } from 'vue';\nimport { beforeNextFrameOnce } from 'seemly';\nimport { on, off } from 'evtd';\nimport { getSlot } from '../../shared/v-node';\nimport { getScrollParent } from './utils';\nconst Binder = defineComponent({\n  name: 'Binder',\n  props: {\n    syncTargetWithParent: Boolean,\n    syncTarget: {\n      type: Boolean,\n      default: true\n    }\n  },\n\n  setup(props) {\n    var _a;\n\n    provide('VBinder', (_a = getCurrentInstance()) === null || _a === void 0 ? void 0 : _a.proxy);\n    const VBinder = inject('VBinder', null);\n    const targetRef = ref(null);\n    /**\n     * If there's no nested vbinder, we can simply set the target ref.\n     *\n     * However, when it comes to:\n     * <VBinder> <- syncTarget = false\n     *\n     *              Should hold target DOM ref, but can't get it directly from\n     *              its VTarget. So if there are nested VBinder, we should:\n     *              1. Stop setting target DOM from level-1 VTarget\n     *              2. Set target DOM from level-2 VTarget\n     *              For (1), we need `syncTarget` to `false`\n     *              For (2), we need to set `syncTargetWithParent` to `true` on\n     *              level-2 VBinder\n     *   <VTarget>\n     *     <VBinder> <- syncTargetWithParent = true\n     *       <VTarget>target</VTarget>\n     *     </VBinder>\n     *     <VFollower>\n     *       content1\n     *     </VFollower>\n     *   </VTarget>\n     *   <VFollower>\n     *     content2\n     *   </VFollower>\n     * </VBinder>\n     */\n\n    const setTargetRef = el => {\n      targetRef.value = el; // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n\n      if (VBinder && props.syncTargetWithParent) {\n        VBinder.setTargetRef(el);\n      }\n    }; // scroll related\n\n\n    let scrollableNodes = [];\n\n    const ensureScrollListener = () => {\n      let cursor = targetRef.value;\n\n      while (true) {\n        cursor = getScrollParent(cursor);\n        if (cursor === null) break;\n        scrollableNodes.push(cursor);\n      }\n\n      for (const el of scrollableNodes) {\n        on('scroll', el, onScroll, true);\n      }\n    };\n\n    const removeScrollListeners = () => {\n      for (const el of scrollableNodes) {\n        off('scroll', el, onScroll, true);\n      }\n\n      scrollableNodes = [];\n    };\n\n    const followerScrollListeners = new Set();\n\n    const addScrollListener = listener => {\n      if (followerScrollListeners.size === 0) {\n        ensureScrollListener();\n      }\n\n      if (!followerScrollListeners.has(listener)) {\n        followerScrollListeners.add(listener);\n      }\n    };\n\n    const removeScrollListener = listener => {\n      if (followerScrollListeners.has(listener)) {\n        followerScrollListeners.delete(listener);\n      }\n\n      if (followerScrollListeners.size === 0) {\n        removeScrollListeners();\n      }\n    };\n\n    const onScroll = () => {\n      beforeNextFrameOnce(onScrollRaf);\n    };\n\n    const onScrollRaf = () => {\n      followerScrollListeners.forEach(listener => listener());\n    }; // resize related\n\n\n    const followerResizeListeners = new Set();\n\n    const addResizeListener = listener => {\n      if (followerResizeListeners.size === 0) {\n        on('resize', window, onResize);\n      }\n\n      if (!followerResizeListeners.has(listener)) {\n        followerResizeListeners.add(listener);\n      }\n    };\n\n    const removeResizeListener = listener => {\n      if (followerResizeListeners.has(listener)) {\n        followerResizeListeners.delete(listener);\n      }\n\n      if (followerResizeListeners.size === 0) {\n        off('resize', window, onResize);\n      }\n    };\n\n    const onResize = () => {\n      followerResizeListeners.forEach(listener => listener());\n    };\n\n    onBeforeUnmount(() => {\n      off('resize', window, onResize);\n      removeScrollListeners();\n    });\n    return {\n      targetRef,\n      setTargetRef,\n      addScrollListener,\n      removeScrollListener,\n      addResizeListener,\n      removeResizeListener\n    };\n  },\n\n  render() {\n    return getSlot('binder', this.$slots);\n  }\n\n});\nexport default Binder;","map":{"version":3,"names":["defineComponent","provide","ref","inject","getCurrentInstance","onBeforeUnmount","beforeNextFrameOnce","on","off","getSlot","getScrollParent","Binder","name","props","syncTargetWithParent","Boolean","syncTarget","type","default","setup","_a","proxy","VBinder","targetRef","setTargetRef","el","value","scrollableNodes","ensureScrollListener","cursor","push","onScroll","removeScrollListeners","followerScrollListeners","Set","addScrollListener","listener","size","has","add","removeScrollListener","delete","onScrollRaf","forEach","followerResizeListeners","addResizeListener","window","onResize","removeResizeListener","render","$slots"],"sources":["E:/VCode/SHC社区管理系统/shc_community_manager_system/node_modules/vueuc/es/binder/src/Binder.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { defineComponent, provide, ref, inject, getCurrentInstance, onBeforeUnmount } from 'vue';\nimport { beforeNextFrameOnce } from 'seemly';\nimport { on, off } from 'evtd';\nimport { getSlot } from '../../shared/v-node';\nimport { getScrollParent } from './utils';\nconst Binder = defineComponent({\n    name: 'Binder',\n    props: {\n        syncTargetWithParent: Boolean,\n        syncTarget: {\n            type: Boolean,\n            default: true\n        }\n    },\n    setup(props) {\n        var _a;\n        provide('VBinder', (_a = getCurrentInstance()) === null || _a === void 0 ? void 0 : _a.proxy);\n        const VBinder = inject('VBinder', null);\n        const targetRef = ref(null);\n        /**\n         * If there's no nested vbinder, we can simply set the target ref.\n         *\n         * However, when it comes to:\n         * <VBinder> <- syncTarget = false\n         *\n         *              Should hold target DOM ref, but can't get it directly from\n         *              its VTarget. So if there are nested VBinder, we should:\n         *              1. Stop setting target DOM from level-1 VTarget\n         *              2. Set target DOM from level-2 VTarget\n         *              For (1), we need `syncTarget` to `false`\n         *              For (2), we need to set `syncTargetWithParent` to `true` on\n         *              level-2 VBinder\n         *   <VTarget>\n         *     <VBinder> <- syncTargetWithParent = true\n         *       <VTarget>target</VTarget>\n         *     </VBinder>\n         *     <VFollower>\n         *       content1\n         *     </VFollower>\n         *   </VTarget>\n         *   <VFollower>\n         *     content2\n         *   </VFollower>\n         * </VBinder>\n         */\n        const setTargetRef = (el) => {\n            targetRef.value = el;\n            // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n            if (VBinder && props.syncTargetWithParent) {\n                VBinder.setTargetRef(el);\n            }\n        };\n        // scroll related\n        let scrollableNodes = [];\n        const ensureScrollListener = () => {\n            let cursor = targetRef.value;\n            while (true) {\n                cursor = getScrollParent(cursor);\n                if (cursor === null)\n                    break;\n                scrollableNodes.push(cursor);\n            }\n            for (const el of scrollableNodes) {\n                on('scroll', el, onScroll, true);\n            }\n        };\n        const removeScrollListeners = () => {\n            for (const el of scrollableNodes) {\n                off('scroll', el, onScroll, true);\n            }\n            scrollableNodes = [];\n        };\n        const followerScrollListeners = new Set();\n        const addScrollListener = (listener) => {\n            if (followerScrollListeners.size === 0) {\n                ensureScrollListener();\n            }\n            if (!followerScrollListeners.has(listener)) {\n                followerScrollListeners.add(listener);\n            }\n        };\n        const removeScrollListener = (listener) => {\n            if (followerScrollListeners.has(listener)) {\n                followerScrollListeners.delete(listener);\n            }\n            if (followerScrollListeners.size === 0) {\n                removeScrollListeners();\n            }\n        };\n        const onScroll = () => {\n            beforeNextFrameOnce(onScrollRaf);\n        };\n        const onScrollRaf = () => {\n            followerScrollListeners.forEach((listener) => listener());\n        };\n        // resize related\n        const followerResizeListeners = new Set();\n        const addResizeListener = (listener) => {\n            if (followerResizeListeners.size === 0) {\n                on('resize', window, onResize);\n            }\n            if (!followerResizeListeners.has(listener)) {\n                followerResizeListeners.add(listener);\n            }\n        };\n        const removeResizeListener = (listener) => {\n            if (followerResizeListeners.has(listener)) {\n                followerResizeListeners.delete(listener);\n            }\n            if (followerResizeListeners.size === 0) {\n                off('resize', window, onResize);\n            }\n        };\n        const onResize = () => {\n            followerResizeListeners.forEach((listener) => listener());\n        };\n        onBeforeUnmount(() => {\n            off('resize', window, onResize);\n            removeScrollListeners();\n        });\n        return {\n            targetRef,\n            setTargetRef,\n            addScrollListener,\n            removeScrollListener,\n            addResizeListener,\n            removeResizeListener\n        };\n    },\n    render() {\n        return getSlot('binder', this.$slots);\n    }\n});\nexport default Binder;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}