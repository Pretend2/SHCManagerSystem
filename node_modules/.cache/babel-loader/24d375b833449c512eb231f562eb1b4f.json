{"ast":null,"code":"const __default__ = {\n  name: 'App'\n};\nimport { ref, provide, inject, watch } from 'vue';\nimport { NConfigProvider, NMessageProvider, darkTheme, NButton, NGlobalStyle, NLoadingBarProvider, zhCN, dateZhCN, NDialogProvider, useThemeVars } from 'naive-ui'; // 引入自定义主题\n\nimport myTheme from './theme.js'; // 引入路由\n\nimport { useRouter } from \"vue-router\";\nimport axios from 'axios';\nexport default /*#__PURE__*/Object.assign(__default__, {\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    console.log(useThemeVars()); // 接收全局变量\n\n    const global = inject('global');\n    let darkTemp = localStorage.getItem(\"dark\");\n\n    if (darkTemp == null) {\n      localStorage.setItem(\"dark\", false);\n    }\n\n    const dark = ref(JSON.parse(darkTemp)); // 向后代组件传递数据\n\n    provide('dark', dark);\n    watch(dark, (newValue, oldValue) => {\n      localStorage.setItem(\"dark\", dark.value);\n    }); // 获取路由对象\n\n    const router = useRouter(); // 前置守卫\n\n    router.beforeEach((to, from, next) => {\n      let path = null; // 设置网页标题\n\n      document.title = to.meta.title;\n\n      if (to.name === \"login\") {\n        localStorage.removeItem(\"user\");\n      } else {\n        const user = JSON.parse(localStorage.getItem(\"user\"));\n\n        if (!user) {\n          path = '/login';\n        } else {\n          axios({\n            url: global.api + '/checkToken',\n            headers: {\n              token: user.token\n            }\n          }).then(res => {\n            if (!res.data) {\n              path = '/login';\n            }\n          });\n        }\n      }\n\n      next(path);\n    });\n    /* \n    // 获取路由实例\n    const router = useRouter();\n    router.beforeEach((to, from, next) => {\n      document.title = to.meta.title\n      //loadingBar.start();\n      next();\n    });\n    \n    router.afterEach(() => {\n      //loadingBar.finish();\n    }); */\n\n    const __returned__ = {\n      global,\n      darkTemp,\n      dark,\n      router,\n      ref,\n      provide,\n      inject,\n      watch,\n      NConfigProvider,\n      NMessageProvider,\n      darkTheme,\n      NButton,\n      NGlobalStyle,\n      NLoadingBarProvider,\n      zhCN,\n      dateZhCN,\n      NDialogProvider,\n      useThemeVars,\n      myTheme,\n      useRouter,\n      axios\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n});","map":{"version":3,"mappings":"AAyFA,oBAAe;EACbA,IAAI,EAAE;AADO,CAAf;AA3EA,SAASC,GAAT,EAAcC,OAAd,EAAuBC,MAAvB,EAA+BC,KAA/B,QAA4C,KAA5C;AAEA,SACEC,eADF,EACmBC,gBADnB,EACqCC,SADrC,EACgDC,OADhD,EAEEC,YAFF,EAEgBC,mBAFhB,EAEqCC,IAFrC,EAE2CC,QAF3C,EAEqDC,eAFrD,EAEsEC,YAFtE,QAGO,UAHP,C,CAKA;;AACA,OAAOC,OAAP,MAAoB,YAApB,C,CAEA;;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;;IAEAC,OAAO,CAACC,GAAR,CAAYL,YAAY,EAAxB,GAEA;;IACA,MAAMM,MAAM,GAAGjB,MAAM,CAAC,QAAD,CAArB;IAEA,IAAIkB,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAf;;IAEA,IAAIF,QAAQ,IAAI,IAAhB,EAAsB;MACpBC,YAAY,CAACE,OAAb,CAAqB,MAArB,EAA6B,KAA7B;IACD;;IAED,MAAMC,IAAI,GAAGxB,GAAG,CAACyB,IAAI,CAACC,KAAL,CAAWN,QAAX,CAAD,CAAhB,EACA;;IACAnB,OAAO,CAAC,MAAD,EAASuB,IAAT,CAAP;IACArB,KAAK,CAACqB,IAAD,EAAO,CAACG,QAAD,EAAWC,QAAX,KAAwB;MAClCP,YAAY,CAACE,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACK,KAAlC;IACD,CAFI,CAAL,EAIA;;IACA,MAAMC,MAAM,GAAGf,SAAS,EAAxB,EAEA;;IACAe,MAAM,CAACC,UAAP,CAAkB,CAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,KAAoB;MACpC,IAAIC,IAAI,GAAG,IAAX,CADoC,CAEpC;;MACAC,QAAQ,CAACC,KAAT,GAAiBL,EAAE,CAACM,IAAH,CAAQD,KAAzB;;MACA,IAAIL,EAAE,CAACjC,IAAH,KAAY,OAAhB,EAAyB;QACvBsB,YAAY,CAACkB,UAAb,CAAwB,MAAxB;MACD,CAFD,MAEO;QACL,MAAMC,IAAI,GAAGf,IAAI,CAACC,KAAL,CAAWL,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAb;;QACA,IAAI,CAACkB,IAAL,EAAW;UACTL,IAAI,GAAG,QAAP;QACD,CAFD,MAEO;UACLnB,KAAK,CAAC;YACJyB,GAAG,EAAEtB,MAAM,CAACuB,GAAP,GAAa,aADd;YAEJC,OAAO,EAAE;cAAEC,KAAK,EAAEJ,IAAI,CAACI;YAAd;UAFL,CAAD,CAAL,CAGGC,IAHH,CAGQC,GAAG,IAAI;YACb,IAAI,CAACA,GAAG,CAACC,IAAT,EAAe;cACbZ,IAAI,GAAG,QAAP;YACD;UACF,CAPD;QAQD;MACF;;MACDD,IAAI,CAACC,IAAD,CAAJ;IACD,CAtBD;IAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","names":["name","ref","provide","inject","watch","NConfigProvider","NMessageProvider","darkTheme","NButton","NGlobalStyle","NLoadingBarProvider","zhCN","dateZhCN","NDialogProvider","useThemeVars","myTheme","useRouter","axios","console","log","global","darkTemp","localStorage","getItem","setItem","dark","JSON","parse","newValue","oldValue","value","router","beforeEach","to","from","next","path","document","title","meta","removeItem","user","url","api","headers","token","then","res","data"],"sources":["E:/VCode/SHC社区管理系统/shc_community_manager_system/src/App.vue"],"sourcesContent":["<template>\n  <n-config-provider :locale=\"zhCN\" :date-locale=\"dateZhCN\" :theme=\"dark ? darkTheme : null\" :theme-overrides=\"myTheme\">\n    <n-loading-bar-provider>\n      <n-dialog-provider>\n        <n-message-provider>\n          <router-view></router-view>\n        </n-message-provider>\n      </n-dialog-provider>\n    </n-loading-bar-provider>\n    <n-global-style />\n  </n-config-provider>\n</template>\n\n<script setup>\nimport { ref, provide, inject, watch } from 'vue'\n\nimport {\n  NConfigProvider, NMessageProvider, darkTheme, NButton,\n  NGlobalStyle, NLoadingBarProvider, zhCN, dateZhCN, NDialogProvider, useThemeVars\n} from 'naive-ui'\n\n// 引入自定义主题\nimport myTheme from './theme.js'\n\n// 引入路由\nimport { useRouter } from \"vue-router\";\nimport axios from 'axios';\n\nconsole.log(useThemeVars());\n\n// 接收全局变量\nconst global = inject('global');\n\nlet darkTemp = localStorage.getItem(\"dark\");\n\nif (darkTemp == null) {\n  localStorage.setItem(\"dark\", false)\n}\n\nconst dark = ref(JSON.parse(darkTemp))\n// 向后代组件传递数据\nprovide('dark', dark)\nwatch(dark, (newValue, oldValue) => {\n  localStorage.setItem(\"dark\", dark.value)\n})\n\n// 获取路由对象\nconst router = useRouter()\n\n// 前置守卫\nrouter.beforeEach((to, from, next) => {\n  let path = null\n  // 设置网页标题\n  document.title = to.meta.title\n  if (to.name === \"login\") {\n    localStorage.removeItem(\"user\")\n  } else {\n    const user = JSON.parse(localStorage.getItem(\"user\"))\n    if (!user) {\n      path = '/login'\n    } else {\n      axios({\n        url: global.api + '/checkToken',\n        headers: { token: user.token }\n      }).then(res => {\n        if (!res.data) {\n          path = '/login'\n        }\n      })\n    }\n  }\n  next(path)\n});\n\n/* \n// 获取路由实例\nconst router = useRouter();\nrouter.beforeEach((to, from, next) => {\n  document.title = to.meta.title\n  //loadingBar.start();\n  next();\n});\n\nrouter.afterEach(() => {\n  //loadingBar.finish();\n}); */\n\n</script>\n<script>\nexport default {\n  name: 'App',\n}\n\n</script>\n\n<style>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}