{"ast":null,"code":"import { onMounted, onUnmounted, ref } from 'vue';\nimport { isBrowser } from '../env/is-browser';\nconst defaultWindow = isBrowser ? window : null;\nexport const useBrowserLocation = (customWindow = defaultWindow) => {\n  const getWindowLocation = () => {\n    const {\n      hash,\n      host,\n      hostname,\n      href,\n      origin,\n      pathname,\n      port,\n      protocol,\n      search\n    } = (customWindow === null || customWindow === void 0 ? void 0 : customWindow.location) || {};\n    return {\n      hash,\n      host,\n      hostname,\n      href,\n      origin,\n      pathname,\n      port,\n      protocol,\n      search\n    };\n  };\n\n  const updateLocation = () => {\n    locationState.value = getWindowLocation();\n  };\n\n  const locationState = ref(getWindowLocation());\n  onMounted(() => {\n    if (customWindow) {\n      customWindow.addEventListener('popstate', updateLocation);\n      customWindow.addEventListener('hashchange', updateLocation);\n    }\n  });\n  onUnmounted(() => {\n    if (customWindow) {\n      customWindow.removeEventListener('popstate', updateLocation);\n      customWindow.removeEventListener('hashchange', updateLocation);\n    }\n  });\n  return locationState;\n};","map":{"version":3,"names":["onMounted","onUnmounted","ref","isBrowser","defaultWindow","window","useBrowserLocation","customWindow","getWindowLocation","hash","host","hostname","href","origin","pathname","port","protocol","search","location","updateLocation","locationState","value","addEventListener","removeEventListener"],"sources":["D:/VCode/SHC社区管理系统/shc_community_manager_system/node_modules/naive-ui/es/_utils/composable/use-browser-location.js"],"sourcesContent":["import { onMounted, onUnmounted, ref } from 'vue';\nimport { isBrowser } from '../env/is-browser';\nconst defaultWindow = isBrowser ? window : null;\nexport const useBrowserLocation = (customWindow = defaultWindow) => {\n    const getWindowLocation = () => {\n        const { hash, host, hostname, href, origin, pathname, port, protocol, search } = (customWindow === null || customWindow === void 0 ? void 0 : customWindow.location) || {};\n        return {\n            hash,\n            host,\n            hostname,\n            href,\n            origin,\n            pathname,\n            port,\n            protocol,\n            search\n        };\n    };\n    const updateLocation = () => {\n        locationState.value = getWindowLocation();\n    };\n    const locationState = ref(getWindowLocation());\n    onMounted(() => {\n        if (customWindow) {\n            customWindow.addEventListener('popstate', updateLocation);\n            customWindow.addEventListener('hashchange', updateLocation);\n        }\n    });\n    onUnmounted(() => {\n        if (customWindow) {\n            customWindow.removeEventListener('popstate', updateLocation);\n            customWindow.removeEventListener('hashchange', updateLocation);\n        }\n    });\n    return locationState;\n};\n"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,WAApB,EAAiCC,GAAjC,QAA4C,KAA5C;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,MAAMC,aAAa,GAAGD,SAAS,GAAGE,MAAH,GAAY,IAA3C;AACA,OAAO,MAAMC,kBAAkB,GAAG,CAACC,YAAY,GAAGH,aAAhB,KAAkC;EAChE,MAAMI,iBAAiB,GAAG,MAAM;IAC5B,MAAM;MAAEC,IAAF;MAAQC,IAAR;MAAcC,QAAd;MAAwBC,IAAxB;MAA8BC,MAA9B;MAAsCC,QAAtC;MAAgDC,IAAhD;MAAsDC,QAAtD;MAAgEC;IAAhE,IAA2E,CAACV,YAAY,KAAK,IAAjB,IAAyBA,YAAY,KAAK,KAAK,CAA/C,GAAmD,KAAK,CAAxD,GAA4DA,YAAY,CAACW,QAA1E,KAAuF,EAAxK;IACA,OAAO;MACHT,IADG;MAEHC,IAFG;MAGHC,QAHG;MAIHC,IAJG;MAKHC,MALG;MAMHC,QANG;MAOHC,IAPG;MAQHC,QARG;MASHC;IATG,CAAP;EAWH,CAbD;;EAcA,MAAME,cAAc,GAAG,MAAM;IACzBC,aAAa,CAACC,KAAd,GAAsBb,iBAAiB,EAAvC;EACH,CAFD;;EAGA,MAAMY,aAAa,GAAGlB,GAAG,CAACM,iBAAiB,EAAlB,CAAzB;EACAR,SAAS,CAAC,MAAM;IACZ,IAAIO,YAAJ,EAAkB;MACdA,YAAY,CAACe,gBAAb,CAA8B,UAA9B,EAA0CH,cAA1C;MACAZ,YAAY,CAACe,gBAAb,CAA8B,YAA9B,EAA4CH,cAA5C;IACH;EACJ,CALQ,CAAT;EAMAlB,WAAW,CAAC,MAAM;IACd,IAAIM,YAAJ,EAAkB;MACdA,YAAY,CAACgB,mBAAb,CAAiC,UAAjC,EAA6CJ,cAA7C;MACAZ,YAAY,CAACgB,mBAAb,CAAiC,YAAjC,EAA+CJ,cAA/C;IACH;EACJ,CALU,CAAX;EAMA,OAAOC,aAAP;AACH,CAhCM"},"metadata":{},"sourceType":"module"}