{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-7487f40b\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"body\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  style: {\n    \"display\": \"flex\",\n    \"flex-direction\": \"row\",\n    \"justify-content\": \"center\",\n    \"align-items\": \"center\",\n    \"margin-bottom\": \"10px\"\n  }\n}, [/*#__PURE__*/_createElementVNode(\"h1\", null, \"SHC 社区管理系统\")], -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\" 自动登录 \");\n\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\" 登录 \");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 标题 \"), _hoisted_2, _createCommentVNode(\" form 表单 \"), _createVNode($setup[\"NForm\"], {\n    \"label-placement\": \"left\",\n    ref: \"formRef\",\n    model: $setup.formValue,\n    rules: $setup.rules,\n    size: \"medium\",\n    style: {\n      \"width\": \"280px\"\n    }\n  }, {\n    default: _withCtx(() => [_createVNode($setup[\"NFormItem\"], {\n      path: \"account\"\n    }, {\n      default: _withCtx(() => [_createVNode($setup[\"NInput\"], {\n        value: $setup.formValue.account,\n        \"onUpdate:value\": _cache[0] || (_cache[0] = $event => $setup.formValue.account = $event),\n        placeholder: \"请输入账号\"\n      }, null, 8\n      /* PROPS */\n      , [\"value\"])]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode($setup[\"NFormItem\"], {\n      path: \"password\"\n    }, {\n      default: _withCtx(() => [_createVNode($setup[\"NInput\"], {\n        type: \"password\",\n        value: $setup.formValue.password,\n        \"onUpdate:value\": _cache[1] || (_cache[1] = $event => $setup.formValue.password = $event),\n        placeholder: \"请输入密码\"\n      }, null, 8\n      /* PROPS */\n      , [\"value\"])]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode($setup[\"NFormItem\"], {\n      path: \"code\"\n    }, {\n      default: _withCtx(() => [_createVNode($setup[\"NInputGroup\"], null, {\n        default: _withCtx(() => [_createVNode($setup[\"NInput\"], {\n          value: $setup.formValue.code,\n          \"onUpdate:value\": _cache[2] || (_cache[2] = $event => $setup.formValue.code = $event),\n          placeholder: \"请输入验证码\"\n        }, null, 8\n        /* PROPS */\n        , [\"value\"]), _createVNode($setup[\"imageCode\"], {\n          change: $setup.data.change_img_code,\n          onClick: $setup.changeImageCode,\n          onGetCode: $setup.backImageCode\n        }, null, 8\n        /* PROPS */\n        , [\"change\"])]),\n        _: 1\n        /* STABLE */\n\n      })]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode($setup[\"NFormItem\"], null, {\n      default: _withCtx(() => [_createVNode($setup[\"NCheckbox\"], {\n        checked: $setup.formValue.autoLogin,\n        \"onUpdate:checked\": _cache[3] || (_cache[3] = $event => $setup.formValue.autoLogin = $event)\n      }, {\n        default: _withCtx(() => [_hoisted_3]),\n        _: 1\n        /* STABLE */\n\n      }, 8\n      /* PROPS */\n      , [\"checked\"])]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode($setup[\"NFormItem\"], null, {\n      default: _withCtx(() => [_createVNode($setup[\"NButton\"], {\n        loading: $setup.formValue.loading,\n        style: {\n          \"width\": \"100%\"\n        },\n        type: \"primary\",\n        \"attr-type\": \"button\",\n        onClick: $setup.loginClick\n      }, {\n        default: _withCtx(() => [_hoisted_4]),\n        _: 1\n        /* STABLE */\n\n      }, 8\n      /* PROPS */\n      , [\"loading\"])]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"model\"])]);\n}","map":{"version":3,"mappings":";;;;;EACSA,KAAK,EAAC;;;gEAEPC,oBAEM,KAFN,EAEM;EAFDC,KAA0G,EAA1G;IAAA;IAAA;IAAA;IAAA;IAAA;EAAA;AAEC,CAFN,EAA+G,cAC3GD,oBAAmB,IAAnB,EAAmB,IAAnB,EAAI,YAAJ,CAD2G,CAA/G;;AAAA;;iDAoB0D;;iDAKgE;;;uBA3B9HE,oBAgCM,KAhCN,cAgCM,CA/BFC,2BA+BE,EA9BFC,UA8BE,EA3BFD,gCA2BE,EA1BFE,aAyBSC,eAzBT,EAyBS;IAzBD,mBAAgB,MAyBf;IAzBsBC,GAAG,EAAC,SAyB1B;IAzBqCC,KAAK,EAAEF,gBAyB5C;IAzBwDG,KAAK,EAAEH,YAyB/D;IAzBsEI,IAAI,EAAC,QAyB3E;IAxBLT,KAAqB,EAArB;MAAA;IAAA;EAwBK,CAzBT;sBAEI,MAEc,CAFdI,aAEcC,mBAFd,EAEc;MAFDK,IAAI,EAAC;IAEJ,CAFd,EAA2B;wBACvB,MAAiE,CAAjEN,aAAiEC,gBAAjE,EAAiE;QAAhDM,KAAK,EAAEN,iBAAUO,OAA+B;8DAAzCP,iBAAUO,UAAOC,OAAwB;QAAtBC,WAAW,EAAC;MAAU,CAAjE;;MAAA,YAAiE,EAD1C;;;;IAAA,CAA3B,CAEc,EACdV,aAEcC,mBAFd,EAEc;MAFDK,IAAI,EAAC;IAEJ,CAFd,EAA4B;wBACxB,MAAkF,CAAlFN,aAAkFC,gBAAlF,EAAkF;QAAzEU,IAAI,EAAC,UAAoE;QAAjDJ,KAAK,EAAEN,iBAAUW,QAAgC;8DAA1CX,iBAAUW,WAAQH,OAAwB;QAAtBC,WAAW,EAAC;MAAU,CAAlF;;MAAA,YAAkF,EAD1D;;;;IAAA,CAA5B,CADc,EAIdV,aAMcC,mBANd,EAMc;MANDK,IAAI,EAAC;IAMJ,CANd,EAAwB;wBACpB,MAIgB,CAJhBN,aAIgBC,qBAJhB,EAIgB,IAJhB,EAIgB;0BAHZ,MAA+D,CAA/DD,aAA+DC,gBAA/D,EAA+D;UAA9CM,KAAK,EAAEN,iBAAUY,IAA6B;gEAAvCZ,iBAAUY,OAAIJ,OAAyB;UAAvBC,WAAW,EAAC;QAAW,CAA/D;;QAAA,YAA+D,EAC/DV,aACaC,mBADb,EACa;UADAa,MAAM,EAAEb,YAAKc,eACb;UAD+BC,OAAK,EAAEf,sBACtC;UADwDgB,SAAO,EAAEhB;QACjE,CADb;;QAAA,aAD+D,EAGnD;;;;MAAA,CAJhB,CAIgB,EALI;;;;IAAA,CAAxB,CAJc,EAWdD,aAIcC,mBAJd,EAIc,IAJd,EAIc;wBAHV,MAEa,CAFbD,aAEaC,mBAFb,EAEa;QAFOiB,OAAO,EAAEjB,iBAAUkB,SAE1B;gEAFgBlB,iBAAUkB,YAASV;MAEnC,CAFb;0BAAkD,MAElD;;;;OAFA;;MAAA,cAEa,EACH;;;;IAAA,CAJd,CAXc,EAgBdT,aAIcC,mBAJd,EAIc,IAJd,EAIc;wBAHV,MAEW,CAFXD,aAEWC,iBAFX,EAEW;QAFAmB,OAAO,EAAEnB,iBAAUmB,OAEnB;QAF4BxB,KAAoB,EAApB;UAAA;QAAA,CAE5B;QAFiDe,IAAI,EAAC,SAEtD;QAFgE,aAAU,QAE1E;QAFoFK,OAAK,EAAEf;MAE3F,CAFX;0BAAkH,MAElH;;;;OAFA;;MAAA,cAEW,EACD;;;;IAAA,CAJd,CAhBc;;;;GAJlB;;EAAA,YA0BE,CAhCN","names":["class","_createElementVNode","style","_createElementBlock","_createCommentVNode","_hoisted_2","_createVNode","$setup","ref","model","rules","size","path","value","account","$event","placeholder","type","password","code","change","change_img_code","onClick","onGetCode","checked","autoLogin","loading"],"sourceRoot":"","sources":["E:\\VCode\\SHC社区管理系统\\shc_community_manager_system\\src\\layout\\user\\LoginLayout.vue"],"sourcesContent":["<template>\r\n    <div class=\"body\">\r\n        <!-- 标题 -->\r\n        <div style=\"display: flex;flex-direction: row;justify-content: center;align-items: center;margin-bottom: 10px;\">\r\n            <h1>SHC 社区管理系统</h1>\r\n        </div>\r\n        <!-- form 表单 -->\r\n        <n-form label-placement=\"left\" ref=\"formRef\" :model=\"formValue\" :rules=\"rules\" size=\"medium\"\r\n            style=\"width: 280px;\">\r\n            <n-form-item path=\"account\">\r\n                <n-input v-model:value=\"formValue.account\" placeholder=\"请输入账号\" />\r\n            </n-form-item>\r\n            <n-form-item path=\"password\">\r\n                <n-input type=\"password\" v-model:value=\"formValue.password\" placeholder=\"请输入密码\" />\r\n            </n-form-item>\r\n            <n-form-item path=\"code\">\r\n                <n-input-group>\r\n                    <n-input v-model:value=\"formValue.code\" placeholder=\"请输入验证码\" />\r\n                    <image-code :change=\"data.change_img_code\" @click=\"changeImageCode\" @getCode=\"backImageCode\">\r\n                    </image-code>\r\n                </n-input-group>\r\n            </n-form-item>\r\n            <n-form-item>\r\n                <n-checkbox v-model:checked=\"formValue.autoLogin\">\r\n                    自动登录\r\n                </n-checkbox>\r\n            </n-form-item>\r\n            <n-form-item>\r\n                <n-button :loading=\"formValue.loading\" style=\"width: 100%;\" type=\"primary\" attr-type=\"button\" @click=\"loginClick\">\r\n                    登录\r\n                </n-button>\r\n            </n-form-item>\r\n        </n-form>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\n// 引入 vue\r\nimport { ref, reactive } from 'vue'\r\n// 引入 naive-ui 组件\r\nimport {\r\n    NForm, NFormItem, NButton, NInput, NCheckbox,\r\n    NInputGroup, useMessage\r\n} from 'naive-ui'\r\n// 引入图形验证码组件\r\nimport imageCode from '../../components/ImageCode.vue'\r\n// 引入 md5 插件\r\nimport md5 from 'md5';\r\nimport axios from 'axios';\r\n\r\n// 验证码数据\r\nconst data = reactive({\r\n    change_img_code: false, // 刷新验证码\r\n    img_code: '',// 加密后的验证码值\r\n})\r\n\r\n// 刷新验证码操作\r\nconst changeImageCode = () => {\r\n    data.change_img_code = !data.change_img_code\r\n}\r\n\r\n// 接收组件返回加密后的验证码值\r\nconst backImageCode = (code) => {\r\n    data.img_code = code\r\n}\r\n\r\n\r\nconst formRef = ref(null)\r\nconst message = useMessage()\r\n\r\nconst formValue = ref({\r\n    account: \"\",\r\n    password: \"\",\r\n    code: \"\",\r\n    autoLogin: false,\r\n    loading: false\r\n})\r\nconst rules = {\r\n    account: {\r\n        required: true,\r\n        message: \"请输入账号\",\r\n        trigger: [\"input\", \"blur\"]\r\n    },\r\n    password: {\r\n        required: true,\r\n        message: \"请输入密码\",\r\n        trigger: [\"input\", \"blur\"]\r\n    },\r\n    code: {\r\n        required: true,\r\n        message: \"请输入验证码\",\r\n        trigger: [\"input\", \"blur\"]\r\n    }\r\n}\r\n\r\n// 登录按钮点事件\r\nconst loginClick = (e) => {\r\n    e.preventDefault();\r\n    formRef.value?.validate((errors) => {\r\n        if (!errors) {\r\n            if (data.img_code === md5(formValue.value.code)) {\r\n                // message.success(\"验证码校验成功！\");\r\n                changeImageCode(); // 刷新验证码\r\n                login() // 登录\r\n            } else {\r\n                message.warning(\"验证码输入错误！\");\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\n// 登录\r\nfunction login() {\r\n    formValue.value.loading = true\r\n    axios({\r\n        url: '/api/login',\r\n        params: {\r\n            account: formValue.value.account,\r\n            password: formValue.value.password\r\n        }\r\n    }).then(res => {\r\n        const data = res.data\r\n        console.log(res);\r\n        if (data.success) {\r\n            message.success(data.data.user.name + \"登录成功！\")\r\n            localStorage.setItem(\"user\",JSON.stringify(data.data.user))\r\n        } else {\r\n            message.warning(data.message);\r\n        }\r\n\r\n    }).catch(err => {\r\n        message.error(\"请求异常！\" + err)\r\n    }).finally(() => {\r\n        formValue.value.loading = false\r\n    })\r\n}\r\n\r\n</script>\r\n\r\n<script>\r\nexport default {\r\n    name: 'LoginLayout'\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.body {\r\n    background: url(../../assets/login/loginBg.svg);\r\n    background-size: cover;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-height: 100vh;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}