{"ast":null,"code":"const __default__ = {\n  name: 'LoginLayout'\n};\nimport { ref, reactive } from 'vue'; // 引入 naive-ui 组件\n\nimport { NForm, NFormItem, NButton, NInput, NCheckbox, useMessage } from 'naive-ui'; // 引入图形验证码组件\n\nimport imageCode from '../../components/ImageCode.vue';\nexport default /*#__PURE__*/Object.assign(__default__, {\n  setup(__props, {\n    expose\n  }) {\n    expose(); // 引入 vue\n\n    const autoLogin = ref(false);\n    const formRef = ref(null);\n    const message = useMessage();\n    const formValue = ref({\n      username: \"\",\n      passeword: \"\",\n      code: \"\"\n    });\n    const rules = {\n      username: {\n        required: true,\n        message: \"请输入用户名\",\n        trigger: [\"input\", \"blur\"]\n      },\n      password: {\n        required: true,\n        message: \"请输入密码\",\n        trigger: [\"input\", \"blur\"]\n      },\n      code: {\n        required: true,\n        message: \"请输入验证码\",\n        trigger: [\"input\", \"blur\"]\n      }\n    };\n\n    const loginClick = e => {\n      e.preventDefault();\n      formRef.value?.validate(errors => {\n        if (!errors) {\n          message.success(\"Valid\");\n        } else {\n          console.log(errors);\n          message.error(\"Invalid\");\n        }\n      });\n    };\n\n    const data = reactive({\n      change_img_code: false,\n      // 刷新验证码\n      img_code: '' // 加密后的验证码值\n\n    }); // 刷新验证码操作\n\n    const changeImageCode = () => {\n      data.change_img_code = !data.change_img_code;\n    }; // 接收组件返回加密后的验证码值\n\n\n    const backImageCode = code => {\n      data.img_code = code;\n      console.log('data', data.img_code);\n    };\n\n    const __returned__ = {\n      autoLogin,\n      formRef,\n      message,\n      formValue,\n      rules,\n      loginClick,\n      data,\n      changeImageCode,\n      backImageCode,\n      ref,\n      reactive,\n      NForm,\n      NFormItem,\n      NButton,\n      NInput,\n      NCheckbox,\n      useMessage,\n      imageCode\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n\n});","map":{"version":3,"mappings":"AA4GA,oBAAe;EACXA,IAAI,EAAE;AADK,CAAf;AAvEA,SAASC,GAAT,EAAaC,QAAb,QAA6B,KAA7B,C,CACA;;AACA,SACIC,KADJ,EACWC,SADX,EACsBC,OADtB,EAC+BC,MAD/B,EACuCC,SADvC,EAEIC,UAFJ,QAGO,UAHP,C,CAIA;;AACA,OAAOC,SAAP,MAAsB,gCAAtB;;;;;cARA;;IAUA,MAAMC,SAAS,GAAGT,GAAG,CAAC,KAAD,CAArB;IAEA,MAAMU,OAAO,GAAGV,GAAG,CAAC,IAAD,CAAnB;IACA,MAAMW,OAAO,GAAGJ,UAAU,EAA1B;IAEA,MAAMK,SAAS,GAAGZ,GAAG,CAAC;MAClBa,QAAQ,EAAE,EADQ;MAElBC,SAAS,EAAE,EAFO;MAGlBC,IAAI,EAAE;IAHY,CAAD,CAArB;IAKA,MAAMC,KAAK,GAAG;MACVH,QAAQ,EAAE;QACNI,QAAQ,EAAE,IADJ;QAENN,OAAO,EAAE,QAFH;QAGNO,OAAO,EAAE,CAAC,OAAD,EAAU,MAAV;MAHH,CADA;MAMVC,QAAQ,EAAE;QACNF,QAAQ,EAAE,IADJ;QAENN,OAAO,EAAE,OAFH;QAGNO,OAAO,EAAE,CAAC,OAAD,EAAU,MAAV;MAHH,CANA;MAWVH,IAAI,EAAE;QACFE,QAAQ,EAAE,IADR;QAEFN,OAAO,EAAE,QAFP;QAGFO,OAAO,EAAE,CAAC,OAAD,EAAU,MAAV;MAHP;IAXI,CAAd;;IAkBA,MAAME,UAAU,GAAIC,CAAD,IAAO;MACtBA,CAAC,CAACC,cAAF;MACAZ,OAAO,CAACa,KAAR,EAAeC,QAAf,CAAyBC,MAAD,IAAY;QAChC,IAAI,CAACA,MAAL,EAAa;UACTd,OAAO,CAACe,OAAR,CAAgB,OAAhB;QACH,CAFD,MAEO;UACHC,OAAO,CAACC,GAAR,CAAYH,MAAZ;UACAd,OAAO,CAACkB,KAAR,CAAc,SAAd;QACH;MACJ,CAPD;IAQH,CAVD;;IAcA,MAAMC,IAAI,GAAG7B,QAAQ,CAAC;MAClB8B,eAAe,EAAE,KADC;MACM;MACxBC,QAAQ,EAAE,EAFQ,CAEL;;IAFK,CAAD,CAArB,EAKA;;IACA,MAAMC,eAAe,GAAG,MAAM;MAC1BH,IAAI,CAACC,eAAL,GAAuB,CAACD,IAAI,CAACC,eAA7B;IACH,CAFD,EAIA;;;IACA,MAAMG,aAAa,GAAInB,IAAD,IAAU;MAC5Be,IAAI,CAACE,QAAL,GAAgBjB,IAAhB;MACAY,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBE,IAAI,CAACE,QAAzB;IACH,CAHD","names":["name","ref","reactive","NForm","NFormItem","NButton","NInput","NCheckbox","useMessage","imageCode","autoLogin","formRef","message","formValue","username","passeword","code","rules","required","trigger","password","loginClick","e","preventDefault","value","validate","errors","success","console","log","error","data","change_img_code","img_code","changeImageCode","backImageCode"],"sources":["E:/VCode/SHC社区管理系统/shc_community_manager_system/src/layout/user/LoginLayout.vue"],"sourcesContent":["<template>\r\n    <div class=\"body\">\r\n        <!-- 标题 -->\r\n        <div style=\"display: flex;flex-direction: row;justify-content: center;align-items: center;margin-bottom: 10px;\">\r\n            <h1>SHC 社区管理系统</h1>\r\n        </div>\r\n        <!-- form 表单 -->\r\n        <n-form label-placement=\"left\" ref=\"formRef\" :model=\"formValue\" :rules=\"rules\" size=\"medium\"\r\n            style=\"width: 280px;\">\r\n            <n-form-item path=\"username\">\r\n                <n-input v-model:value=\"formValue.username\" placeholder=\"请输入用户名\" />\r\n            </n-form-item>\r\n            <n-form-item path=\"password\">\r\n                <n-input v-model:value=\"formValue.passeword\" placeholder=\"请输入密码\" />\r\n            </n-form-item>\r\n            <n-form-item path=\"code\">\r\n                <n-input-group>\r\n                    <n-input v-model:value=\"formValue.code\" placeholder=\"请输入验证码\" />\r\n                    \r\n                </n-input-group>\r\n            </n-form-item>\r\n            <n-form-item>\r\n                <n-checkbox v-model:checked=\"autoLogin\">\r\n                    自动登录\r\n                </n-checkbox>\r\n            </n-form-item>\r\n            <n-form-item>\r\n                <n-button style=\"width: 100%;\" type=\"primary\" attr-type=\"button\" @click=\"loginClick\">\r\n                    登录\r\n                </n-button>\r\n            </n-form-item>\r\n        </n-form>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\n// 引入 vue\r\nimport { ref,reactive } from 'vue'\r\n// 引入 naive-ui 组件\r\nimport {\r\n    NForm, NFormItem, NButton, NInput, NCheckbox,\r\n    useMessage\r\n} from 'naive-ui'\r\n// 引入图形验证码组件\r\nimport imageCode from '../../components/ImageCode.vue'\r\n\r\nconst autoLogin = ref(false);\r\n\r\nconst formRef = ref(null)\r\nconst message = useMessage()\r\n\r\nconst formValue = ref({\r\n    username: \"\",\r\n    passeword: \"\",\r\n    code: \"\"\r\n})\r\nconst rules = {\r\n    username: {\r\n        required: true,\r\n        message: \"请输入用户名\",\r\n        trigger: [\"input\", \"blur\"]\r\n    },\r\n    password: {\r\n        required: true,\r\n        message: \"请输入密码\",\r\n        trigger: [\"input\", \"blur\"]\r\n    },\r\n    code: {\r\n        required: true,\r\n        message: \"请输入验证码\",\r\n        trigger: [\"input\", \"blur\"]\r\n    }\r\n}\r\n\r\nconst loginClick = (e) => {\r\n    e.preventDefault();\r\n    formRef.value?.validate((errors) => {\r\n        if (!errors) {\r\n            message.success(\"Valid\");\r\n        } else {\r\n            console.log(errors);\r\n            message.error(\"Invalid\");\r\n        }\r\n    })\r\n}\r\n\r\n\r\n\r\nconst data = reactive({\r\n    change_img_code: false, // 刷新验证码\r\n    img_code: '',// 加密后的验证码值\r\n})\r\n\r\n// 刷新验证码操作\r\nconst changeImageCode = () => {\r\n    data.change_img_code = !data.change_img_code\r\n}\r\n\r\n// 接收组件返回加密后的验证码值\r\nconst backImageCode = (code) => {\r\n    data.img_code = code\r\n    console.log('data', data.img_code)\r\n}\r\n\r\n\r\n</script>\r\n\r\n<script>\r\nexport default {\r\n    name: 'LoginLayout'\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.body {\r\n    background: url(../../assets/login/loginBg.svg);\r\n    background-size: cover;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-height: 100vh;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}