{"ast":null,"code":"import { h, computed, inject, defineComponent, Transition } from 'vue';\nimport { useMemo } from 'vooks';\nimport { NCheckbox } from '../../checkbox';\nimport { NBaseLoading, NBaseIcon } from '../../_internal';\nimport { ChevronRightIcon, CheckmarkIcon } from '../../_internal/icons';\nimport { cascaderInjectionKey } from './interface';\nimport { happensIn } from 'seemly';\nexport default defineComponent({\n  name: 'NCascaderOption',\n  props: {\n    tmNode: {\n      type: Object,\n      required: true\n    }\n  },\n\n  setup(props) {\n    const {\n      expandTriggerRef,\n      remoteRef,\n      multipleRef,\n      mergedValueRef,\n      checkedKeysRef,\n      indeterminateKeysRef,\n      hoverKeyPathRef,\n      keyboardKeyRef,\n      loadingKeySetRef,\n      cascadeRef,\n      mergedCheckStrategyRef,\n      onLoadRef,\n      mergedClsPrefixRef,\n      mergedThemeRef,\n      labelFieldRef,\n      updateHoverKey,\n      updateKeyboardKey,\n      addLoadingKey,\n      deleteLoadingKey,\n      closeMenu,\n      doCheck,\n      doUncheck,\n      renderLabelRef // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    } = inject(cascaderInjectionKey);\n    const valueRef = computed(() => props.tmNode.key);\n    const useHoverTriggerRef = computed(() => {\n      const {\n        value: expandTrigger\n      } = expandTriggerRef;\n      const {\n        value: remote\n      } = remoteRef;\n      return !remote && expandTrigger === 'hover';\n    });\n    const mergedHandleMouseEnterRef = computed(() => {\n      if (useHoverTriggerRef.value) {\n        return handleMouseEnter;\n      }\n\n      return undefined;\n    });\n    const mergedHandleMouseMoveRef = computed(() => {\n      if (useHoverTriggerRef.value) {\n        return handleMouseMove;\n      }\n\n      return undefined;\n    });\n    const checkedRef = useMemo(() => {\n      const {\n        value: multiple\n      } = multipleRef;\n      if (!multiple) return mergedValueRef.value === valueRef.value;\n      return checkedKeysRef.value.includes(valueRef.value);\n    });\n    const indeterminateRef = useMemo(() => {\n      if (!multipleRef.value) return false;\n      return indeterminateKeysRef.value.includes(valueRef.value);\n    });\n    const hoverPendingRef = useMemo(() => {\n      return hoverKeyPathRef.value.includes(valueRef.value);\n    });\n    const keyboardPendingRef = useMemo(() => {\n      const {\n        value: keyboardKey\n      } = keyboardKeyRef;\n      if (keyboardKey === null) return false;\n      return keyboardKey === valueRef.value;\n    });\n    const isLoadingRef = useMemo(() => {\n      if (remoteRef.value) {\n        return loadingKeySetRef.value.has(valueRef.value);\n      }\n\n      return false;\n    });\n    const showCheckboxRef = computed(() => {\n      if (multipleRef.value && cascadeRef.value) return true;\n      if (mergedCheckStrategyRef.value !== 'child') return true;\n    });\n    const isLeafRef = computed(() => props.tmNode.isLeaf);\n    const disabledRef = computed(() => props.tmNode.disabled);\n    const labelRef = computed(() => props.tmNode.rawNode[labelFieldRef.value]);\n    const isShallowLoadedRef = computed(() => {\n      return props.tmNode.shallowLoaded;\n    });\n\n    function handleClick(e) {\n      if (disabledRef.value) return;\n      const {\n        value: remote\n      } = remoteRef;\n      const {\n        value: loadingKeySet\n      } = loadingKeySetRef;\n      const {\n        value: onLoad\n      } = onLoadRef;\n      const {\n        value\n      } = valueRef;\n      const {\n        value: isLeaf\n      } = isLeafRef;\n      const {\n        value: isShallowLoaded\n      } = isShallowLoadedRef;\n\n      if (!happensIn(e, 'checkbox')) {\n        if (remote && !isShallowLoaded && !loadingKeySet.has(value) && onLoad) {\n          addLoadingKey(value);\n          onLoad(props.tmNode.rawNode).then(() => {\n            deleteLoadingKey(value);\n          }).catch(() => {\n            deleteLoadingKey(value);\n          });\n        }\n\n        updateHoverKey(value);\n        updateKeyboardKey(value);\n      }\n\n      if (isLeaf) {\n        toggleCheckbox();\n      }\n    }\n\n    function handleMouseEnter() {\n      if (!useHoverTriggerRef.value || disabledRef.value) return;\n      const {\n        value\n      } = valueRef;\n      updateHoverKey(value);\n      updateKeyboardKey(value);\n    }\n\n    function handleMouseMove() {\n      if (!useHoverTriggerRef.value) return;\n      handleMouseEnter();\n    }\n\n    function handleCheckboxUpdateValue() {\n      const {\n        value: isLeaf\n      } = isLeafRef;\n      if (!isLeaf) toggleCheckbox();\n    }\n\n    function toggleCheckbox() {\n      const {\n        value: multiple\n      } = multipleRef;\n      const {\n        value\n      } = valueRef;\n\n      if (multiple) {\n        if (indeterminateRef.value || checkedRef.value) {\n          doUncheck(value);\n        } else {\n          doCheck(value);\n        }\n      } else {\n        doCheck(value);\n        closeMenu(true);\n      }\n    }\n\n    return {\n      checkStrategy: mergedCheckStrategyRef,\n      multiple: multipleRef,\n      cascade: cascadeRef,\n      checked: checkedRef,\n      indeterminate: indeterminateRef,\n      hoverPending: hoverPendingRef,\n      keyboardPending: keyboardPendingRef,\n      isLoading: isLoadingRef,\n      showCheckbox: showCheckboxRef,\n      isLeaf: isLeafRef,\n      disabled: disabledRef,\n      label: labelRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      mergedTheme: mergedThemeRef,\n      handleClick,\n      handleCheckboxUpdateValue,\n      mergedHandleMouseEnter: mergedHandleMouseEnterRef,\n      mergedHandleMouseMove: mergedHandleMouseMoveRef,\n      renderLabel: renderLabelRef\n    };\n  },\n\n  render() {\n    const {\n      mergedClsPrefix,\n      renderLabel\n    } = this;\n    return h(\"div\", {\n      class: [`${mergedClsPrefix}-cascader-option`, {\n        [`${mergedClsPrefix}-cascader-option--pending`]: this.keyboardPending || this.hoverPending,\n        [`${mergedClsPrefix}-cascader-option--disabled`]: this.disabled,\n        [`${mergedClsPrefix}-cascader-option--show-prefix`]: this.showCheckbox\n      }],\n      onMouseenter: this.mergedHandleMouseEnter,\n      onMousemove: this.mergedHandleMouseMove,\n      onClick: this.handleClick\n    }, this.showCheckbox ? h(\"div\", {\n      class: `${mergedClsPrefix}-cascader-option__prefix`\n    }, h(NCheckbox, {\n      focusable: false,\n      \"data-checkbox\": true,\n      disabled: this.disabled,\n      checked: this.checked,\n      indeterminate: this.indeterminate,\n      theme: this.mergedTheme.peers.Checkbox,\n      themeOverrides: this.mergedTheme.peerOverrides.Checkbox,\n      onUpdateChecked: this.handleCheckboxUpdateValue\n    })) : null, h(\"span\", {\n      class: `${mergedClsPrefix}-cascader-option__label`\n    }, renderLabel ? renderLabel(this.tmNode.rawNode, this.checked) : this.label), h(\"div\", {\n      class: `${mergedClsPrefix}-cascader-option__suffix`\n    }, h(\"div\", {\n      class: `${mergedClsPrefix}-cascader-option-icon-placeholder`\n    }, !this.isLeaf ? h(NBaseLoading, {\n      clsPrefix: mergedClsPrefix,\n      scale: 0.85,\n      strokeWidth: 24,\n      show: this.isLoading,\n      class: `${mergedClsPrefix}-cascader-option-icon`\n    }, {\n      default: () => h(NBaseIcon, {\n        clsPrefix: mergedClsPrefix,\n        key: \"arrow\",\n        class: `${mergedClsPrefix}-cascader-option-icon ${mergedClsPrefix}-cascader-option-icon--arrow`\n      }, {\n        default: () => h(ChevronRightIcon, null)\n      })\n    }) : this.checkStrategy === 'child' && !(this.multiple && this.cascade) ? h(Transition, {\n      name: \"fade-in-scale-up-transition\"\n    }, {\n      default: () => this.checked ? h(NBaseIcon, {\n        clsPrefix: mergedClsPrefix,\n        class: `${mergedClsPrefix}-cascader-option-icon ${mergedClsPrefix}-cascader-option-icon--checkmark`\n      }, {\n        default: () => h(CheckmarkIcon, null)\n      }) : null\n    }) : null)));\n  }\n\n});","map":{"version":3,"names":["h","computed","inject","defineComponent","Transition","useMemo","NCheckbox","NBaseLoading","NBaseIcon","ChevronRightIcon","CheckmarkIcon","cascaderInjectionKey","happensIn","name","props","tmNode","type","Object","required","setup","expandTriggerRef","remoteRef","multipleRef","mergedValueRef","checkedKeysRef","indeterminateKeysRef","hoverKeyPathRef","keyboardKeyRef","loadingKeySetRef","cascadeRef","mergedCheckStrategyRef","onLoadRef","mergedClsPrefixRef","mergedThemeRef","labelFieldRef","updateHoverKey","updateKeyboardKey","addLoadingKey","deleteLoadingKey","closeMenu","doCheck","doUncheck","renderLabelRef","valueRef","key","useHoverTriggerRef","value","expandTrigger","remote","mergedHandleMouseEnterRef","handleMouseEnter","undefined","mergedHandleMouseMoveRef","handleMouseMove","checkedRef","multiple","includes","indeterminateRef","hoverPendingRef","keyboardPendingRef","keyboardKey","isLoadingRef","has","showCheckboxRef","isLeafRef","isLeaf","disabledRef","disabled","labelRef","rawNode","isShallowLoadedRef","shallowLoaded","handleClick","e","loadingKeySet","onLoad","isShallowLoaded","then","catch","toggleCheckbox","handleCheckboxUpdateValue","checkStrategy","cascade","checked","indeterminate","hoverPending","keyboardPending","isLoading","showCheckbox","label","mergedClsPrefix","mergedTheme","mergedHandleMouseEnter","mergedHandleMouseMove","renderLabel","render","class","onMouseenter","onMousemove","onClick","focusable","theme","peers","Checkbox","themeOverrides","peerOverrides","onUpdateChecked","clsPrefix","scale","strokeWidth","show","default"],"sources":["E:/VCode/SHC社区管理系统/shc_community_manager_system/node_modules/naive-ui/es/cascader/src/CascaderOption.js"],"sourcesContent":["import { h, computed, inject, defineComponent, Transition } from 'vue';\nimport { useMemo } from 'vooks';\nimport { NCheckbox } from '../../checkbox';\nimport { NBaseLoading, NBaseIcon } from '../../_internal';\nimport { ChevronRightIcon, CheckmarkIcon } from '../../_internal/icons';\nimport { cascaderInjectionKey } from './interface';\nimport { happensIn } from 'seemly';\nexport default defineComponent({\n    name: 'NCascaderOption',\n    props: {\n        tmNode: {\n            type: Object,\n            required: true\n        }\n    },\n    setup(props) {\n        const { expandTriggerRef, remoteRef, multipleRef, mergedValueRef, checkedKeysRef, indeterminateKeysRef, hoverKeyPathRef, keyboardKeyRef, loadingKeySetRef, cascadeRef, mergedCheckStrategyRef, onLoadRef, mergedClsPrefixRef, mergedThemeRef, labelFieldRef, updateHoverKey, updateKeyboardKey, addLoadingKey, deleteLoadingKey, closeMenu, doCheck, doUncheck, renderLabelRef\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n         } = inject(cascaderInjectionKey);\n        const valueRef = computed(() => props.tmNode.key);\n        const useHoverTriggerRef = computed(() => {\n            const { value: expandTrigger } = expandTriggerRef;\n            const { value: remote } = remoteRef;\n            return !remote && expandTrigger === 'hover';\n        });\n        const mergedHandleMouseEnterRef = computed(() => {\n            if (useHoverTriggerRef.value) {\n                return handleMouseEnter;\n            }\n            return undefined;\n        });\n        const mergedHandleMouseMoveRef = computed(() => {\n            if (useHoverTriggerRef.value) {\n                return handleMouseMove;\n            }\n            return undefined;\n        });\n        const checkedRef = useMemo(() => {\n            const { value: multiple } = multipleRef;\n            if (!multiple)\n                return mergedValueRef.value === valueRef.value;\n            return checkedKeysRef.value.includes(valueRef.value);\n        });\n        const indeterminateRef = useMemo(() => {\n            if (!multipleRef.value)\n                return false;\n            return indeterminateKeysRef.value.includes(valueRef.value);\n        });\n        const hoverPendingRef = useMemo(() => {\n            return hoverKeyPathRef.value.includes(valueRef.value);\n        });\n        const keyboardPendingRef = useMemo(() => {\n            const { value: keyboardKey } = keyboardKeyRef;\n            if (keyboardKey === null)\n                return false;\n            return keyboardKey === valueRef.value;\n        });\n        const isLoadingRef = useMemo(() => {\n            if (remoteRef.value) {\n                return loadingKeySetRef.value.has(valueRef.value);\n            }\n            return false;\n        });\n        const showCheckboxRef = computed(() => {\n            if (multipleRef.value && cascadeRef.value)\n                return true;\n            if (mergedCheckStrategyRef.value !== 'child')\n                return true;\n        });\n        const isLeafRef = computed(() => props.tmNode.isLeaf);\n        const disabledRef = computed(() => props.tmNode.disabled);\n        const labelRef = computed(() => props.tmNode.rawNode[labelFieldRef.value]);\n        const isShallowLoadedRef = computed(() => {\n            return props.tmNode.shallowLoaded;\n        });\n        function handleClick(e) {\n            if (disabledRef.value)\n                return;\n            const { value: remote } = remoteRef;\n            const { value: loadingKeySet } = loadingKeySetRef;\n            const { value: onLoad } = onLoadRef;\n            const { value } = valueRef;\n            const { value: isLeaf } = isLeafRef;\n            const { value: isShallowLoaded } = isShallowLoadedRef;\n            if (!happensIn(e, 'checkbox')) {\n                if (remote && !isShallowLoaded && !loadingKeySet.has(value) && onLoad) {\n                    addLoadingKey(value);\n                    onLoad(props.tmNode.rawNode)\n                        .then(() => {\n                        deleteLoadingKey(value);\n                    })\n                        .catch(() => {\n                        deleteLoadingKey(value);\n                    });\n                }\n                updateHoverKey(value);\n                updateKeyboardKey(value);\n            }\n            if (isLeaf) {\n                toggleCheckbox();\n            }\n        }\n        function handleMouseEnter() {\n            if (!useHoverTriggerRef.value || disabledRef.value)\n                return;\n            const { value } = valueRef;\n            updateHoverKey(value);\n            updateKeyboardKey(value);\n        }\n        function handleMouseMove() {\n            if (!useHoverTriggerRef.value)\n                return;\n            handleMouseEnter();\n        }\n        function handleCheckboxUpdateValue() {\n            const { value: isLeaf } = isLeafRef;\n            if (!isLeaf)\n                toggleCheckbox();\n        }\n        function toggleCheckbox() {\n            const { value: multiple } = multipleRef;\n            const { value } = valueRef;\n            if (multiple) {\n                if (indeterminateRef.value || checkedRef.value) {\n                    doUncheck(value);\n                }\n                else {\n                    doCheck(value);\n                }\n            }\n            else {\n                doCheck(value);\n                closeMenu(true);\n            }\n        }\n        return {\n            checkStrategy: mergedCheckStrategyRef,\n            multiple: multipleRef,\n            cascade: cascadeRef,\n            checked: checkedRef,\n            indeterminate: indeterminateRef,\n            hoverPending: hoverPendingRef,\n            keyboardPending: keyboardPendingRef,\n            isLoading: isLoadingRef,\n            showCheckbox: showCheckboxRef,\n            isLeaf: isLeafRef,\n            disabled: disabledRef,\n            label: labelRef,\n            mergedClsPrefix: mergedClsPrefixRef,\n            mergedTheme: mergedThemeRef,\n            handleClick,\n            handleCheckboxUpdateValue,\n            mergedHandleMouseEnter: mergedHandleMouseEnterRef,\n            mergedHandleMouseMove: mergedHandleMouseMoveRef,\n            renderLabel: renderLabelRef\n        };\n    },\n    render() {\n        const { mergedClsPrefix, renderLabel } = this;\n        return (h(\"div\", { class: [\n                `${mergedClsPrefix}-cascader-option`,\n                {\n                    [`${mergedClsPrefix}-cascader-option--pending`]: this.keyboardPending || this.hoverPending,\n                    [`${mergedClsPrefix}-cascader-option--disabled`]: this.disabled,\n                    [`${mergedClsPrefix}-cascader-option--show-prefix`]: this.showCheckbox\n                }\n            ], onMouseenter: this.mergedHandleMouseEnter, onMousemove: this.mergedHandleMouseMove, onClick: this.handleClick },\n            this.showCheckbox ? (h(\"div\", { class: `${mergedClsPrefix}-cascader-option__prefix` },\n                h(NCheckbox, { focusable: false, \"data-checkbox\": true, disabled: this.disabled, checked: this.checked, indeterminate: this.indeterminate, theme: this.mergedTheme.peers.Checkbox, themeOverrides: this.mergedTheme.peerOverrides.Checkbox, onUpdateChecked: this.handleCheckboxUpdateValue }))) : null,\n            h(\"span\", { class: `${mergedClsPrefix}-cascader-option__label` }, renderLabel\n                ? renderLabel(this.tmNode.rawNode, this.checked)\n                : this.label),\n            h(\"div\", { class: `${mergedClsPrefix}-cascader-option__suffix` },\n                h(\"div\", { class: `${mergedClsPrefix}-cascader-option-icon-placeholder` }, !this.isLeaf ? (h(NBaseLoading, { clsPrefix: mergedClsPrefix, scale: 0.85, strokeWidth: 24, show: this.isLoading, class: `${mergedClsPrefix}-cascader-option-icon` }, {\n                    default: () => (h(NBaseIcon, { clsPrefix: mergedClsPrefix, key: \"arrow\", class: `${mergedClsPrefix}-cascader-option-icon ${mergedClsPrefix}-cascader-option-icon--arrow` }, {\n                        default: () => h(ChevronRightIcon, null)\n                    }))\n                })) : this.checkStrategy === 'child' &&\n                    !(this.multiple && this.cascade) ? (h(Transition, { name: \"fade-in-scale-up-transition\" }, {\n                    default: () => this.checked ? (h(NBaseIcon, { clsPrefix: mergedClsPrefix, class: `${mergedClsPrefix}-cascader-option-icon ${mergedClsPrefix}-cascader-option-icon--checkmark` }, { default: () => h(CheckmarkIcon, null) })) : null\n                })) : null))));\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}