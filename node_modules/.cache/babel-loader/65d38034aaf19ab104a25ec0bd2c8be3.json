{"ast":null,"code":"import { h, defineComponent, computed, ref, provide, toRef } from 'vue';\nimport { useRtl } from '../../_mixins/use-rtl';\nimport { NBaseClose } from '../../_internal/close';\nimport { useConfig, useThemeClass, useTheme } from '../../_mixins';\nimport { warn, createKey, call, createInjectionKey, color2Class, resolveWrappedSlot } from '../../_utils';\nimport { tagLight } from '../styles';\nimport commonProps from './common-props';\nimport style from './styles/index.cssr';\nexport const tagProps = Object.assign(Object.assign(Object.assign({}, useTheme.props), commonProps), {\n  bordered: {\n    type: Boolean,\n    default: undefined\n  },\n  checked: Boolean,\n  checkable: Boolean,\n  strong: Boolean,\n  triggerClickOnClose: Boolean,\n  onClose: [Array, Function],\n  onMouseenter: Function,\n  onMouseleave: Function,\n  'onUpdate:checked': Function,\n  onUpdateChecked: Function,\n  // private\n  internalCloseFocusable: {\n    type: Boolean,\n    default: true\n  },\n  // deprecated\n  onCheckedChange: {\n    type: Function,\n    validator: () => {\n      if (process.env.NODE_ENV !== 'production') {\n        warn('tag', '`on-checked-change` is deprecated, please use `on-update:checked` instead');\n      }\n\n      return true;\n    },\n    default: undefined\n  }\n});\nexport const tagInjectionKey = createInjectionKey('n-tag');\nexport default defineComponent({\n  name: 'Tag',\n  props: tagProps,\n\n  setup(props) {\n    const contentRef = ref(null);\n    const {\n      mergedBorderedRef,\n      mergedClsPrefixRef,\n      inlineThemeDisabled,\n      mergedRtlRef\n    } = useConfig(props);\n    const themeRef = useTheme('Tag', '-tag', style, tagLight, props, mergedClsPrefixRef);\n    provide(tagInjectionKey, {\n      roundRef: toRef(props, 'round')\n    });\n\n    function handleClick(e) {\n      if (!props.disabled) {\n        if (props.checkable) {\n          const {\n            checked,\n            onCheckedChange,\n            onUpdateChecked,\n            'onUpdate:checked': _onUpdateChecked\n          } = props;\n          if (onUpdateChecked) onUpdateChecked(!checked);\n          if (_onUpdateChecked) _onUpdateChecked(!checked); // deprecated\n\n          if (onCheckedChange) onCheckedChange(!checked);\n        }\n      }\n    }\n\n    function handleCloseClick(e) {\n      if (!props.triggerClickOnClose) {\n        e.stopPropagation();\n      }\n\n      if (!props.disabled) {\n        const {\n          onClose\n        } = props;\n        if (onClose) call(onClose, e);\n      }\n    }\n\n    const tagPublicMethods = {\n      setTextContent(textContent) {\n        const {\n          value\n        } = contentRef;\n        if (value) value.textContent = textContent;\n      }\n\n    };\n    const rtlEnabledRef = useRtl('Tag', mergedRtlRef, mergedClsPrefixRef);\n    const cssVarsRef = computed(() => {\n      const {\n        type,\n        size,\n        color: {\n          color,\n          textColor\n        } = {}\n      } = props;\n      const {\n        common: {\n          cubicBezierEaseInOut\n        },\n        self: {\n          padding,\n          closeMargin,\n          closeMarginRtl,\n          borderRadius,\n          opacityDisabled,\n          textColorCheckable,\n          textColorHoverCheckable,\n          textColorPressedCheckable,\n          textColorChecked,\n          colorCheckable,\n          colorHoverCheckable,\n          colorPressedCheckable,\n          colorChecked,\n          colorCheckedHover,\n          colorCheckedPressed,\n          closeBorderRadius,\n          fontWeightStrong,\n          [createKey('colorBordered', type)]: colorBordered,\n          [createKey('closeSize', size)]: closeSize,\n          [createKey('closeIconSize', size)]: closeIconSize,\n          [createKey('fontSize', size)]: fontSize,\n          [createKey('height', size)]: height,\n          [createKey('color', type)]: typedColor,\n          [createKey('textColor', type)]: typeTextColor,\n          [createKey('border', type)]: border,\n          [createKey('closeIconColor', type)]: closeIconColor,\n          [createKey('closeIconColorHover', type)]: closeIconColorHover,\n          [createKey('closeIconColorPressed', type)]: closeIconColorPressed,\n          [createKey('closeColorHover', type)]: closeColorHover,\n          [createKey('closeColorPressed', type)]: closeColorPressed\n        }\n      } = themeRef.value;\n      return {\n        '--n-font-weight-strong': fontWeightStrong,\n        '--n-avatar-size-override': `calc(${height} - 8px)`,\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-border-radius': borderRadius,\n        '--n-border': border,\n        '--n-close-icon-size': closeIconSize,\n        '--n-close-color-pressed': closeColorPressed,\n        '--n-close-color-hover': closeColorHover,\n        '--n-close-border-radius': closeBorderRadius,\n        '--n-close-icon-color': closeIconColor,\n        '--n-close-icon-color-hover': closeIconColorHover,\n        '--n-close-icon-color-pressed': closeIconColorPressed,\n        '--n-close-icon-color-disabled': closeIconColor,\n        '--n-close-margin': closeMargin,\n        '--n-close-margin-rtl': closeMarginRtl,\n        '--n-close-size': closeSize,\n        '--n-color': color || (mergedBorderedRef.value ? colorBordered : typedColor),\n        '--n-color-checkable': colorCheckable,\n        '--n-color-checked': colorChecked,\n        '--n-color-checked-hover': colorCheckedHover,\n        '--n-color-checked-pressed': colorCheckedPressed,\n        '--n-color-hover-checkable': colorHoverCheckable,\n        '--n-color-pressed-checkable': colorPressedCheckable,\n        '--n-font-size': fontSize,\n        '--n-height': height,\n        '--n-opacity-disabled': opacityDisabled,\n        '--n-padding': padding,\n        '--n-text-color': textColor || typeTextColor,\n        '--n-text-color-checkable': textColorCheckable,\n        '--n-text-color-checked': textColorChecked,\n        '--n-text-color-hover-checkable': textColorHoverCheckable,\n        '--n-text-color-pressed-checkable': textColorPressedCheckable\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('tag', computed(() => {\n      let hash = '';\n      const {\n        type,\n        size,\n        color: {\n          color,\n          textColor\n        } = {}\n      } = props;\n      hash += type[0];\n      hash += size[0];\n\n      if (color) {\n        hash += `a${color2Class(color)}`;\n      }\n\n      if (textColor) {\n        hash += `b${color2Class(textColor)}`;\n      }\n\n      if (mergedBorderedRef.value) {\n        hash += 'c';\n      }\n\n      return hash;\n    }), cssVarsRef, props) : undefined;\n    return Object.assign(Object.assign({}, tagPublicMethods), {\n      rtlEnabled: rtlEnabledRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      contentRef,\n      mergedBordered: mergedBorderedRef,\n      handleClick,\n      handleCloseClick,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    });\n  },\n\n  render() {\n    var _a, _b;\n\n    const {\n      mergedClsPrefix,\n      rtlEnabled,\n      closable,\n      color: {\n        borderColor\n      } = {},\n      round,\n      onRender,\n      $slots\n    } = this;\n    onRender === null || onRender === void 0 ? void 0 : onRender();\n    const avatarNode = resolveWrappedSlot($slots.avatar, children => children && h(\"div\", {\n      class: `${mergedClsPrefix}-tag__avatar`\n    }, children));\n    const iconNode = resolveWrappedSlot($slots.icon, children => children && h(\"div\", {\n      class: `${mergedClsPrefix}-tag__icon`\n    }, children));\n    return h(\"div\", {\n      class: [`${mergedClsPrefix}-tag`, this.themeClass, {\n        [`${mergedClsPrefix}-tag--rtl`]: rtlEnabled,\n        [`${mergedClsPrefix}-tag--strong`]: this.strong,\n        [`${mergedClsPrefix}-tag--disabled`]: this.disabled,\n        [`${mergedClsPrefix}-tag--checkable`]: this.checkable,\n        [`${mergedClsPrefix}-tag--checked`]: this.checkable && this.checked,\n        [`${mergedClsPrefix}-tag--round`]: round,\n        [`${mergedClsPrefix}-tag--avatar`]: avatarNode,\n        [`${mergedClsPrefix}-tag--icon`]: iconNode,\n        [`${mergedClsPrefix}-tag--closable`]: closable\n      }],\n      style: this.cssVars,\n      onClick: this.handleClick,\n      onMouseenter: this.onMouseenter,\n      onMouseleave: this.onMouseleave\n    }, iconNode || avatarNode, h(\"span\", {\n      class: `${mergedClsPrefix}-tag__content`,\n      ref: \"contentRef\"\n    }, (_b = (_a = this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a)), !this.checkable && closable ? h(NBaseClose, {\n      clsPrefix: mergedClsPrefix,\n      class: `${mergedClsPrefix}-tag__close`,\n      disabled: this.disabled,\n      onClick: this.handleCloseClick,\n      focusable: this.internalCloseFocusable,\n      round: round,\n      absolute: true\n    }) : null, !this.checkable && this.mergedBordered ? h(\"div\", {\n      class: `${mergedClsPrefix}-tag__border`,\n      style: {\n        borderColor\n      }\n    }) : null);\n  }\n\n});","map":{"version":3,"names":["h","defineComponent","computed","ref","provide","toRef","useRtl","NBaseClose","useConfig","useThemeClass","useTheme","warn","createKey","call","createInjectionKey","color2Class","resolveWrappedSlot","tagLight","commonProps","style","tagProps","Object","assign","props","bordered","type","Boolean","default","undefined","checked","checkable","strong","triggerClickOnClose","onClose","Array","Function","onMouseenter","onMouseleave","onUpdateChecked","internalCloseFocusable","onCheckedChange","validator","process","env","NODE_ENV","tagInjectionKey","name","setup","contentRef","mergedBorderedRef","mergedClsPrefixRef","inlineThemeDisabled","mergedRtlRef","themeRef","roundRef","handleClick","e","disabled","_onUpdateChecked","handleCloseClick","stopPropagation","tagPublicMethods","setTextContent","textContent","value","rtlEnabledRef","cssVarsRef","size","color","textColor","common","cubicBezierEaseInOut","self","padding","closeMargin","closeMarginRtl","borderRadius","opacityDisabled","textColorCheckable","textColorHoverCheckable","textColorPressedCheckable","textColorChecked","colorCheckable","colorHoverCheckable","colorPressedCheckable","colorChecked","colorCheckedHover","colorCheckedPressed","closeBorderRadius","fontWeightStrong","colorBordered","closeSize","closeIconSize","fontSize","height","typedColor","typeTextColor","border","closeIconColor","closeIconColorHover","closeIconColorPressed","closeColorHover","closeColorPressed","themeClassHandle","hash","rtlEnabled","mergedClsPrefix","mergedBordered","cssVars","themeClass","onRender","render","_a","_b","closable","borderColor","round","$slots","avatarNode","avatar","children","class","iconNode","icon","onClick","clsPrefix","focusable","absolute"],"sources":["E:/VCode/SHC社区管理系统/shc_community_manager_system/node_modules/naive-ui/es/tag/src/Tag.js"],"sourcesContent":["import { h, defineComponent, computed, ref, provide, toRef } from 'vue';\nimport { useRtl } from '../../_mixins/use-rtl';\nimport { NBaseClose } from '../../_internal/close';\nimport { useConfig, useThemeClass, useTheme } from '../../_mixins';\nimport { warn, createKey, call, createInjectionKey, color2Class, resolveWrappedSlot } from '../../_utils';\nimport { tagLight } from '../styles';\nimport commonProps from './common-props';\nimport style from './styles/index.cssr';\nexport const tagProps = Object.assign(Object.assign(Object.assign({}, useTheme.props), commonProps), { bordered: {\n        type: Boolean,\n        default: undefined\n    }, checked: Boolean, checkable: Boolean, strong: Boolean, triggerClickOnClose: Boolean, onClose: [Array, Function], onMouseenter: Function, onMouseleave: Function, 'onUpdate:checked': Function, onUpdateChecked: Function, \n    // private\n    internalCloseFocusable: {\n        type: Boolean,\n        default: true\n    }, \n    // deprecated\n    onCheckedChange: {\n        type: Function,\n        validator: () => {\n            if (process.env.NODE_ENV !== 'production') {\n                warn('tag', '`on-checked-change` is deprecated, please use `on-update:checked` instead');\n            }\n            return true;\n        },\n        default: undefined\n    } });\nexport const tagInjectionKey = createInjectionKey('n-tag');\nexport default defineComponent({\n    name: 'Tag',\n    props: tagProps,\n    setup(props) {\n        const contentRef = ref(null);\n        const { mergedBorderedRef, mergedClsPrefixRef, inlineThemeDisabled, mergedRtlRef } = useConfig(props);\n        const themeRef = useTheme('Tag', '-tag', style, tagLight, props, mergedClsPrefixRef);\n        provide(tagInjectionKey, {\n            roundRef: toRef(props, 'round')\n        });\n        function handleClick(e) {\n            if (!props.disabled) {\n                if (props.checkable) {\n                    const { checked, onCheckedChange, onUpdateChecked, 'onUpdate:checked': _onUpdateChecked } = props;\n                    if (onUpdateChecked)\n                        onUpdateChecked(!checked);\n                    if (_onUpdateChecked)\n                        _onUpdateChecked(!checked);\n                    // deprecated\n                    if (onCheckedChange)\n                        onCheckedChange(!checked);\n                }\n            }\n        }\n        function handleCloseClick(e) {\n            if (!props.triggerClickOnClose) {\n                e.stopPropagation();\n            }\n            if (!props.disabled) {\n                const { onClose } = props;\n                if (onClose)\n                    call(onClose, e);\n            }\n        }\n        const tagPublicMethods = {\n            setTextContent(textContent) {\n                const { value } = contentRef;\n                if (value)\n                    value.textContent = textContent;\n            }\n        };\n        const rtlEnabledRef = useRtl('Tag', mergedRtlRef, mergedClsPrefixRef);\n        const cssVarsRef = computed(() => {\n            const { type, size, color: { color, textColor } = {} } = props;\n            const { common: { cubicBezierEaseInOut }, self: { padding, closeMargin, closeMarginRtl, borderRadius, opacityDisabled, textColorCheckable, textColorHoverCheckable, textColorPressedCheckable, textColorChecked, colorCheckable, colorHoverCheckable, colorPressedCheckable, colorChecked, colorCheckedHover, colorCheckedPressed, closeBorderRadius, fontWeightStrong, [createKey('colorBordered', type)]: colorBordered, [createKey('closeSize', size)]: closeSize, [createKey('closeIconSize', size)]: closeIconSize, [createKey('fontSize', size)]: fontSize, [createKey('height', size)]: height, [createKey('color', type)]: typedColor, [createKey('textColor', type)]: typeTextColor, [createKey('border', type)]: border, [createKey('closeIconColor', type)]: closeIconColor, [createKey('closeIconColorHover', type)]: closeIconColorHover, [createKey('closeIconColorPressed', type)]: closeIconColorPressed, [createKey('closeColorHover', type)]: closeColorHover, [createKey('closeColorPressed', type)]: closeColorPressed } } = themeRef.value;\n            return {\n                '--n-font-weight-strong': fontWeightStrong,\n                '--n-avatar-size-override': `calc(${height} - 8px)`,\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-border-radius': borderRadius,\n                '--n-border': border,\n                '--n-close-icon-size': closeIconSize,\n                '--n-close-color-pressed': closeColorPressed,\n                '--n-close-color-hover': closeColorHover,\n                '--n-close-border-radius': closeBorderRadius,\n                '--n-close-icon-color': closeIconColor,\n                '--n-close-icon-color-hover': closeIconColorHover,\n                '--n-close-icon-color-pressed': closeIconColorPressed,\n                '--n-close-icon-color-disabled': closeIconColor,\n                '--n-close-margin': closeMargin,\n                '--n-close-margin-rtl': closeMarginRtl,\n                '--n-close-size': closeSize,\n                '--n-color': color || (mergedBorderedRef.value ? colorBordered : typedColor),\n                '--n-color-checkable': colorCheckable,\n                '--n-color-checked': colorChecked,\n                '--n-color-checked-hover': colorCheckedHover,\n                '--n-color-checked-pressed': colorCheckedPressed,\n                '--n-color-hover-checkable': colorHoverCheckable,\n                '--n-color-pressed-checkable': colorPressedCheckable,\n                '--n-font-size': fontSize,\n                '--n-height': height,\n                '--n-opacity-disabled': opacityDisabled,\n                '--n-padding': padding,\n                '--n-text-color': textColor || typeTextColor,\n                '--n-text-color-checkable': textColorCheckable,\n                '--n-text-color-checked': textColorChecked,\n                '--n-text-color-hover-checkable': textColorHoverCheckable,\n                '--n-text-color-pressed-checkable': textColorPressedCheckable\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('tag', computed(() => {\n                let hash = '';\n                const { type, size, color: { color, textColor } = {} } = props;\n                hash += type[0];\n                hash += size[0];\n                if (color) {\n                    hash += `a${color2Class(color)}`;\n                }\n                if (textColor) {\n                    hash += `b${color2Class(textColor)}`;\n                }\n                if (mergedBorderedRef.value) {\n                    hash += 'c';\n                }\n                return hash;\n            }), cssVarsRef, props)\n            : undefined;\n        return Object.assign(Object.assign({}, tagPublicMethods), { rtlEnabled: rtlEnabledRef, mergedClsPrefix: mergedClsPrefixRef, contentRef, mergedBordered: mergedBorderedRef, handleClick,\n            handleCloseClick, cssVars: inlineThemeDisabled ? undefined : cssVarsRef, themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass, onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender });\n    },\n    render() {\n        var _a, _b;\n        const { mergedClsPrefix, rtlEnabled, closable, color: { borderColor } = {}, round, onRender, $slots } = this;\n        onRender === null || onRender === void 0 ? void 0 : onRender();\n        const avatarNode = resolveWrappedSlot($slots.avatar, (children) => children && (h(\"div\", { class: `${mergedClsPrefix}-tag__avatar` }, children)));\n        const iconNode = resolveWrappedSlot($slots.icon, (children) => children && h(\"div\", { class: `${mergedClsPrefix}-tag__icon` }, children));\n        return (h(\"div\", { class: [\n                `${mergedClsPrefix}-tag`,\n                this.themeClass,\n                {\n                    [`${mergedClsPrefix}-tag--rtl`]: rtlEnabled,\n                    [`${mergedClsPrefix}-tag--strong`]: this.strong,\n                    [`${mergedClsPrefix}-tag--disabled`]: this.disabled,\n                    [`${mergedClsPrefix}-tag--checkable`]: this.checkable,\n                    [`${mergedClsPrefix}-tag--checked`]: this.checkable && this.checked,\n                    [`${mergedClsPrefix}-tag--round`]: round,\n                    [`${mergedClsPrefix}-tag--avatar`]: avatarNode,\n                    [`${mergedClsPrefix}-tag--icon`]: iconNode,\n                    [`${mergedClsPrefix}-tag--closable`]: closable\n                }\n            ], style: this.cssVars, onClick: this.handleClick, onMouseenter: this.onMouseenter, onMouseleave: this.onMouseleave },\n            iconNode || avatarNode,\n            h(\"span\", { class: `${mergedClsPrefix}-tag__content`, ref: \"contentRef\" }, (_b = (_a = this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a)),\n            !this.checkable && closable ? (h(NBaseClose, { clsPrefix: mergedClsPrefix, class: `${mergedClsPrefix}-tag__close`, disabled: this.disabled, onClick: this.handleCloseClick, focusable: this.internalCloseFocusable, round: round, absolute: true })) : null,\n            !this.checkable && this.mergedBordered ? (h(\"div\", { class: `${mergedClsPrefix}-tag__border`, style: { borderColor } })) : null));\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}