{"ast":null,"code":"/**\n * Use instead of `new Date(Date.UTC(...))` to support years below 100 which doesn't work\n * otherwise due to the nature of the\n * [`Date` constructor](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date#interpretation_of_two-digit_years.\n *\n * For `Date.UTC(...)`, use `newDateUTC(...).getTime()`.\n */\nexport default function newDateUTC(fullYear, month, day, hour, minute, second, millisecond) {\n  var utcDate = new Date(0);\n  utcDate.setUTCFullYear(fullYear, month, day);\n  utcDate.setUTCHours(hour, minute, second, millisecond);\n  return utcDate;\n}","map":{"version":3,"names":["newDateUTC","fullYear","month","day","hour","minute","second","millisecond","utcDate","Date","setUTCFullYear","setUTCHours"],"sources":["E:/VCode/SHC社区管理系统/shc_community_manager_system/node_modules/date-fns-tz/esm/_lib/newDateUTC/index.js"],"sourcesContent":["/**\n * Use instead of `new Date(Date.UTC(...))` to support years below 100 which doesn't work\n * otherwise due to the nature of the\n * [`Date` constructor](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date#interpretation_of_two-digit_years.\n *\n * For `Date.UTC(...)`, use `newDateUTC(...).getTime()`.\n */\nexport default function newDateUTC(fullYear, month, day, hour, minute, second, millisecond) {\n  var utcDate = new Date(0)\n  utcDate.setUTCFullYear(fullYear, month, day)\n  utcDate.setUTCHours(hour, minute, second, millisecond)\n  return utcDate\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,UAAT,CAAoBC,QAApB,EAA8BC,KAA9B,EAAqCC,GAArC,EAA0CC,IAA1C,EAAgDC,MAAhD,EAAwDC,MAAxD,EAAgEC,WAAhE,EAA6E;EAC1F,IAAIC,OAAO,GAAG,IAAIC,IAAJ,CAAS,CAAT,CAAd;EACAD,OAAO,CAACE,cAAR,CAAuBT,QAAvB,EAAiCC,KAAjC,EAAwCC,GAAxC;EACAK,OAAO,CAACG,WAAR,CAAoBP,IAApB,EAA0BC,MAA1B,EAAkCC,MAAlC,EAA0CC,WAA1C;EACA,OAAOC,OAAP;AACD"},"metadata":{},"sourceType":"module"}