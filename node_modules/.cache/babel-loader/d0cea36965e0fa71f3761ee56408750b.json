{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport function toArray(arg) {\n  if (Array.isArray(arg)) return arg;\n  return [arg];\n} // Do not use enum for lint plugin has error\n\nexport const TRAVERSE_COMMAND = {\n  STOP: 'STOP'\n};\nexport function traverseWithCb(treeNode, callback) {\n  const command = callback(treeNode);\n\n  if (treeNode.children !== undefined && command !== TRAVERSE_COMMAND.STOP) {\n    treeNode.children.forEach(childNode => traverseWithCb(childNode, callback));\n  }\n}\nexport function getNonLeafKeys(treeNodes, options = {}) {\n  const {\n    preserveGroup = false\n  } = options;\n  const keys = [];\n  const cb = preserveGroup ? node => {\n    if (!node.isLeaf) {\n      keys.push(node.key);\n      traverse(node.children);\n    }\n  } : node => {\n    if (!node.isLeaf) {\n      if (!node.isGroup) keys.push(node.key);\n      traverse(node.children);\n    }\n  };\n\n  function traverse(nodes) {\n    nodes.forEach(cb);\n  }\n\n  traverse(treeNodes);\n  return keys;\n}\nexport function isLeaf(rawNode, getChildren) {\n  const {\n    isLeaf\n  } = rawNode;\n  if (isLeaf !== undefined) return isLeaf;else if (!getChildren(rawNode)) return true;\n  return false;\n}\nexport function defaultGetChildren(node) {\n  return node.children;\n}\nexport function defaultGetKey(node) {\n  return node.key;\n}\nexport function isIgnored() {\n  return false;\n}\nexport function isShallowLoaded(rawNode, getChildren) {\n  const {\n    isLeaf\n  } = rawNode;\n  if (isLeaf === false && !Array.isArray(getChildren(rawNode))) return false;\n  return true;\n}\nexport function isDisabled(rawNode) {\n  return rawNode.disabled === true;\n}\nexport function isExpilicitlyNotLoaded(rawNode, getChildren) {\n  return rawNode.isLeaf === false && !Array.isArray(getChildren(rawNode));\n}\nexport function isNodeInvalid(rawNode, getChildren) {\n  if (rawNode.isLeaf === true) {\n    const children = getChildren(rawNode);\n    if (Array.isArray(children) && children.length > 0) return true;\n  }\n\n  return false;\n}\nexport function unwrapCheckedKeys(result) {\n  var _a;\n\n  if (result === undefined || result === null) return [];\n  if (Array.isArray(result)) return result;\n  return (_a = result.checkedKeys) !== null && _a !== void 0 ? _a : [];\n}\nexport function unwrapIndeterminateKeys(result) {\n  var _a;\n\n  if (result === undefined || result === null || Array.isArray(result)) {\n    return [];\n  }\n\n  return (_a = result.indeterminateKeys) !== null && _a !== void 0 ? _a : [];\n}\nexport function merge(originalKeys, keysToAdd) {\n  const set = new Set(originalKeys);\n  keysToAdd.forEach(key => {\n    if (!set.has(key)) {\n      set.add(key);\n    }\n  });\n  return Array.from(set);\n}\nexport function minus(originalKeys, keysToRemove) {\n  const set = new Set(originalKeys);\n  keysToRemove.forEach(key => {\n    if (set.has(key)) {\n      set.delete(key);\n    }\n  });\n  return Array.from(set);\n}\nexport function isGroup(rawNode) {\n  return (rawNode === null || rawNode === void 0 ? void 0 : rawNode.type) === 'group';\n}\nexport function createIndexGetter(treeNodes) {\n  const map = new Map();\n  treeNodes.forEach((treeNode, i) => {\n    map.set(treeNode.key, i);\n  });\n  return key => {\n    var _a;\n\n    return (_a = map.get(key)) !== null && _a !== void 0 ? _a : null;\n  };\n}","map":{"version":3,"names":["toArray","arg","Array","isArray","TRAVERSE_COMMAND","STOP","traverseWithCb","treeNode","callback","command","children","undefined","forEach","childNode","getNonLeafKeys","treeNodes","options","preserveGroup","keys","cb","node","isLeaf","push","key","traverse","isGroup","nodes","rawNode","getChildren","defaultGetChildren","defaultGetKey","isIgnored","isShallowLoaded","isDisabled","disabled","isExpilicitlyNotLoaded","isNodeInvalid","length","unwrapCheckedKeys","result","_a","checkedKeys","unwrapIndeterminateKeys","indeterminateKeys","merge","originalKeys","keysToAdd","set","Set","has","add","from","minus","keysToRemove","delete","type","createIndexGetter","map","Map","i","get"],"sources":["E:/VCode/SHC社区管理系统/shc_community_manager_system/node_modules/treemate/es/utils.js"],"sourcesContent":["export function toArray(arg) {\n    if (Array.isArray(arg))\n        return arg;\n    return [arg];\n}\n// Do not use enum for lint plugin has error\nexport const TRAVERSE_COMMAND = {\n    STOP: 'STOP'\n};\nexport function traverseWithCb(treeNode, callback) {\n    const command = callback(treeNode);\n    if (treeNode.children !== undefined && command !== TRAVERSE_COMMAND.STOP) {\n        treeNode.children.forEach((childNode) => traverseWithCb(childNode, callback));\n    }\n}\nexport function getNonLeafKeys(treeNodes, options = {}) {\n    const { preserveGroup = false } = options;\n    const keys = [];\n    const cb = preserveGroup\n        ? (node) => {\n            if (!node.isLeaf) {\n                keys.push(node.key);\n                traverse(node.children);\n            }\n        }\n        : (node) => {\n            if (!node.isLeaf) {\n                if (!node.isGroup)\n                    keys.push(node.key);\n                traverse(node.children);\n            }\n        };\n    function traverse(nodes) {\n        nodes.forEach(cb);\n    }\n    traverse(treeNodes);\n    return keys;\n}\nexport function isLeaf(rawNode, getChildren) {\n    const { isLeaf } = rawNode;\n    if (isLeaf !== undefined)\n        return isLeaf;\n    else if (!getChildren(rawNode))\n        return true;\n    return false;\n}\nexport function defaultGetChildren(node) {\n    return node.children;\n}\nexport function defaultGetKey(node) {\n    return node.key;\n}\nexport function isIgnored() {\n    return false;\n}\nexport function isShallowLoaded(rawNode, getChildren) {\n    const { isLeaf } = rawNode;\n    if (isLeaf === false && !Array.isArray(getChildren(rawNode)))\n        return false;\n    return true;\n}\nexport function isDisabled(rawNode) {\n    return rawNode.disabled === true;\n}\nexport function isExpilicitlyNotLoaded(rawNode, getChildren) {\n    return (rawNode.isLeaf === false && !Array.isArray(getChildren(rawNode)));\n}\nexport function isNodeInvalid(rawNode, getChildren) {\n    if (rawNode.isLeaf === true) {\n        const children = getChildren(rawNode);\n        if (Array.isArray(children) && children.length > 0)\n            return true;\n    }\n    return false;\n}\nexport function unwrapCheckedKeys(result) {\n    var _a;\n    if (result === undefined || result === null)\n        return [];\n    if (Array.isArray(result))\n        return result;\n    return (_a = result.checkedKeys) !== null && _a !== void 0 ? _a : [];\n}\nexport function unwrapIndeterminateKeys(result) {\n    var _a;\n    if (result === undefined || result === null || Array.isArray(result)) {\n        return [];\n    }\n    return (_a = result.indeterminateKeys) !== null && _a !== void 0 ? _a : [];\n}\nexport function merge(originalKeys, keysToAdd) {\n    const set = new Set(originalKeys);\n    keysToAdd.forEach((key) => {\n        if (!set.has(key)) {\n            set.add(key);\n        }\n    });\n    return Array.from(set);\n}\nexport function minus(originalKeys, keysToRemove) {\n    const set = new Set(originalKeys);\n    keysToRemove.forEach((key) => {\n        if (set.has(key)) {\n            set.delete(key);\n        }\n    });\n    return Array.from(set);\n}\nexport function isGroup(rawNode) {\n    return (rawNode === null || rawNode === void 0 ? void 0 : rawNode.type) === 'group';\n}\nexport function createIndexGetter(treeNodes) {\n    const map = new Map();\n    treeNodes.forEach((treeNode, i) => {\n        map.set(treeNode.key, i);\n    });\n    return (key) => { var _a; return (_a = map.get(key)) !== null && _a !== void 0 ? _a : null; };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}