{"ast":null,"code":"import { h, Transition, ref, inject, defineComponent, computed, withDirectives } from 'vue';\nimport { clickoutside } from 'vdirs';\nimport { createTreeMate } from 'treemate';\nimport { createTmOptions } from '../../select/src/utils';\nimport { NInternalSelectMenu } from '../../_internal';\nimport { createSelectOptions } from './utils';\nimport { cascaderInjectionKey } from './interface';\nexport default defineComponent({\n  name: 'NCascaderSelectMenu',\n  props: {\n    value: {\n      type: [String, Number, Array],\n      default: null\n    },\n    show: Boolean,\n    pattern: {\n      type: String,\n      default: ''\n    },\n    multiple: Boolean,\n    tmNodes: {\n      type: Array,\n      default: () => []\n    },\n    filter: Function,\n    labelField: {\n      type: String,\n      required: true\n    },\n    separator: {\n      type: String,\n      required: true\n    }\n  },\n\n  setup(props) {\n    const {\n      isMountedRef,\n      mergedValueRef,\n      mergedClsPrefixRef,\n      mergedThemeRef,\n      mergedCheckStrategyRef,\n      syncSelectMenuPosition,\n      closeMenu,\n      handleSelectMenuClickOutside,\n      doUncheck: cascaderDoUncheck,\n      doCheck: cascaderDoCheck,\n      clearPattern // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    } = inject(cascaderInjectionKey);\n    const menuInstRef = ref(null);\n    const selectOptionsRef = computed(() => {\n      return createSelectOptions(props.tmNodes, mergedCheckStrategyRef.value === 'child', props.labelField, props.separator);\n    });\n    const mergedFilterRef = computed(() => {\n      const {\n        filter\n      } = props;\n      if (filter) return filter;\n      const {\n        labelField\n      } = props;\n      return (pattern, _, path) => path.some(option => option[labelField] && ~option[labelField].indexOf(pattern));\n    });\n    const filteredSelectOptionsRef = computed(() => {\n      const {\n        pattern\n      } = props;\n      const {\n        value: mergedFilter\n      } = mergedFilterRef;\n      return (pattern ? selectOptionsRef.value.filter(option => {\n        return mergedFilter(pattern, option.rawNode, option.path);\n      }) : selectOptionsRef.value).map(option => ({\n        value: option.value,\n        label: option.label\n      }));\n    });\n    const selectTreeMateRef = computed(() => {\n      return createTreeMate(filteredSelectOptionsRef.value, createTmOptions('value', 'children'));\n    });\n\n    function handleResize() {\n      syncSelectMenuPosition();\n    }\n\n    function handleToggle(tmNode) {\n      doCheck(tmNode);\n    } // We don't care what type the tmNode is, we only care about its key\n\n\n    function doCheck(tmNode) {\n      if (props.multiple) {\n        const {\n          value: mergedValue\n        } = mergedValueRef;\n\n        if (Array.isArray(mergedValue)) {\n          if (!mergedValue.includes(tmNode.key)) {\n            cascaderDoCheck(tmNode.key);\n          } else {\n            cascaderDoUncheck(tmNode.key);\n          }\n        } else if (mergedValue === null) {\n          cascaderDoCheck(tmNode.key);\n        }\n\n        clearPattern();\n      } else {\n        cascaderDoCheck(tmNode.key); // currently the select menu is set to focusable\n        // however just leave it here\n\n        closeMenu(true);\n      }\n    }\n\n    function prev() {\n      var _a;\n\n      (_a = menuInstRef.value) === null || _a === void 0 ? void 0 : _a.prev();\n    }\n\n    function next() {\n      var _a;\n\n      (_a = menuInstRef.value) === null || _a === void 0 ? void 0 : _a.next();\n    }\n\n    function enter() {\n      var _a;\n\n      if (menuInstRef) {\n        const pendingOptionTmNode = (_a = menuInstRef.value) === null || _a === void 0 ? void 0 : _a.getPendingTmNode();\n\n        if (pendingOptionTmNode) {\n          doCheck(pendingOptionTmNode);\n        }\n\n        return true;\n      }\n\n      return false;\n    }\n\n    function handleClickOutside(e) {\n      handleSelectMenuClickOutside(e);\n    }\n\n    const exposedRef = {\n      prev,\n      next,\n      enter\n    };\n    return Object.assign({\n      isMounted: isMountedRef,\n      mergedTheme: mergedThemeRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      menuInstRef,\n      selectTreeMate: selectTreeMateRef,\n      handleResize,\n      handleToggle,\n      handleClickOutside\n    }, exposedRef);\n  },\n\n  render() {\n    const {\n      mergedClsPrefix,\n      isMounted,\n      mergedTheme\n    } = this;\n    return h(Transition, {\n      name: \"fade-in-scale-up-transition\",\n      appear: isMounted\n    }, {\n      default: () => this.show ? withDirectives(h(NInternalSelectMenu, {\n        ref: \"menuInstRef\",\n        onResize: this.handleResize,\n        clsPrefix: mergedClsPrefix,\n        class: `${mergedClsPrefix}-cascader-menu`,\n        autoPending: true,\n        themeOverrides: mergedTheme.peerOverrides.InternalSelectMenu,\n        theme: mergedTheme.peers.InternalSelectMenu,\n        treeMate: this.selectTreeMate,\n        multiple: this.multiple,\n        value: this.value,\n        onToggle: this.handleToggle\n      }), [[clickoutside, this.handleClickOutside, undefined, {\n        capture: true\n      }]]) : null\n    });\n  }\n\n});","map":{"version":3,"names":["h","Transition","ref","inject","defineComponent","computed","withDirectives","clickoutside","createTreeMate","createTmOptions","NInternalSelectMenu","createSelectOptions","cascaderInjectionKey","name","props","value","type","String","Number","Array","default","show","Boolean","pattern","multiple","tmNodes","filter","Function","labelField","required","separator","setup","isMountedRef","mergedValueRef","mergedClsPrefixRef","mergedThemeRef","mergedCheckStrategyRef","syncSelectMenuPosition","closeMenu","handleSelectMenuClickOutside","doUncheck","cascaderDoUncheck","doCheck","cascaderDoCheck","clearPattern","menuInstRef","selectOptionsRef","mergedFilterRef","_","path","some","option","indexOf","filteredSelectOptionsRef","mergedFilter","rawNode","map","label","selectTreeMateRef","handleResize","handleToggle","tmNode","mergedValue","isArray","includes","key","prev","_a","next","enter","pendingOptionTmNode","getPendingTmNode","handleClickOutside","e","exposedRef","Object","assign","isMounted","mergedTheme","mergedClsPrefix","selectTreeMate","render","appear","onResize","clsPrefix","class","autoPending","themeOverrides","peerOverrides","InternalSelectMenu","theme","peers","treeMate","onToggle","undefined","capture"],"sources":["D:/VCode/SHC社区管理系统/shc_community_manager_system/node_modules/naive-ui/es/cascader/src/CascaderSelectMenu.js"],"sourcesContent":["import { h, Transition, ref, inject, defineComponent, computed, withDirectives } from 'vue';\nimport { clickoutside } from 'vdirs';\nimport { createTreeMate } from 'treemate';\nimport { createTmOptions } from '../../select/src/utils';\nimport { NInternalSelectMenu } from '../../_internal';\nimport { createSelectOptions } from './utils';\nimport { cascaderInjectionKey } from './interface';\nexport default defineComponent({\n    name: 'NCascaderSelectMenu',\n    props: {\n        value: {\n            type: [String, Number, Array],\n            default: null\n        },\n        show: Boolean,\n        pattern: {\n            type: String,\n            default: ''\n        },\n        multiple: Boolean,\n        tmNodes: {\n            type: Array,\n            default: () => []\n        },\n        filter: Function,\n        labelField: {\n            type: String,\n            required: true\n        },\n        separator: {\n            type: String,\n            required: true\n        }\n    },\n    setup(props) {\n        const { isMountedRef, mergedValueRef, mergedClsPrefixRef, mergedThemeRef, mergedCheckStrategyRef, syncSelectMenuPosition, closeMenu, handleSelectMenuClickOutside, doUncheck: cascaderDoUncheck, doCheck: cascaderDoCheck, clearPattern\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n         } = inject(cascaderInjectionKey);\n        const menuInstRef = ref(null);\n        const selectOptionsRef = computed(() => {\n            return createSelectOptions(props.tmNodes, mergedCheckStrategyRef.value === 'child', props.labelField, props.separator);\n        });\n        const mergedFilterRef = computed(() => {\n            const { filter } = props;\n            if (filter)\n                return filter;\n            const { labelField } = props;\n            return (pattern, _, path) => path.some((option) => option[labelField] && ~option[labelField].indexOf(pattern));\n        });\n        const filteredSelectOptionsRef = computed(() => {\n            const { pattern } = props;\n            const { value: mergedFilter } = mergedFilterRef;\n            return (pattern\n                ? selectOptionsRef.value.filter((option) => {\n                    return mergedFilter(pattern, option.rawNode, option.path);\n                })\n                : selectOptionsRef.value).map((option) => ({\n                value: option.value,\n                label: option.label\n            }));\n        });\n        const selectTreeMateRef = computed(() => {\n            return createTreeMate(filteredSelectOptionsRef.value, createTmOptions('value', 'children'));\n        });\n        function handleResize() {\n            syncSelectMenuPosition();\n        }\n        function handleToggle(tmNode) {\n            doCheck(tmNode);\n        }\n        // We don't care what type the tmNode is, we only care about its key\n        function doCheck(tmNode) {\n            if (props.multiple) {\n                const { value: mergedValue } = mergedValueRef;\n                if (Array.isArray(mergedValue)) {\n                    if (!mergedValue.includes(tmNode.key)) {\n                        cascaderDoCheck(tmNode.key);\n                    }\n                    else {\n                        cascaderDoUncheck(tmNode.key);\n                    }\n                }\n                else if (mergedValue === null) {\n                    cascaderDoCheck(tmNode.key);\n                }\n                clearPattern();\n            }\n            else {\n                cascaderDoCheck(tmNode.key);\n                // currently the select menu is set to focusable\n                // however just leave it here\n                closeMenu(true);\n            }\n        }\n        function prev() {\n            var _a;\n            (_a = menuInstRef.value) === null || _a === void 0 ? void 0 : _a.prev();\n        }\n        function next() {\n            var _a;\n            (_a = menuInstRef.value) === null || _a === void 0 ? void 0 : _a.next();\n        }\n        function enter() {\n            var _a;\n            if (menuInstRef) {\n                const pendingOptionTmNode = (_a = menuInstRef.value) === null || _a === void 0 ? void 0 : _a.getPendingTmNode();\n                if (pendingOptionTmNode) {\n                    doCheck(pendingOptionTmNode);\n                }\n                return true;\n            }\n            return false;\n        }\n        function handleClickOutside(e) {\n            handleSelectMenuClickOutside(e);\n        }\n        const exposedRef = {\n            prev,\n            next,\n            enter\n        };\n        return Object.assign({ isMounted: isMountedRef, mergedTheme: mergedThemeRef, mergedClsPrefix: mergedClsPrefixRef, menuInstRef, selectTreeMate: selectTreeMateRef, handleResize,\n            handleToggle,\n            handleClickOutside }, exposedRef);\n    },\n    render() {\n        const { mergedClsPrefix, isMounted, mergedTheme } = this;\n        return (h(Transition, { name: \"fade-in-scale-up-transition\", appear: isMounted }, {\n            default: () => this.show\n                ? withDirectives(h(NInternalSelectMenu, { ref: \"menuInstRef\", onResize: this.handleResize, clsPrefix: mergedClsPrefix, class: `${mergedClsPrefix}-cascader-menu`, autoPending: true, themeOverrides: mergedTheme.peerOverrides.InternalSelectMenu, theme: mergedTheme.peers.InternalSelectMenu, treeMate: this.selectTreeMate, multiple: this.multiple, value: this.value, onToggle: this.handleToggle }), [\n                    [\n                        clickoutside,\n                        this.handleClickOutside,\n                        undefined,\n                        { capture: true }\n                    ]\n                ])\n                : null\n        }));\n    }\n});\n"],"mappings":"AAAA,SAASA,CAAT,EAAYC,UAAZ,EAAwBC,GAAxB,EAA6BC,MAA7B,EAAqCC,eAArC,EAAsDC,QAAtD,EAAgEC,cAAhE,QAAsF,KAAtF;AACA,SAASC,YAAT,QAA6B,OAA7B;AACA,SAASC,cAAT,QAA+B,UAA/B;AACA,SAASC,eAAT,QAAgC,wBAAhC;AACA,SAASC,mBAAT,QAAoC,iBAApC;AACA,SAASC,mBAAT,QAAoC,SAApC;AACA,SAASC,oBAAT,QAAqC,aAArC;AACA,eAAeR,eAAe,CAAC;EAC3BS,IAAI,EAAE,qBADqB;EAE3BC,KAAK,EAAE;IACHC,KAAK,EAAE;MACHC,IAAI,EAAE,CAACC,MAAD,EAASC,MAAT,EAAiBC,KAAjB,CADH;MAEHC,OAAO,EAAE;IAFN,CADJ;IAKHC,IAAI,EAAEC,OALH;IAMHC,OAAO,EAAE;MACLP,IAAI,EAAEC,MADD;MAELG,OAAO,EAAE;IAFJ,CANN;IAUHI,QAAQ,EAAEF,OAVP;IAWHG,OAAO,EAAE;MACLT,IAAI,EAAEG,KADD;MAELC,OAAO,EAAE,MAAM;IAFV,CAXN;IAeHM,MAAM,EAAEC,QAfL;IAgBHC,UAAU,EAAE;MACRZ,IAAI,EAAEC,MADE;MAERY,QAAQ,EAAE;IAFF,CAhBT;IAoBHC,SAAS,EAAE;MACPd,IAAI,EAAEC,MADC;MAEPY,QAAQ,EAAE;IAFH;EApBR,CAFoB;;EA2B3BE,KAAK,CAACjB,KAAD,EAAQ;IACT,MAAM;MAAEkB,YAAF;MAAgBC,cAAhB;MAAgCC,kBAAhC;MAAoDC,cAApD;MAAoEC,sBAApE;MAA4FC,sBAA5F;MAAoHC,SAApH;MAA+HC,4BAA/H;MAA6JC,SAAS,EAAEC,iBAAxK;MAA2LC,OAAO,EAAEC,eAApM;MAAqNC,YAArN,CACN;;IADM,IAEDzC,MAAM,CAACS,oBAAD,CAFX;IAGA,MAAMiC,WAAW,GAAG3C,GAAG,CAAC,IAAD,CAAvB;IACA,MAAM4C,gBAAgB,GAAGzC,QAAQ,CAAC,MAAM;MACpC,OAAOM,mBAAmB,CAACG,KAAK,CAACW,OAAP,EAAgBW,sBAAsB,CAACrB,KAAvB,KAAiC,OAAjD,EAA0DD,KAAK,CAACc,UAAhE,EAA4Ed,KAAK,CAACgB,SAAlF,CAA1B;IACH,CAFgC,CAAjC;IAGA,MAAMiB,eAAe,GAAG1C,QAAQ,CAAC,MAAM;MACnC,MAAM;QAAEqB;MAAF,IAAaZ,KAAnB;MACA,IAAIY,MAAJ,EACI,OAAOA,MAAP;MACJ,MAAM;QAAEE;MAAF,IAAiBd,KAAvB;MACA,OAAO,CAACS,OAAD,EAAUyB,CAAV,EAAaC,IAAb,KAAsBA,IAAI,CAACC,IAAL,CAAWC,MAAD,IAAYA,MAAM,CAACvB,UAAD,CAAN,IAAsB,CAACuB,MAAM,CAACvB,UAAD,CAAN,CAAmBwB,OAAnB,CAA2B7B,OAA3B,CAA7C,CAA7B;IACH,CAN+B,CAAhC;IAOA,MAAM8B,wBAAwB,GAAGhD,QAAQ,CAAC,MAAM;MAC5C,MAAM;QAAEkB;MAAF,IAAcT,KAApB;MACA,MAAM;QAAEC,KAAK,EAAEuC;MAAT,IAA0BP,eAAhC;MACA,OAAO,CAACxB,OAAO,GACTuB,gBAAgB,CAAC/B,KAAjB,CAAuBW,MAAvB,CAA+ByB,MAAD,IAAY;QACxC,OAAOG,YAAY,CAAC/B,OAAD,EAAU4B,MAAM,CAACI,OAAjB,EAA0BJ,MAAM,CAACF,IAAjC,CAAnB;MACH,CAFC,CADS,GAITH,gBAAgB,CAAC/B,KAJhB,EAIuByC,GAJvB,CAI4BL,MAAD,KAAa;QAC3CpC,KAAK,EAAEoC,MAAM,CAACpC,KAD6B;QAE3C0C,KAAK,EAAEN,MAAM,CAACM;MAF6B,CAAb,CAJ3B,CAAP;IAQH,CAXwC,CAAzC;IAYA,MAAMC,iBAAiB,GAAGrD,QAAQ,CAAC,MAAM;MACrC,OAAOG,cAAc,CAAC6C,wBAAwB,CAACtC,KAA1B,EAAiCN,eAAe,CAAC,OAAD,EAAU,UAAV,CAAhD,CAArB;IACH,CAFiC,CAAlC;;IAGA,SAASkD,YAAT,GAAwB;MACpBtB,sBAAsB;IACzB;;IACD,SAASuB,YAAT,CAAsBC,MAAtB,EAA8B;MAC1BnB,OAAO,CAACmB,MAAD,CAAP;IACH,CAnCQ,CAoCT;;;IACA,SAASnB,OAAT,CAAiBmB,MAAjB,EAAyB;MACrB,IAAI/C,KAAK,CAACU,QAAV,EAAoB;QAChB,MAAM;UAAET,KAAK,EAAE+C;QAAT,IAAyB7B,cAA/B;;QACA,IAAId,KAAK,CAAC4C,OAAN,CAAcD,WAAd,CAAJ,EAAgC;UAC5B,IAAI,CAACA,WAAW,CAACE,QAAZ,CAAqBH,MAAM,CAACI,GAA5B,CAAL,EAAuC;YACnCtB,eAAe,CAACkB,MAAM,CAACI,GAAR,CAAf;UACH,CAFD,MAGK;YACDxB,iBAAiB,CAACoB,MAAM,CAACI,GAAR,CAAjB;UACH;QACJ,CAPD,MAQK,IAAIH,WAAW,KAAK,IAApB,EAA0B;UAC3BnB,eAAe,CAACkB,MAAM,CAACI,GAAR,CAAf;QACH;;QACDrB,YAAY;MACf,CAdD,MAeK;QACDD,eAAe,CAACkB,MAAM,CAACI,GAAR,CAAf,CADC,CAED;QACA;;QACA3B,SAAS,CAAC,IAAD,CAAT;MACH;IACJ;;IACD,SAAS4B,IAAT,GAAgB;MACZ,IAAIC,EAAJ;;MACA,CAACA,EAAE,GAAGtB,WAAW,CAAC9B,KAAlB,MAA6B,IAA7B,IAAqCoD,EAAE,KAAK,KAAK,CAAjD,GAAqD,KAAK,CAA1D,GAA8DA,EAAE,CAACD,IAAH,EAA9D;IACH;;IACD,SAASE,IAAT,GAAgB;MACZ,IAAID,EAAJ;;MACA,CAACA,EAAE,GAAGtB,WAAW,CAAC9B,KAAlB,MAA6B,IAA7B,IAAqCoD,EAAE,KAAK,KAAK,CAAjD,GAAqD,KAAK,CAA1D,GAA8DA,EAAE,CAACC,IAAH,EAA9D;IACH;;IACD,SAASC,KAAT,GAAiB;MACb,IAAIF,EAAJ;;MACA,IAAItB,WAAJ,EAAiB;QACb,MAAMyB,mBAAmB,GAAG,CAACH,EAAE,GAAGtB,WAAW,CAAC9B,KAAlB,MAA6B,IAA7B,IAAqCoD,EAAE,KAAK,KAAK,CAAjD,GAAqD,KAAK,CAA1D,GAA8DA,EAAE,CAACI,gBAAH,EAA1F;;QACA,IAAID,mBAAJ,EAAyB;UACrB5B,OAAO,CAAC4B,mBAAD,CAAP;QACH;;QACD,OAAO,IAAP;MACH;;MACD,OAAO,KAAP;IACH;;IACD,SAASE,kBAAT,CAA4BC,CAA5B,EAA+B;MAC3BlC,4BAA4B,CAACkC,CAAD,CAA5B;IACH;;IACD,MAAMC,UAAU,GAAG;MACfR,IADe;MAEfE,IAFe;MAGfC;IAHe,CAAnB;IAKA,OAAOM,MAAM,CAACC,MAAP,CAAc;MAAEC,SAAS,EAAE7C,YAAb;MAA2B8C,WAAW,EAAE3C,cAAxC;MAAwD4C,eAAe,EAAE7C,kBAAzE;MAA6FW,WAA7F;MAA0GmC,cAAc,EAAEtB,iBAA1H;MAA6IC,YAA7I;MACjBC,YADiB;MAEjBY;IAFiB,CAAd,EAEmBE,UAFnB,CAAP;EAGH,CArH0B;;EAsH3BO,MAAM,GAAG;IACL,MAAM;MAAEF,eAAF;MAAmBF,SAAnB;MAA8BC;IAA9B,IAA8C,IAApD;IACA,OAAQ9E,CAAC,CAACC,UAAD,EAAa;MAAEY,IAAI,EAAE,6BAAR;MAAuCqE,MAAM,EAAEL;IAA/C,CAAb,EAAyE;MAC9EzD,OAAO,EAAE,MAAM,KAAKC,IAAL,GACTf,cAAc,CAACN,CAAC,CAACU,mBAAD,EAAsB;QAAER,GAAG,EAAE,aAAP;QAAsBiF,QAAQ,EAAE,KAAKxB,YAArC;QAAmDyB,SAAS,EAAEL,eAA9D;QAA+EM,KAAK,EAAG,GAAEN,eAAgB,gBAAzG;QAA0HO,WAAW,EAAE,IAAvI;QAA6IC,cAAc,EAAET,WAAW,CAACU,aAAZ,CAA0BC,kBAAvL;QAA2MC,KAAK,EAAEZ,WAAW,CAACa,KAAZ,CAAkBF,kBAApO;QAAwPG,QAAQ,EAAE,KAAKZ,cAAvQ;QAAuRxD,QAAQ,EAAE,KAAKA,QAAtS;QAAgTT,KAAK,EAAE,KAAKA,KAA5T;QAAmU8E,QAAQ,EAAE,KAAKjC;MAAlV,CAAtB,CAAF,EAA2X,CACvY,CACIrD,YADJ,EAEI,KAAKiE,kBAFT,EAGIsB,SAHJ,EAII;QAAEC,OAAO,EAAE;MAAX,CAJJ,CADuY,CAA3X,CADL,GAST;IAVwE,CAAzE,CAAT;EAYH;;AApI0B,CAAD,CAA9B"},"metadata":{},"sourceType":"module"}