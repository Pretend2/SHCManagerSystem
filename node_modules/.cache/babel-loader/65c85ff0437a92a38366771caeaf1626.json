{"ast":null,"code":"import { createElementVNode as _createElementVNode, unref as _unref, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-269107d1\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"body\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  style: {\n    \"display\": \"flex\",\n    \"flex-direction\": \"row\",\n    \"justify-content\": \"center\",\n    \"align-items\": \"center\",\n    \"margin-bottom\": \"10px\"\n  }\n}, [/*#__PURE__*/_createElementVNode(\"h1\", null, \"SHC 社区管理系统\")], -1));\n\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\" 自动登录 \");\n\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode(\" 登录 \");\n\nconst __default__ = {\n  name: 'LoginLayout'\n};\nimport { ref, reactive } from 'vue'; // 引入 naive-ui 组件\n\nimport { NForm, NFormItem, NButton, NInput, NCheckbox, NInputGroup, useMessage } from 'naive-ui'; // 引入图形验证码组件\n\nimport imageCode from '../../components/ImageCode.vue'; // 引入 md5 插件\n\nimport md5 from 'md5'; // 自动登录\n\nexport default /*#__PURE__*/Object.assign(__default__, {\n  setup(__props) {\n    // 引入 vue\n    const autoLogin = ref(false); // 验证码数据\n\n    const data = reactive({\n      change_img_code: false,\n      // 刷新验证码\n      img_code: '' // 加密后的验证码值\n\n    }); // 刷新验证码操作\n\n    const changeImageCode = () => {\n      data.change_img_code = !data.change_img_code;\n    }; // 接收组件返回加密后的验证码值\n\n\n    const backImageCode = code => {\n      data.img_code = code;\n    };\n\n    const formRef = ref(null);\n    const message = useMessage();\n    const formValue = ref({\n      username: \"\",\n      password: \"\",\n      code: \"\"\n    });\n    const rules = {\n      username: {\n        required: true,\n        message: \"请输入用户名\",\n        trigger: [\"input\", \"blur\"]\n      },\n      password: {\n        required: true,\n        message: \"请输入密码\",\n        trigger: [\"input\", \"blur\"]\n      },\n      code: {\n        required: true,\n        message: \"请输入验证码\",\n        trigger: [\"input\", \"blur\"]\n      }\n    };\n\n    const loginClick = e => {\n      e.preventDefault();\n      formRef.value?.validate(errors => {\n        if (!errors) {\n          if (data.img_code === md5(formValue.value.code)) {\n            message.success(\"验证码校验成功！\");\n          } else {\n            message.warning(\"验证码输入错误！\");\n          }\n        }\n      });\n    };\n\n    return (_ctx, _cache) => {\n      return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createVNode(_unref(NForm), {\n        \"label-placement\": \"left\",\n        ref_key: \"formRef\",\n        ref: formRef,\n        model: formValue.value,\n        rules: rules,\n        size: \"medium\",\n        style: {\n          \"width\": \"280px\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_unref(NFormItem), {\n          path: \"username\"\n        }, {\n          default: _withCtx(() => [_createVNode(_unref(NInput), {\n            value: formValue.value.username,\n            \"onUpdate:value\": _cache[0] || (_cache[0] = $event => formValue.value.username = $event),\n            placeholder: \"请输入用户名\"\n          }, null, 8, [\"value\"])]),\n          _: 1\n        }), _createVNode(_unref(NFormItem), {\n          path: \"password\"\n        }, {\n          default: _withCtx(() => [_createVNode(_unref(NInput), {\n            value: formValue.value.password,\n            \"onUpdate:value\": _cache[1] || (_cache[1] = $event => formValue.value.password = $event),\n            placeholder: \"请输入密码\"\n          }, null, 8, [\"value\"])]),\n          _: 1\n        }), _createVNode(_unref(NFormItem), {\n          path: \"code\"\n        }, {\n          default: _withCtx(() => [_createVNode(_unref(NInputGroup), null, {\n            default: _withCtx(() => [_createVNode(_unref(NInput), {\n              value: formValue.value.code,\n              \"onUpdate:value\": _cache[2] || (_cache[2] = $event => formValue.value.code = $event),\n              placeholder: \"请输入验证码\"\n            }, null, 8, [\"value\"]), _createVNode(imageCode, {\n              change: data.change_img_code,\n              onClick: changeImageCode,\n              onGetCode: backImageCode\n            }, null, 8, [\"change\"])]),\n            _: 1\n          })]),\n          _: 1\n        }), _createVNode(_unref(NFormItem), null, {\n          default: _withCtx(() => [_createVNode(_unref(NCheckbox), {\n            checked: autoLogin.value,\n            \"onUpdate:checked\": _cache[3] || (_cache[3] = $event => autoLogin.value = $event)\n          }, {\n            default: _withCtx(() => [_hoisted_3]),\n            _: 1\n          }, 8, [\"checked\"])]),\n          _: 1\n        }), _createVNode(_unref(NFormItem), null, {\n          default: _withCtx(() => [_createVNode(_unref(NButton), {\n            style: {\n              \"width\": \"100%\"\n            },\n            type: \"primary\",\n            \"attr-type\": \"button\",\n            onClick: loginClick\n          }, {\n            default: _withCtx(() => [_hoisted_4]),\n            _: 1\n          })]),\n          _: 1\n        })]),\n        _: 1\n      }, 8, [\"model\"])]);\n    };\n  }\n\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;AA8GA,oBAAe;EACXA,IAAI,EAAE;AADK,CAAf;AAxEA,SAASC,GAAT,EAAcC,QAAd,QAA8B,KAA9B,C,CACA;;AACA,SACIC,KADJ,EACWC,SADX,EACsBC,OADtB,EAC+BC,MAD/B,EACuCC,SADvC,EAEIC,WAFJ,EAEiBC,UAFjB,QAGO,UAHP,C,CAIA;;AACA,OAAOC,SAAP,MAAsB,gCAAtB,C,CACA;;AACA,OAAOC,GAAP,MAAgB,KAAhB,C,CAEA;;;;IAZA;IAaA,MAAMC,SAAS,GAAGX,GAAG,CAAC,KAAD,CAArB,EACA;;IACA,MAAMY,IAAI,GAAGX,QAAQ,CAAC;MAClBY,eAAe,EAAE,KADC;MACM;MACxBC,QAAQ,EAAE,EAFQ,CAEL;;IAFK,CAAD,CAArB,EAKA;;IACA,MAAMC,eAAe,GAAG,MAAM;MAC1BH,IAAI,CAACC,eAAL,GAAuB,CAACD,IAAI,CAACC,eAA7B;IACH,CAFD,EAIA;;;IACA,MAAMG,aAAa,GAAIC,IAAD,IAAU;MAC5BL,IAAI,CAACE,QAAL,GAAgBG,IAAhB;IACH,CAFD;;IAKA,MAAMC,OAAO,GAAGlB,GAAG,CAAC,IAAD,CAAnB;IACA,MAAMmB,OAAO,GAAGX,UAAU,EAA1B;IAEA,MAAMY,SAAS,GAAGpB,GAAG,CAAC;MAClBqB,QAAQ,EAAE,EADQ;MAElBC,QAAQ,EAAE,EAFQ;MAGlBL,IAAI,EAAE;IAHY,CAAD,CAArB;IAKA,MAAMM,KAAK,GAAG;MACVF,QAAQ,EAAE;QACNG,QAAQ,EAAE,IADJ;QAENL,OAAO,EAAE,QAFH;QAGNM,OAAO,EAAE,CAAC,OAAD,EAAU,MAAV;MAHH,CADA;MAMVH,QAAQ,EAAE;QACNE,QAAQ,EAAE,IADJ;QAENL,OAAO,EAAE,OAFH;QAGNM,OAAO,EAAE,CAAC,OAAD,EAAU,MAAV;MAHH,CANA;MAWVR,IAAI,EAAE;QACFO,QAAQ,EAAE,IADR;QAEFL,OAAO,EAAE,QAFP;QAGFM,OAAO,EAAE,CAAC,OAAD,EAAU,MAAV;MAHP;IAXI,CAAd;;IAkBA,MAAMC,UAAU,GAAIC,CAAD,IAAO;MACtBA,CAAC,CAACC,cAAF;MACAV,OAAO,CAACW,KAAR,EAAeC,QAAf,CAAyBC,MAAD,IAAY;QAChC,IAAI,CAACA,MAAL,EAAa;UACT,IAAInB,IAAI,CAACE,QAAL,KAAkBJ,GAAG,CAACU,SAAS,CAACS,KAAV,CAAgBZ,IAAjB,CAAzB,EAAiD;YAC7CE,OAAO,CAACa,OAAR,CAAgB,UAAhB;UACH,CAFD,MAEO;YACHb,OAAO,CAACc,OAAR,CAAgB,UAAhB;UACH;QACJ;MACJ,CARD;IASH,CAXD","names":["name","ref","reactive","NForm","NFormItem","NButton","NInput","NCheckbox","NInputGroup","useMessage","imageCode","md5","autoLogin","data","change_img_code","img_code","changeImageCode","backImageCode","code","formRef","message","formValue","username","password","rules","required","trigger","loginClick","e","preventDefault","value","validate","errors","success","warning"],"sources":["E:/VCode/SHC社区管理系统/shc_community_manager_system/src/layout/user/LoginLayout.vue"],"sourcesContent":["<template>\r\n    <div class=\"body\">\r\n        <!-- 标题 -->\r\n        <div style=\"display: flex;flex-direction: row;justify-content: center;align-items: center;margin-bottom: 10px;\">\r\n            <h1>SHC 社区管理系统</h1>\r\n        </div>\r\n        <!-- form 表单 -->\r\n        <n-form label-placement=\"left\" ref=\"formRef\" :model=\"formValue\" :rules=\"rules\" size=\"medium\"\r\n            style=\"width: 280px;\">\r\n            <n-form-item path=\"username\">\r\n                <n-input v-model:value=\"formValue.username\" placeholder=\"请输入用户名\" />\r\n            </n-form-item>\r\n            <n-form-item path=\"password\">\r\n                <n-input v-model:value=\"formValue.password\" placeholder=\"请输入密码\" />\r\n            </n-form-item>\r\n            <n-form-item path=\"code\">\r\n                <n-input-group>\r\n                    <n-input v-model:value=\"formValue.code\" placeholder=\"请输入验证码\" />\r\n                    <image-code :change=\"data.change_img_code\" @click=\"changeImageCode\" @getCode=\"backImageCode\">\r\n                    </image-code>\r\n                </n-input-group>\r\n            </n-form-item>\r\n            <n-form-item>\r\n                <n-checkbox v-model:checked=\"autoLogin\">\r\n                    自动登录\r\n                </n-checkbox>\r\n            </n-form-item>\r\n            <n-form-item>\r\n                <n-button style=\"width: 100%;\" type=\"primary\" attr-type=\"button\" @click=\"loginClick\">\r\n                    登录\r\n                </n-button>\r\n            </n-form-item>\r\n        </n-form>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\n// 引入 vue\r\nimport { ref, reactive } from 'vue'\r\n// 引入 naive-ui 组件\r\nimport {\r\n    NForm, NFormItem, NButton, NInput, NCheckbox,\r\n    NInputGroup, useMessage\r\n} from 'naive-ui'\r\n// 引入图形验证码组件\r\nimport imageCode from '../../components/ImageCode.vue'\r\n// 引入 md5 插件\r\nimport md5 from 'md5';\r\n\r\n// 自动登录\r\nconst autoLogin = ref(false);\r\n// 验证码数据\r\nconst data = reactive({\r\n    change_img_code: false, // 刷新验证码\r\n    img_code: '',// 加密后的验证码值\r\n})\r\n\r\n// 刷新验证码操作\r\nconst changeImageCode = () => {\r\n    data.change_img_code = !data.change_img_code\r\n}\r\n\r\n// 接收组件返回加密后的验证码值\r\nconst backImageCode = (code) => {\r\n    data.img_code = code\r\n}\r\n\r\n\r\nconst formRef = ref(null)\r\nconst message = useMessage()\r\n\r\nconst formValue = ref({\r\n    username: \"\",\r\n    password: \"\",\r\n    code: \"\"\r\n})\r\nconst rules = {\r\n    username: {\r\n        required: true,\r\n        message: \"请输入用户名\",\r\n        trigger: [\"input\", \"blur\"]\r\n    },\r\n    password: {\r\n        required: true,\r\n        message: \"请输入密码\",\r\n        trigger: [\"input\", \"blur\"]\r\n    },\r\n    code: {\r\n        required: true,\r\n        message: \"请输入验证码\",\r\n        trigger: [\"input\", \"blur\"]\r\n    }\r\n}\r\n\r\nconst loginClick = (e) => {\r\n    e.preventDefault();\r\n    formRef.value?.validate((errors) => {\r\n        if (!errors) {\r\n            if (data.img_code === md5(formValue.value.code)) {\r\n                message.success(\"验证码校验成功！\");\r\n            } else {\r\n                message.warning(\"验证码输入错误！\");\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\n</script>\r\n\r\n<script>\r\nexport default {\r\n    name: 'LoginLayout'\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.body {\r\n    background: url(../../assets/login/loginBg.svg);\r\n    background-size: cover;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-height: 100vh;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}