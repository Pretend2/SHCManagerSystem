{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { h, defineComponent, computed, toRef, ref, provide, inject, watch, Transition, onMounted } from 'vue';\nimport Schema from 'async-validator';\nimport { get } from 'lodash-es';\nimport { createId } from 'seemly';\nimport { formItemInjectionKey } from '../../_mixins/use-form-item';\nimport { useConfig, useTheme, useThemeClass } from '../../_mixins';\nimport { warn, createKey, useInjectionInstanceCollection, keysOf, resolveWrappedSlot } from '../../_utils';\nimport { formLight } from '../styles';\nimport { formItemMisc, formItemSize, formItemRule } from './utils';\nimport { formInjectionKey, formItemInstsInjectionKey } from './context';\nimport style from './styles/form-item.cssr';\nexport const formItemProps = Object.assign(Object.assign({}, useTheme.props), {\n  label: String,\n  labelWidth: [Number, String],\n  labelStyle: [String, Object],\n  labelAlign: String,\n  labelPlacement: String,\n  path: String,\n  first: Boolean,\n  rulePath: String,\n  required: Boolean,\n  showRequireMark: {\n    type: Boolean,\n    default: undefined\n  },\n  requireMarkPlacement: String,\n  showFeedback: {\n    type: Boolean,\n    default: undefined\n  },\n  rule: [Object, Array],\n  size: String,\n  ignorePathChange: Boolean,\n  validationStatus: String,\n  feedback: String,\n  showLabel: {\n    type: Boolean,\n    default: undefined\n  },\n  labelProps: Object\n});\nexport const formItemPropKeys = keysOf(formItemProps); // wrap sync validator\n\nfunction wrapValidator(validator, async) {\n  return (...args) => {\n    try {\n      const validateResult = validator(...args);\n\n      if (!async && (typeof validateResult === 'boolean' || validateResult instanceof Error || Array.isArray(validateResult)) || ( // Error[]\n      validateResult === null || validateResult === void 0 ? void 0 : validateResult.then)) {\n        return validateResult;\n      } else if (validateResult === undefined) {\n        return true;\n      } else {\n        warn('form-item/validate', `You return a ${typeof validateResult} ` + 'typed value in the validator method, which is not recommended. Please use ' + (async ? '`Promise`' : '`boolean`, `Error` or `Promise`') + ' typed value instead.');\n        return true;\n      }\n    } catch (err) {\n      warn('form-item/validate', 'An error is catched in the validation, ' + \"so the validation won't be done. Your callback in `validate` method of \" + \"`n-form` or `n-form-item` won't be called in this validation.\");\n      console.error(err); // If returns undefined, async-validator won't trigger callback\n      // so the result will be abandoned, which means not true and not false\n\n      return undefined;\n    }\n  };\n}\n\nexport default defineComponent({\n  name: 'FormItem',\n  props: formItemProps,\n\n  setup(props) {\n    useInjectionInstanceCollection(formItemInstsInjectionKey, 'formItems', toRef(props, 'path'));\n    const {\n      mergedClsPrefixRef,\n      inlineThemeDisabled\n    } = useConfig(props);\n    const NForm = inject(formInjectionKey, null);\n    const formItemSizeRefs = formItemSize(props);\n    const formItemMiscRefs = formItemMisc(props);\n    const {\n      validationErrored: validationErroredRef\n    } = formItemMiscRefs;\n    const {\n      mergedRequired: mergedRequiredRef,\n      mergedRules: mergedRulesRef\n    } = formItemRule(props);\n    const {\n      mergedSize: mergedSizeRef\n    } = formItemSizeRefs;\n    const {\n      mergedLabelPlacement: labelPlacementRef,\n      mergedLabelAlign: labelTextAlignRef\n    } = formItemMiscRefs;\n    const renderExplainsRef = ref([]);\n    const feedbackIdRef = ref(createId());\n    const mergedDisabledRef = NForm ? toRef(NForm.props, 'disabled') : ref(false);\n    const themeRef = useTheme('Form', '-form-item', style, formLight, props, mergedClsPrefixRef);\n    watch(toRef(props, 'path'), () => {\n      if (props.ignorePathChange) return;\n      restoreValidation();\n    });\n\n    function restoreValidation() {\n      renderExplainsRef.value = [];\n      validationErroredRef.value = false;\n\n      if (props.feedback) {\n        feedbackIdRef.value = createId();\n      }\n    }\n\n    function handleContentBlur() {\n      void internalValidate('blur');\n    }\n\n    function handleContentChange() {\n      void internalValidate('change');\n    }\n\n    function handleContentFocus() {\n      void internalValidate('focus');\n    }\n\n    function handleContentInput() {\n      void internalValidate('input');\n    }\n\n    function validate(options, callback) {\n      return __awaiter(this, void 0, void 0, function* () {\n        /** the following code is for compatibility */\n        let trigger;\n        let validateCallback;\n        let shouldRuleBeApplied;\n        let asyncValidatorOptions;\n\n        if (typeof options === 'string') {\n          trigger = options;\n          validateCallback = callback;\n        } else if (options !== null && typeof options === 'object') {\n          trigger = options.trigger;\n          validateCallback = options.callback;\n          shouldRuleBeApplied = options.shouldRuleBeApplied;\n          asyncValidatorOptions = options.options;\n        }\n\n        return yield new Promise((resolve, reject) => {\n          void internalValidate(trigger, shouldRuleBeApplied, asyncValidatorOptions).then(({\n            valid,\n            errors\n          }) => {\n            if (valid) {\n              if (validateCallback) {\n                validateCallback();\n              }\n\n              resolve();\n            } else {\n              if (validateCallback) {\n                validateCallback(errors);\n              }\n\n              reject(errors);\n            }\n          });\n        });\n      });\n    }\n\n    const internalValidate = (trigger = null, shouldRuleBeApplied = () => true, options = {\n      suppressWarning: true\n    }) => __awaiter(this, void 0, void 0, function* () {\n      const {\n        path\n      } = props;\n\n      if (!options) {\n        options = {};\n      } else {\n        if (!options.first) options.first = props.first;\n      }\n\n      const {\n        value: rules\n      } = mergedRulesRef;\n      const value = NForm ? get(NForm.props.model, path || '') : undefined;\n      const messageRenderers = {};\n      const originalMessageRendersMessage = {};\n      const activeRules = (!trigger ? rules : rules.filter(rule => {\n        if (Array.isArray(rule.trigger)) {\n          return rule.trigger.includes(trigger);\n        } else {\n          return rule.trigger === trigger;\n        }\n      })).filter(shouldRuleBeApplied).map((rule, i) => {\n        const shallowClonedRule = Object.assign({}, rule);\n\n        if (shallowClonedRule.validator) {\n          shallowClonedRule.validator = wrapValidator(shallowClonedRule.validator, false);\n        }\n\n        if (shallowClonedRule.asyncValidator) {\n          shallowClonedRule.asyncValidator = wrapValidator(shallowClonedRule.asyncValidator, true);\n        }\n\n        if (shallowClonedRule.renderMessage) {\n          const rendererKey = `__renderMessage__${i}`;\n          originalMessageRendersMessage[rendererKey] = shallowClonedRule.message;\n          shallowClonedRule.message = rendererKey;\n          messageRenderers[rendererKey] = shallowClonedRule.renderMessage;\n        }\n\n        return shallowClonedRule;\n      });\n\n      if (!activeRules.length) {\n        return {\n          valid: true\n        };\n      }\n\n      const mergedPath = path !== null && path !== void 0 ? path : '__n_no_path__';\n      const validator = new Schema({\n        [mergedPath]: activeRules\n      });\n      const {\n        validateMessages\n      } = (NForm === null || NForm === void 0 ? void 0 : NForm.props) || {};\n\n      if (validateMessages) {\n        validator.messages(validateMessages);\n      }\n\n      return yield new Promise(resolve => {\n        void validator.validate({\n          [mergedPath]: value\n        }, options, errors => {\n          if (errors === null || errors === void 0 ? void 0 : errors.length) {\n            renderExplainsRef.value = errors.map(error => {\n              const transformedMessage = (error === null || error === void 0 ? void 0 : error.message) || '';\n              return {\n                key: transformedMessage,\n                render: () => {\n                  if (transformedMessage.startsWith('__renderMessage__')) {\n                    return messageRenderers[transformedMessage]();\n                  }\n\n                  return transformedMessage;\n                }\n              };\n            });\n            errors.forEach(error => {\n              var _a;\n\n              if ((_a = error.message) === null || _a === void 0 ? void 0 : _a.startsWith('__renderMessage__')) {\n                error.message = originalMessageRendersMessage[error.message];\n              }\n            });\n            validationErroredRef.value = true;\n            resolve({\n              valid: false,\n              errors\n            });\n          } else {\n            restoreValidation();\n            resolve({\n              valid: true\n            });\n          }\n        });\n      });\n    });\n\n    provide(formItemInjectionKey, {\n      path: toRef(props, 'path'),\n      disabled: mergedDisabledRef,\n      mergedSize: formItemSizeRefs.mergedSize,\n      mergedValidationStatus: formItemMiscRefs.mergedValidationStatus,\n      restoreValidation,\n      handleContentBlur,\n      handleContentChange,\n      handleContentFocus,\n      handleContentInput\n    });\n    const exposedRef = {\n      validate,\n      restoreValidation,\n      internalValidate\n    };\n    const labelElementRef = ref(null);\n    onMounted(() => {\n      if (!formItemMiscRefs.isAutoLabelWidth.value) return;\n      const labelElement = labelElementRef.value;\n\n      if (labelElement !== null) {\n        const memoizedWhitespace = labelElement.style.whiteSpace;\n        labelElement.style.whiteSpace = 'nowrap';\n        labelElement.style.width = '';\n        NForm === null || NForm === void 0 ? void 0 : NForm.deriveMaxChildLabelWidth(Number(getComputedStyle(labelElement).width.slice(0, -2)));\n        labelElement.style.whiteSpace = memoizedWhitespace;\n      }\n    });\n    const cssVarsRef = computed(() => {\n      var _a;\n\n      const {\n        value: size\n      } = mergedSizeRef;\n      const {\n        value: labelPlacement\n      } = labelPlacementRef;\n      const direction = labelPlacement === 'top' ? 'vertical' : 'horizontal';\n      const {\n        common: {\n          cubicBezierEaseInOut\n        },\n        self: {\n          labelTextColor,\n          asteriskColor,\n          lineHeight,\n          feedbackTextColor,\n          feedbackTextColorWarning,\n          feedbackTextColorError,\n          feedbackPadding,\n          [createKey('labelHeight', size)]: labelHeight,\n          [createKey('blankHeight', size)]: blankHeight,\n          [createKey('feedbackFontSize', size)]: feedbackFontSize,\n          [createKey('feedbackHeight', size)]: feedbackHeight,\n          [createKey('labelPadding', direction)]: labelPadding,\n          [createKey('labelTextAlign', direction)]: labelTextAlign,\n          [createKey(createKey('labelFontSize', labelPlacement), size)]: labelFontSize\n        }\n      } = themeRef.value;\n      let mergedLabelTextAlign = (_a = labelTextAlignRef.value) !== null && _a !== void 0 ? _a : labelTextAlign;\n\n      if (labelPlacement === 'top') {\n        mergedLabelTextAlign = mergedLabelTextAlign === 'right' ? 'flex-end' : 'flex-start';\n      }\n\n      const cssVars = {\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-line-height': lineHeight,\n        '--n-blank-height': blankHeight,\n        '--n-label-font-size': labelFontSize,\n        '--n-label-text-align': mergedLabelTextAlign,\n        '--n-label-height': labelHeight,\n        '--n-label-padding': labelPadding,\n        '--n-asterisk-color': asteriskColor,\n        '--n-label-text-color': labelTextColor,\n        '--n-feedback-padding': feedbackPadding,\n        '--n-feedback-font-size': feedbackFontSize,\n        '--n-feedback-height': feedbackHeight,\n        '--n-feedback-text-color': feedbackTextColor,\n        '--n-feedback-text-color-warning': feedbackTextColorWarning,\n        '--n-feedback-text-color-error': feedbackTextColorError\n      };\n      return cssVars;\n    });\n    const themeClassHandle = useThemeClass('form-item', computed(() => {\n      var _a;\n\n      return `${mergedSizeRef.value[0]}${labelPlacementRef.value[0]}${((_a = labelTextAlignRef.value) === null || _a === void 0 ? void 0 : _a[0]) || ''}`;\n    }), cssVarsRef, props);\n    return Object.assign(Object.assign(Object.assign(Object.assign({\n      labelElementRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      mergedRequired: mergedRequiredRef,\n      feedbackId: feedbackIdRef,\n      renderExplains: renderExplainsRef\n    }, formItemMiscRefs), formItemSizeRefs), exposedRef), {\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    });\n  },\n\n  render() {\n    const {\n      $slots,\n      mergedClsPrefix,\n      mergedShowLabel,\n      mergedShowRequireMark,\n      mergedRequireMarkPlacement,\n      onRender\n    } = this;\n    const renderedShowRequireMark = mergedShowRequireMark !== undefined ? mergedShowRequireMark : this.mergedRequired;\n    onRender === null || onRender === void 0 ? void 0 : onRender();\n\n    const renderLabel = () => {\n      const labelText = this.$slots.label ? this.$slots.label() : this.label;\n      if (!labelText) return null;\n      const textNode = h(\"span\", {\n        class: `${mergedClsPrefix}-form-item-label__text`\n      }, labelText);\n      const markNode = renderedShowRequireMark ? h(\"span\", {\n        class: `${mergedClsPrefix}-form-item-label__asterisk`\n      }, mergedRequireMarkPlacement !== 'left' ? '\\u00A0*' : '*\\u00A0') : mergedRequireMarkPlacement === 'right-hanging' && h(\"span\", {\n        class: `${mergedClsPrefix}-form-item-label__asterisk-placeholder`\n      }, '\\u00A0*');\n      const {\n        labelProps\n      } = this;\n      return h(\"label\", Object.assign({}, labelProps, {\n        class: [labelProps === null || labelProps === void 0 ? void 0 : labelProps.class, `${mergedClsPrefix}-form-item-label`, `${mergedClsPrefix}-form-item-label--${mergedRequireMarkPlacement}-mark`],\n        style: this.mergedLabelStyle,\n        ref: \"labelElementRef\"\n      }), mergedRequireMarkPlacement === 'left' ? [markNode, textNode] : [textNode, markNode]);\n    };\n\n    return h(\"div\", {\n      class: [`${mergedClsPrefix}-form-item`, this.themeClass, `${mergedClsPrefix}-form-item--${this.mergedSize}-size`, `${mergedClsPrefix}-form-item--${this.mergedLabelPlacement}-labelled`, this.isAutoLabelWidth && `${mergedClsPrefix}-form-item--auto-label-width`, !mergedShowLabel && `${mergedClsPrefix}-form-item--no-label`],\n      style: this.cssVars\n    }, mergedShowLabel && renderLabel(), h(\"div\", {\n      class: [`${mergedClsPrefix}-form-item-blank`, this.mergedValidationStatus && `${mergedClsPrefix}-form-item-blank--${this.mergedValidationStatus}`]\n    }, $slots), this.mergedShowFeedback ? h(\"div\", {\n      key: this.feedbackId,\n      class: `${mergedClsPrefix}-form-item-feedback-wrapper`\n    }, h(Transition, {\n      name: \"fade-down-transition\",\n      mode: \"out-in\"\n    }, {\n      default: () => {\n        const {\n          mergedValidationStatus\n        } = this;\n        return resolveWrappedSlot($slots.feedback, children => {\n          var _a;\n\n          const {\n            feedback\n          } = this;\n          const feedbackNodes = children || feedback ? h(\"div\", {\n            key: \"__feedback__\",\n            class: `${mergedClsPrefix}-form-item-feedback__line`\n          }, children || feedback) : this.renderExplains.length ? (_a = this.renderExplains) === null || _a === void 0 ? void 0 : _a.map(({\n            key,\n            render\n          }) => h(\"div\", {\n            key: key,\n            class: `${mergedClsPrefix}-form-item-feedback__line`\n          }, render())) : null;\n          return feedbackNodes ? mergedValidationStatus === 'warning' ? h(\"div\", {\n            key: \"controlled-warning\",\n            class: `${mergedClsPrefix}-form-item-feedback ${mergedClsPrefix}-form-item-feedback--warning`\n          }, feedbackNodes) : mergedValidationStatus === 'error' ? h(\"div\", {\n            key: \"controlled-error\",\n            class: `${mergedClsPrefix}-form-item-feedback ${mergedClsPrefix}-form-item-feedback--error`\n          }, feedbackNodes) : mergedValidationStatus === 'success' ? h(\"div\", {\n            key: \"controlled-success\",\n            class: `${mergedClsPrefix}-form-item-feedback ${mergedClsPrefix}-form-item-feedback--success`\n          }, feedbackNodes) : h(\"div\", {\n            key: \"controlled-default\",\n            class: `${mergedClsPrefix}-form-item-feedback`\n          }, feedbackNodes) : null;\n        });\n      }\n    })) : null);\n  }\n\n});","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","h","defineComponent","computed","toRef","ref","provide","inject","watch","Transition","onMounted","Schema","get","createId","formItemInjectionKey","useConfig","useTheme","useThemeClass","warn","createKey","useInjectionInstanceCollection","keysOf","resolveWrappedSlot","formLight","formItemMisc","formItemSize","formItemRule","formInjectionKey","formItemInstsInjectionKey","style","formItemProps","Object","assign","props","label","String","labelWidth","Number","labelStyle","labelAlign","labelPlacement","path","first","Boolean","rulePath","required","showRequireMark","type","default","undefined","requireMarkPlacement","showFeedback","rule","Array","size","ignorePathChange","validationStatus","feedback","showLabel","labelProps","formItemPropKeys","wrapValidator","validator","async","args","validateResult","Error","isArray","err","console","error","name","setup","mergedClsPrefixRef","inlineThemeDisabled","NForm","formItemSizeRefs","formItemMiscRefs","validationErrored","validationErroredRef","mergedRequired","mergedRequiredRef","mergedRules","mergedRulesRef","mergedSize","mergedSizeRef","mergedLabelPlacement","labelPlacementRef","mergedLabelAlign","labelTextAlignRef","renderExplainsRef","feedbackIdRef","mergedDisabledRef","themeRef","restoreValidation","handleContentBlur","internalValidate","handleContentChange","handleContentFocus","handleContentInput","validate","options","callback","trigger","validateCallback","shouldRuleBeApplied","asyncValidatorOptions","valid","errors","suppressWarning","rules","model","messageRenderers","originalMessageRendersMessage","activeRules","filter","includes","map","i","shallowClonedRule","asyncValidator","renderMessage","rendererKey","message","length","mergedPath","validateMessages","messages","transformedMessage","key","render","startsWith","forEach","_a","disabled","mergedValidationStatus","exposedRef","labelElementRef","isAutoLabelWidth","labelElement","memoizedWhitespace","whiteSpace","width","deriveMaxChildLabelWidth","getComputedStyle","slice","cssVarsRef","direction","common","cubicBezierEaseInOut","self","labelTextColor","asteriskColor","lineHeight","feedbackTextColor","feedbackTextColorWarning","feedbackTextColorError","feedbackPadding","labelHeight","blankHeight","feedbackFontSize","feedbackHeight","labelPadding","labelTextAlign","labelFontSize","mergedLabelTextAlign","cssVars","themeClassHandle","mergedClsPrefix","feedbackId","renderExplains","themeClass","onRender","$slots","mergedShowLabel","mergedShowRequireMark","mergedRequireMarkPlacement","renderedShowRequireMark","renderLabel","labelText","textNode","class","markNode","mergedLabelStyle","mergedShowFeedback","mode","children","feedbackNodes"],"sources":["E:/VCode/SHC社区管理系统/shc_community_manager_system/node_modules/naive-ui/es/form/src/FormItem.js"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { h, defineComponent, computed, toRef, ref, provide, inject, watch, Transition, onMounted } from 'vue';\nimport Schema from 'async-validator';\nimport { get } from 'lodash-es';\nimport { createId } from 'seemly';\nimport { formItemInjectionKey } from '../../_mixins/use-form-item';\nimport { useConfig, useTheme, useThemeClass } from '../../_mixins';\nimport { warn, createKey, useInjectionInstanceCollection, keysOf, resolveWrappedSlot } from '../../_utils';\nimport { formLight } from '../styles';\nimport { formItemMisc, formItemSize, formItemRule } from './utils';\nimport { formInjectionKey, formItemInstsInjectionKey } from './context';\nimport style from './styles/form-item.cssr';\nexport const formItemProps = Object.assign(Object.assign({}, useTheme.props), { label: String, labelWidth: [Number, String], labelStyle: [String, Object], labelAlign: String, labelPlacement: String, path: String, first: Boolean, rulePath: String, required: Boolean, showRequireMark: {\n        type: Boolean,\n        default: undefined\n    }, requireMarkPlacement: String, showFeedback: {\n        type: Boolean,\n        default: undefined\n    }, rule: [Object, Array], size: String, ignorePathChange: Boolean, validationStatus: String, feedback: String, showLabel: {\n        type: Boolean,\n        default: undefined\n    }, labelProps: Object });\nexport const formItemPropKeys = keysOf(formItemProps);\n// wrap sync validator\nfunction wrapValidator(validator, async) {\n    return (...args) => {\n        try {\n            const validateResult = validator(...args);\n            if ((!async &&\n                (typeof validateResult === 'boolean' ||\n                    validateResult instanceof Error ||\n                    Array.isArray(validateResult))) || // Error[]\n                (validateResult === null || validateResult === void 0 ? void 0 : validateResult.then)) {\n                return validateResult;\n            }\n            else if (validateResult === undefined) {\n                return true;\n            }\n            else {\n                warn('form-item/validate', `You return a ${typeof validateResult} ` +\n                    'typed value in the validator method, which is not recommended. Please use ' +\n                    (async ? '`Promise`' : '`boolean`, `Error` or `Promise`') +\n                    ' typed value instead.');\n                return true;\n            }\n        }\n        catch (err) {\n            warn('form-item/validate', 'An error is catched in the validation, ' +\n                \"so the validation won't be done. Your callback in `validate` method of \" +\n                \"`n-form` or `n-form-item` won't be called in this validation.\");\n            console.error(err);\n            // If returns undefined, async-validator won't trigger callback\n            // so the result will be abandoned, which means not true and not false\n            return undefined;\n        }\n    };\n}\nexport default defineComponent({\n    name: 'FormItem',\n    props: formItemProps,\n    setup(props) {\n        useInjectionInstanceCollection(formItemInstsInjectionKey, 'formItems', toRef(props, 'path'));\n        const { mergedClsPrefixRef, inlineThemeDisabled } = useConfig(props);\n        const NForm = inject(formInjectionKey, null);\n        const formItemSizeRefs = formItemSize(props);\n        const formItemMiscRefs = formItemMisc(props);\n        const { validationErrored: validationErroredRef } = formItemMiscRefs;\n        const { mergedRequired: mergedRequiredRef, mergedRules: mergedRulesRef } = formItemRule(props);\n        const { mergedSize: mergedSizeRef } = formItemSizeRefs;\n        const { mergedLabelPlacement: labelPlacementRef, mergedLabelAlign: labelTextAlignRef } = formItemMiscRefs;\n        const renderExplainsRef = ref([]);\n        const feedbackIdRef = ref(createId());\n        const mergedDisabledRef = NForm\n            ? toRef(NForm.props, 'disabled')\n            : ref(false);\n        const themeRef = useTheme('Form', '-form-item', style, formLight, props, mergedClsPrefixRef);\n        watch(toRef(props, 'path'), () => {\n            if (props.ignorePathChange)\n                return;\n            restoreValidation();\n        });\n        function restoreValidation() {\n            renderExplainsRef.value = [];\n            validationErroredRef.value = false;\n            if (props.feedback) {\n                feedbackIdRef.value = createId();\n            }\n        }\n        function handleContentBlur() {\n            void internalValidate('blur');\n        }\n        function handleContentChange() {\n            void internalValidate('change');\n        }\n        function handleContentFocus() {\n            void internalValidate('focus');\n        }\n        function handleContentInput() {\n            void internalValidate('input');\n        }\n        function validate(options, callback) {\n            return __awaiter(this, void 0, void 0, function* () {\n                /** the following code is for compatibility */\n                let trigger;\n                let validateCallback;\n                let shouldRuleBeApplied;\n                let asyncValidatorOptions;\n                if (typeof options === 'string') {\n                    trigger = options;\n                    validateCallback = callback;\n                }\n                else if (options !== null && typeof options === 'object') {\n                    trigger = options.trigger;\n                    validateCallback = options.callback;\n                    shouldRuleBeApplied = options.shouldRuleBeApplied;\n                    asyncValidatorOptions = options.options;\n                }\n                return yield new Promise((resolve, reject) => {\n                    void internalValidate(trigger, shouldRuleBeApplied, asyncValidatorOptions).then(({ valid, errors }) => {\n                        if (valid) {\n                            if (validateCallback) {\n                                validateCallback();\n                            }\n                            resolve();\n                        }\n                        else {\n                            if (validateCallback) {\n                                validateCallback(errors);\n                            }\n                            reject(errors);\n                        }\n                    });\n                });\n            });\n        }\n        const internalValidate = (trigger = null, shouldRuleBeApplied = () => true, options = {\n            suppressWarning: true\n        }) => __awaiter(this, void 0, void 0, function* () {\n            const { path } = props;\n            if (!options) {\n                options = {};\n            }\n            else {\n                if (!options.first)\n                    options.first = props.first;\n            }\n            const { value: rules } = mergedRulesRef;\n            const value = NForm ? get(NForm.props.model, path || '') : undefined;\n            const messageRenderers = {};\n            const originalMessageRendersMessage = {};\n            const activeRules = (!trigger\n                ? rules\n                : rules.filter((rule) => {\n                    if (Array.isArray(rule.trigger)) {\n                        return rule.trigger.includes(trigger);\n                    }\n                    else {\n                        return rule.trigger === trigger;\n                    }\n                }))\n                .filter(shouldRuleBeApplied)\n                .map((rule, i) => {\n                const shallowClonedRule = Object.assign({}, rule);\n                if (shallowClonedRule.validator) {\n                    shallowClonedRule.validator = wrapValidator(shallowClonedRule.validator, false);\n                }\n                if (shallowClonedRule.asyncValidator) {\n                    shallowClonedRule.asyncValidator = wrapValidator(shallowClonedRule.asyncValidator, true);\n                }\n                if (shallowClonedRule.renderMessage) {\n                    const rendererKey = `__renderMessage__${i}`;\n                    originalMessageRendersMessage[rendererKey] =\n                        shallowClonedRule.message;\n                    shallowClonedRule.message = rendererKey;\n                    messageRenderers[rendererKey] = shallowClonedRule.renderMessage;\n                }\n                return shallowClonedRule;\n            });\n            if (!activeRules.length) {\n                return {\n                    valid: true\n                };\n            }\n            const mergedPath = path !== null && path !== void 0 ? path : '__n_no_path__';\n            const validator = new Schema({ [mergedPath]: activeRules });\n            const { validateMessages } = (NForm === null || NForm === void 0 ? void 0 : NForm.props) || {};\n            if (validateMessages) {\n                validator.messages(validateMessages);\n            }\n            return yield new Promise((resolve) => {\n                void validator.validate({ [mergedPath]: value }, options, (errors) => {\n                    if (errors === null || errors === void 0 ? void 0 : errors.length) {\n                        renderExplainsRef.value = errors.map((error) => {\n                            const transformedMessage = (error === null || error === void 0 ? void 0 : error.message) || '';\n                            return {\n                                key: transformedMessage,\n                                render: () => {\n                                    if (transformedMessage.startsWith('__renderMessage__')) {\n                                        return messageRenderers[transformedMessage]();\n                                    }\n                                    return transformedMessage;\n                                }\n                            };\n                        });\n                        errors.forEach((error) => {\n                            var _a;\n                            if ((_a = error.message) === null || _a === void 0 ? void 0 : _a.startsWith('__renderMessage__')) {\n                                error.message = originalMessageRendersMessage[error.message];\n                            }\n                        });\n                        validationErroredRef.value = true;\n                        resolve({\n                            valid: false,\n                            errors\n                        });\n                    }\n                    else {\n                        restoreValidation();\n                        resolve({\n                            valid: true\n                        });\n                    }\n                });\n            });\n        });\n        provide(formItemInjectionKey, {\n            path: toRef(props, 'path'),\n            disabled: mergedDisabledRef,\n            mergedSize: formItemSizeRefs.mergedSize,\n            mergedValidationStatus: formItemMiscRefs.mergedValidationStatus,\n            restoreValidation,\n            handleContentBlur,\n            handleContentChange,\n            handleContentFocus,\n            handleContentInput\n        });\n        const exposedRef = {\n            validate,\n            restoreValidation,\n            internalValidate\n        };\n        const labelElementRef = ref(null);\n        onMounted(() => {\n            if (!formItemMiscRefs.isAutoLabelWidth.value)\n                return;\n            const labelElement = labelElementRef.value;\n            if (labelElement !== null) {\n                const memoizedWhitespace = labelElement.style.whiteSpace;\n                labelElement.style.whiteSpace = 'nowrap';\n                labelElement.style.width = '';\n                NForm === null || NForm === void 0 ? void 0 : NForm.deriveMaxChildLabelWidth(Number(getComputedStyle(labelElement).width.slice(0, -2)));\n                labelElement.style.whiteSpace = memoizedWhitespace;\n            }\n        });\n        const cssVarsRef = computed(() => {\n            var _a;\n            const { value: size } = mergedSizeRef;\n            const { value: labelPlacement } = labelPlacementRef;\n            const direction = labelPlacement === 'top' ? 'vertical' : 'horizontal';\n            const { common: { cubicBezierEaseInOut }, self: { labelTextColor, asteriskColor, lineHeight, feedbackTextColor, feedbackTextColorWarning, feedbackTextColorError, feedbackPadding, [createKey('labelHeight', size)]: labelHeight, [createKey('blankHeight', size)]: blankHeight, [createKey('feedbackFontSize', size)]: feedbackFontSize, [createKey('feedbackHeight', size)]: feedbackHeight, [createKey('labelPadding', direction)]: labelPadding, [createKey('labelTextAlign', direction)]: labelTextAlign, [createKey(createKey('labelFontSize', labelPlacement), size)]: labelFontSize } } = themeRef.value;\n            let mergedLabelTextAlign = (_a = labelTextAlignRef.value) !== null && _a !== void 0 ? _a : labelTextAlign;\n            if (labelPlacement === 'top') {\n                mergedLabelTextAlign =\n                    mergedLabelTextAlign === 'right' ? 'flex-end' : 'flex-start';\n            }\n            const cssVars = {\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-line-height': lineHeight,\n                '--n-blank-height': blankHeight,\n                '--n-label-font-size': labelFontSize,\n                '--n-label-text-align': mergedLabelTextAlign,\n                '--n-label-height': labelHeight,\n                '--n-label-padding': labelPadding,\n                '--n-asterisk-color': asteriskColor,\n                '--n-label-text-color': labelTextColor,\n                '--n-feedback-padding': feedbackPadding,\n                '--n-feedback-font-size': feedbackFontSize,\n                '--n-feedback-height': feedbackHeight,\n                '--n-feedback-text-color': feedbackTextColor,\n                '--n-feedback-text-color-warning': feedbackTextColorWarning,\n                '--n-feedback-text-color-error': feedbackTextColorError\n            };\n            return cssVars;\n        });\n        const themeClassHandle = useThemeClass('form-item', computed(() => {\n            var _a;\n            return `${mergedSizeRef.value[0]}${labelPlacementRef.value[0]}${((_a = labelTextAlignRef.value) === null || _a === void 0 ? void 0 : _a[0]) || ''}`;\n        }), cssVarsRef, props);\n        return Object.assign(Object.assign(Object.assign(Object.assign({ labelElementRef, mergedClsPrefix: mergedClsPrefixRef, mergedRequired: mergedRequiredRef, feedbackId: feedbackIdRef, renderExplains: renderExplainsRef }, formItemMiscRefs), formItemSizeRefs), exposedRef), { cssVars: inlineThemeDisabled ? undefined : cssVarsRef, themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass, onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender });\n    },\n    render() {\n        const { $slots, mergedClsPrefix, mergedShowLabel, mergedShowRequireMark, mergedRequireMarkPlacement, onRender } = this;\n        const renderedShowRequireMark = mergedShowRequireMark !== undefined\n            ? mergedShowRequireMark\n            : this.mergedRequired;\n        onRender === null || onRender === void 0 ? void 0 : onRender();\n        const renderLabel = () => {\n            const labelText = this.$slots.label ? this.$slots.label() : this.label;\n            if (!labelText)\n                return null;\n            const textNode = (h(\"span\", { class: `${mergedClsPrefix}-form-item-label__text` }, labelText));\n            const markNode = renderedShowRequireMark ? (h(\"span\", { class: `${mergedClsPrefix}-form-item-label__asterisk` }, mergedRequireMarkPlacement !== 'left' ? '\\u00A0*' : '*\\u00A0')) : (mergedRequireMarkPlacement === 'right-hanging' && (h(\"span\", { class: `${mergedClsPrefix}-form-item-label__asterisk-placeholder` }, '\\u00A0*')));\n            const { labelProps } = this;\n            return (h(\"label\", Object.assign({}, labelProps, { class: [\n                    labelProps === null || labelProps === void 0 ? void 0 : labelProps.class,\n                    `${mergedClsPrefix}-form-item-label`,\n                    `${mergedClsPrefix}-form-item-label--${mergedRequireMarkPlacement}-mark`\n                ], style: this.mergedLabelStyle, ref: \"labelElementRef\" }), mergedRequireMarkPlacement === 'left'\n                ? [markNode, textNode]\n                : [textNode, markNode]));\n        };\n        return (h(\"div\", { class: [\n                `${mergedClsPrefix}-form-item`,\n                this.themeClass,\n                `${mergedClsPrefix}-form-item--${this.mergedSize}-size`,\n                `${mergedClsPrefix}-form-item--${this.mergedLabelPlacement}-labelled`,\n                this.isAutoLabelWidth &&\n                    `${mergedClsPrefix}-form-item--auto-label-width`,\n                !mergedShowLabel && `${mergedClsPrefix}-form-item--no-label`\n            ], style: this.cssVars },\n            mergedShowLabel && renderLabel(),\n            h(\"div\", { class: [\n                    `${mergedClsPrefix}-form-item-blank`,\n                    this.mergedValidationStatus &&\n                        `${mergedClsPrefix}-form-item-blank--${this.mergedValidationStatus}`\n                ] }, $slots),\n            this.mergedShowFeedback ? (h(\"div\", { key: this.feedbackId, class: `${mergedClsPrefix}-form-item-feedback-wrapper` },\n                h(Transition, { name: \"fade-down-transition\", mode: \"out-in\" }, {\n                    default: () => {\n                        const { mergedValidationStatus } = this;\n                        return resolveWrappedSlot($slots.feedback, (children) => {\n                            var _a;\n                            const { feedback } = this;\n                            const feedbackNodes = children || feedback ? (h(\"div\", { key: \"__feedback__\", class: `${mergedClsPrefix}-form-item-feedback__line` }, children || feedback)) : this.renderExplains.length ? ((_a = this.renderExplains) === null || _a === void 0 ? void 0 : _a.map(({ key, render }) => (h(\"div\", { key: key, class: `${mergedClsPrefix}-form-item-feedback__line` }, render())))) : null;\n                            return feedbackNodes ? (mergedValidationStatus === 'warning' ? (h(\"div\", { key: \"controlled-warning\", class: `${mergedClsPrefix}-form-item-feedback ${mergedClsPrefix}-form-item-feedback--warning` }, feedbackNodes)) : mergedValidationStatus === 'error' ? (h(\"div\", { key: \"controlled-error\", class: `${mergedClsPrefix}-form-item-feedback ${mergedClsPrefix}-form-item-feedback--error` }, feedbackNodes)) : mergedValidationStatus === 'success' ? (h(\"div\", { key: \"controlled-success\", class: `${mergedClsPrefix}-form-item-feedback ${mergedClsPrefix}-form-item-feedback--success` }, feedbackNodes)) : (h(\"div\", { key: \"controlled-default\", class: `${mergedClsPrefix}-form-item-feedback` }, feedbackNodes))) : null;\n                        });\n                    }\n                }))) : null));\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}