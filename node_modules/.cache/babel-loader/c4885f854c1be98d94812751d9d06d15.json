{"ast":null,"code":"import { h, defineComponent, ref, inject } from 'vue';\nimport { render } from '../../_utils';\nimport { treeInjectionKey } from './interface';\nexport default defineComponent({\n  name: 'TreeNodeContent',\n  props: {\n    clsPrefix: {\n      type: String,\n      required: true\n    },\n    disabled: Boolean,\n    checked: Boolean,\n    selected: Boolean,\n    onClick: Function,\n    onDragstart: Function,\n    tmNode: {\n      type: Object,\n      required: true\n    },\n    nodeProps: Object\n  },\n\n  setup(props) {\n    const {\n      renderLabelRef,\n      renderPrefixRef,\n      renderSuffixRef,\n      labelFieldRef\n    } = // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    inject(treeInjectionKey);\n    const selfRef = ref(null);\n\n    function doClick(e) {\n      const {\n        onClick\n      } = props;\n      if (onClick) onClick(e);\n    }\n\n    function handleClick(e) {\n      doClick(e);\n    }\n\n    return {\n      selfRef,\n      renderLabel: renderLabelRef,\n      renderPrefix: renderPrefixRef,\n      renderSuffix: renderSuffixRef,\n      labelField: labelFieldRef,\n      handleClick\n    };\n  },\n\n  render() {\n    const {\n      clsPrefix,\n      labelField,\n      nodeProps,\n      checked = false,\n      selected = false,\n      renderLabel,\n      renderPrefix,\n      renderSuffix,\n      handleClick,\n      onDragstart,\n      tmNode: {\n        rawNode,\n        rawNode: {\n          prefix,\n          suffix,\n          [labelField]: label\n        }\n      }\n    } = this;\n    return h(\"span\", Object.assign({}, nodeProps, {\n      ref: \"selfRef\",\n      class: [`${clsPrefix}-tree-node-content`, nodeProps === null || nodeProps === void 0 ? void 0 : nodeProps.class],\n      onClick: handleClick,\n      draggable: onDragstart === undefined ? undefined : true,\n      onDragstart: onDragstart\n    }), renderPrefix || prefix ? h(\"div\", {\n      class: `${clsPrefix}-tree-node-content__prefix`\n    }, renderPrefix ? renderPrefix({\n      option: rawNode,\n      selected,\n      checked\n    }) : render(prefix)) : null, h(\"div\", {\n      class: `${clsPrefix}-tree-node-content__text`\n    }, renderLabel ? renderLabel({\n      option: rawNode,\n      selected,\n      checked\n    }) : render(label)), renderSuffix || suffix ? h(\"div\", {\n      class: `${clsPrefix}-tree-node-content__suffix`\n    }, renderSuffix ? renderSuffix({\n      option: rawNode,\n      selected,\n      checked\n    }) : render(suffix)) : null);\n  }\n\n});","map":{"version":3,"names":["h","defineComponent","ref","inject","render","treeInjectionKey","name","props","clsPrefix","type","String","required","disabled","Boolean","checked","selected","onClick","Function","onDragstart","tmNode","Object","nodeProps","setup","renderLabelRef","renderPrefixRef","renderSuffixRef","labelFieldRef","selfRef","doClick","e","handleClick","renderLabel","renderPrefix","renderSuffix","labelField","rawNode","prefix","suffix","label","assign","class","draggable","undefined","option"],"sources":["E:/VCode/SHC社区管理系统/shc_community_manager_system/node_modules/naive-ui/es/tree/src/TreeNodeContent.js"],"sourcesContent":["import { h, defineComponent, ref, inject } from 'vue';\nimport { render } from '../../_utils';\nimport { treeInjectionKey } from './interface';\nexport default defineComponent({\n    name: 'TreeNodeContent',\n    props: {\n        clsPrefix: {\n            type: String,\n            required: true\n        },\n        disabled: Boolean,\n        checked: Boolean,\n        selected: Boolean,\n        onClick: Function,\n        onDragstart: Function,\n        tmNode: {\n            type: Object,\n            required: true\n        },\n        nodeProps: Object\n    },\n    setup(props) {\n        const { renderLabelRef, renderPrefixRef, renderSuffixRef, labelFieldRef } = \n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        inject(treeInjectionKey);\n        const selfRef = ref(null);\n        function doClick(e) {\n            const { onClick } = props;\n            if (onClick)\n                onClick(e);\n        }\n        function handleClick(e) {\n            doClick(e);\n        }\n        return {\n            selfRef,\n            renderLabel: renderLabelRef,\n            renderPrefix: renderPrefixRef,\n            renderSuffix: renderSuffixRef,\n            labelField: labelFieldRef,\n            handleClick\n        };\n    },\n    render() {\n        const { clsPrefix, labelField, nodeProps, checked = false, selected = false, renderLabel, renderPrefix, renderSuffix, handleClick, onDragstart, tmNode: { rawNode, rawNode: { prefix, suffix, [labelField]: label } } } = this;\n        return (h(\"span\", Object.assign({}, nodeProps, { ref: \"selfRef\", class: [`${clsPrefix}-tree-node-content`, nodeProps === null || nodeProps === void 0 ? void 0 : nodeProps.class], onClick: handleClick, draggable: onDragstart === undefined ? undefined : true, onDragstart: onDragstart }),\n            renderPrefix || prefix ? (h(\"div\", { class: `${clsPrefix}-tree-node-content__prefix` }, renderPrefix\n                ? renderPrefix({\n                    option: rawNode,\n                    selected,\n                    checked\n                })\n                : render(prefix))) : null,\n            h(\"div\", { class: `${clsPrefix}-tree-node-content__text` }, renderLabel\n                ? renderLabel({\n                    option: rawNode,\n                    selected,\n                    checked\n                })\n                : render(label)),\n            renderSuffix || suffix ? (h(\"div\", { class: `${clsPrefix}-tree-node-content__suffix` }, renderSuffix\n                ? renderSuffix({\n                    option: rawNode,\n                    selected,\n                    checked\n                })\n                : render(suffix))) : null));\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}