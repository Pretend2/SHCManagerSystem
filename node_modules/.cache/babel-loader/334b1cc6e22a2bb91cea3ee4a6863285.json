{"ast":null,"code":"import { h, ref, toRef, defineComponent, computed, withDirectives, Transition, provide, nextTick, watch, watchEffect } from 'vue';\nimport { useIsMounted, useKeyboard, useMergedState } from 'vooks';\nimport { VBinder, VTarget, VFollower } from 'vueuc';\nimport { clickoutside } from 'vdirs';\nimport { getPreciseEventTarget, happensIn } from 'seemly';\nimport { isValid, startOfSecond, startOfMinute, startOfHour, format, set, setHours, setMinutes, setSeconds, getTime, getMinutes, getHours, getSeconds } from 'date-fns/esm';\nimport formatInTimeZone from 'date-fns-tz/esm/formatInTimeZone';\nimport { strictParse } from '../../date-picker/src/utils';\nimport { TimeIcon } from '../../_internal/icons';\nimport { NInput } from '../../input';\nimport { NBaseIcon } from '../../_internal';\nimport { useConfig, useTheme, useLocale, useFormItem, useThemeClass } from '../../_mixins';\nimport { call, markEventEffectPerformed, useAdjustedTo, warnOnce } from '../../_utils';\nimport { timePickerLight } from '../styles';\nimport Panel from './Panel';\nimport { timePickerInjectionKey } from './interface';\nimport { findSimilarTime, isTimeInStep } from './utils';\nimport style from './styles/index.cssr'; // validate hours, minutes, seconds prop\n\nfunction validateUnits(value, max) {\n  if (value === undefined) {\n    return true;\n  }\n\n  if (Array.isArray(value)) {\n    return value.every(v => v >= 0 && v <= max);\n  } else {\n    return value >= 0 && value <= max;\n  }\n}\n\nexport const timePickerProps = Object.assign(Object.assign({}, useTheme.props), {\n  to: useAdjustedTo.propTo,\n  bordered: {\n    type: Boolean,\n    default: undefined\n  },\n  actions: Array,\n  defaultValue: {\n    type: Number,\n    default: null\n  },\n  defaultFormattedValue: String,\n  placeholder: String,\n  placement: {\n    type: String,\n    default: 'bottom-start'\n  },\n  value: Number,\n  format: {\n    type: String,\n    default: 'HH:mm:ss'\n  },\n  valueFormat: String,\n  formattedValue: String,\n  isHourDisabled: Function,\n  size: String,\n  isMinuteDisabled: Function,\n  isSecondDisabled: Function,\n  inputReadonly: Boolean,\n  clearable: Boolean,\n  status: String,\n  'onUpdate:value': [Function, Array],\n  onUpdateValue: [Function, Array],\n  'onUpdate:show': [Function, Array],\n  onUpdateShow: [Function, Array],\n  onUpdateFormattedValue: [Function, Array],\n  'onUpdate:formattedValue': [Function, Array],\n  onBlur: [Function, Array],\n  onConfirm: [Function, Array],\n  onClear: Function,\n  onFocus: [Function, Array],\n  // https://www.iana.org/time-zones\n  timeZone: String,\n  showIcon: {\n    type: Boolean,\n    default: true\n  },\n  disabled: {\n    type: Boolean,\n    default: undefined\n  },\n  show: {\n    type: Boolean,\n    default: undefined\n  },\n  hours: {\n    type: [Number, Array],\n    validator: value => validateUnits(value, 23)\n  },\n  minutes: {\n    type: [Number, Array],\n    validator: value => validateUnits(value, 59)\n  },\n  seconds: {\n    type: [Number, Array],\n    validator: value => validateUnits(value, 59)\n  },\n  use12Hours: Boolean,\n  // private\n  stateful: {\n    type: Boolean,\n    default: true\n  },\n  // deprecated\n  onChange: [Function, Array]\n});\nexport default defineComponent({\n  name: 'TimePicker',\n  props: timePickerProps,\n\n  setup(props) {\n    if (process.env.NODE_ENV !== 'production') {\n      watchEffect(() => {\n        if (props.onChange !== undefined) {\n          warnOnce('time-picker', '`on-change` is deprecated, please use `on-update:value` instead.');\n        }\n      });\n    }\n\n    const {\n      mergedBorderedRef,\n      mergedClsPrefixRef,\n      namespaceRef,\n      inlineThemeDisabled\n    } = useConfig(props);\n    const {\n      localeRef,\n      dateLocaleRef\n    } = useLocale('TimePicker');\n    const formItem = useFormItem(props);\n    const {\n      mergedSizeRef,\n      mergedDisabledRef,\n      mergedStatusRef\n    } = formItem;\n    const themeRef = useTheme('TimePicker', '-time-picker', style, timePickerLight, props, mergedClsPrefixRef);\n    const keyboardState = useKeyboard();\n    const inputInstRef = ref(null);\n    const panelInstRef = ref(null);\n    const dateFnsOptionsRef = computed(() => {\n      return {\n        locale: dateLocaleRef.value.locale\n      };\n    });\n\n    function getTimestampFromFormattedValue(value) {\n      if (value === null) return null;\n      return strictParse(value, props.valueFormat || props.format, new Date(), dateFnsOptionsRef.value).getTime();\n    }\n\n    const {\n      defaultValue,\n      defaultFormattedValue\n    } = props;\n    const uncontrolledValueRef = ref(defaultFormattedValue !== undefined ? getTimestampFromFormattedValue(defaultFormattedValue) : defaultValue);\n    const mergedValueRef = computed(() => {\n      const {\n        formattedValue\n      } = props;\n\n      if (formattedValue !== undefined) {\n        return getTimestampFromFormattedValue(formattedValue);\n      }\n\n      const {\n        value\n      } = props;\n\n      if (value !== undefined) {\n        return value;\n      }\n\n      return uncontrolledValueRef.value;\n    });\n    const mergedFormatRef = computed(() => {\n      const {\n        timeZone\n      } = props;\n\n      if (timeZone) {\n        return (date, format, options) => {\n          return formatInTimeZone(date, timeZone, format, options);\n        };\n      } else {\n        return (date, _format, options) => {\n          return format(date, _format, options);\n        };\n      }\n    });\n    const displayTimeStringRef = ref('');\n    watch(() => props.timeZone, () => {\n      const mergedValue = mergedValueRef.value;\n      displayTimeStringRef.value = mergedValue === null ? '' : mergedFormatRef.value(mergedValue, props.format, dateFnsOptionsRef.value);\n    }, {\n      immediate: true\n    });\n    const uncontrolledShowRef = ref(false);\n    const controlledShowRef = toRef(props, 'show');\n    const mergedShowRef = useMergedState(controlledShowRef, uncontrolledShowRef);\n    const memorizedValueRef = ref(mergedValueRef.value);\n    const transitionDisabledRef = ref(false);\n    const localizedNowRef = computed(() => {\n      return localeRef.value.now;\n    });\n    const localizedPlaceholderRef = computed(() => {\n      if (props.placeholder !== undefined) return props.placeholder;\n      return localeRef.value.placeholder;\n    });\n    const localizedNegativeTextRef = computed(() => {\n      return localeRef.value.negativeText;\n    });\n    const localizedPositiveTextRef = computed(() => {\n      return localeRef.value.positiveText;\n    });\n    const hourInFormatRef = computed(() => {\n      return /H|h|K|k/.test(props.format);\n    });\n    const minuteInFormatRef = computed(() => {\n      return props.format.includes('m');\n    });\n    const secondInFormatRef = computed(() => {\n      return props.format.includes('s');\n    });\n    const isHourInvalidRef = computed(() => {\n      const {\n        isHourDisabled\n      } = props;\n      if (hourValueRef.value === null) return false;\n      if (!isTimeInStep(hourValueRef.value, 'hours', props.hours)) return true;\n      if (!isHourDisabled) return false;\n      return isHourDisabled(hourValueRef.value);\n    });\n    const isMinuteInvalidRef = computed(() => {\n      const {\n        value: minuteValue\n      } = minuteValueRef;\n      const {\n        value: hourValue\n      } = hourValueRef;\n      if (minuteValue === null || hourValue === null) return false;\n      if (!isTimeInStep(minuteValue, 'minutes', props.minutes)) return true;\n      const {\n        isMinuteDisabled\n      } = props;\n      if (!isMinuteDisabled) return false;\n      return isMinuteDisabled(minuteValue, hourValue);\n    });\n    const isSecondInvalidRef = computed(() => {\n      const {\n        value: minuteValue\n      } = minuteValueRef;\n      const {\n        value: hourValue\n      } = hourValueRef;\n      const {\n        value: secondValue\n      } = secondValueRef;\n\n      if (secondValue === null || minuteValue === null || hourValue === null) {\n        return false;\n      }\n\n      if (!isTimeInStep(secondValue, 'seconds', props.seconds)) return true;\n      const {\n        isSecondDisabled\n      } = props;\n      if (!isSecondDisabled) return false;\n      return isSecondDisabled(secondValue, minuteValue, hourValue);\n    });\n    const isValueInvalidRef = computed(() => {\n      return isHourInvalidRef.value || isMinuteInvalidRef.value || isSecondInvalidRef.value;\n    });\n    const mergedAttrSizeRef = computed(() => {\n      return props.format.length + 4;\n    });\n    const amPmValueRef = computed(() => {\n      const {\n        value\n      } = mergedValueRef;\n      if (value === null) return null;\n      return getHours(value) < 12 ? 'am' : 'pm';\n    });\n    const hourValueRef = computed(() => {\n      const {\n        value\n      } = mergedValueRef;\n      if (value === null) return null;\n      return Number(mergedFormatRef.value(value, 'HH', dateFnsOptionsRef.value));\n    });\n    const minuteValueRef = computed(() => {\n      const {\n        value\n      } = mergedValueRef;\n      if (value === null) return null;\n      return Number(mergedFormatRef.value(value, 'mm', dateFnsOptionsRef.value));\n    });\n    const secondValueRef = computed(() => {\n      const {\n        value\n      } = mergedValueRef;\n      if (value === null) return null;\n      return Number(mergedFormatRef.value(value, 'ss', dateFnsOptionsRef.value));\n    });\n\n    function doUpdateFormattedValue(value, timestampValue) {\n      const {\n        onUpdateFormattedValue,\n        'onUpdate:formattedValue': _onUpdateFormattedValue\n      } = props;\n\n      if (onUpdateFormattedValue) {\n        call(onUpdateFormattedValue, value, timestampValue);\n      }\n\n      if (_onUpdateFormattedValue) {\n        call(_onUpdateFormattedValue, value, timestampValue);\n      }\n    }\n\n    function createFormattedValue(value) {\n      return value === null ? null : mergedFormatRef.value(value, props.valueFormat || props.format);\n    }\n\n    function doUpdateValue(value) {\n      const {\n        onUpdateValue,\n        'onUpdate:value': _onUpdateValue,\n        onChange\n      } = props;\n      const {\n        nTriggerFormChange,\n        nTriggerFormInput\n      } = formItem;\n      const formattedValue = createFormattedValue(value);\n\n      if (onUpdateValue) {\n        call(onUpdateValue, value, formattedValue);\n      }\n\n      if (_onUpdateValue) {\n        call(_onUpdateValue, value, formattedValue);\n      }\n\n      if (onChange) call(onChange, value, formattedValue);\n      doUpdateFormattedValue(formattedValue, value);\n      uncontrolledValueRef.value = value;\n      nTriggerFormChange();\n      nTriggerFormInput();\n    }\n\n    function doFocus(e) {\n      const {\n        onFocus\n      } = props;\n      const {\n        nTriggerFormFocus\n      } = formItem;\n      if (onFocus) call(onFocus, e);\n      nTriggerFormFocus();\n    }\n\n    function doBlur(e) {\n      const {\n        onBlur\n      } = props;\n      const {\n        nTriggerFormBlur\n      } = formItem;\n      if (onBlur) call(onBlur, e);\n      nTriggerFormBlur();\n    }\n\n    function doConfirm() {\n      const {\n        onConfirm\n      } = props;\n\n      if (onConfirm) {\n        call(onConfirm, mergedValueRef.value, createFormattedValue(mergedValueRef.value));\n      }\n    }\n\n    function handleTimeInputClear(e) {\n      var _a;\n\n      e.stopPropagation();\n      doUpdateValue(null);\n      deriveInputValue(null);\n      (_a = props.onClear) === null || _a === void 0 ? void 0 : _a.call(props);\n    }\n\n    function handleFocusDetectorFocus() {\n      closePanel({\n        returnFocus: true\n      });\n    }\n\n    function handleInputKeydown(e) {\n      if (e.key === 'Escape' && mergedShowRef.value) {\n        markEventEffectPerformed(e); // closePanel will be called in onDeactivated\n      }\n    }\n\n    function handleMenuKeydown(e) {\n      var _a;\n\n      switch (e.key) {\n        case 'Escape':\n          if (mergedShowRef.value) {\n            markEventEffectPerformed(e);\n            closePanel({\n              returnFocus: true\n            });\n          }\n\n          break;\n\n        case 'Tab':\n          if (keyboardState.shift && e.target === ((_a = panelInstRef.value) === null || _a === void 0 ? void 0 : _a.$el)) {\n            e.preventDefault();\n            closePanel({\n              returnFocus: true\n            });\n          }\n\n          break;\n      }\n    }\n\n    function disableTransitionOneTick() {\n      transitionDisabledRef.value = true;\n      void nextTick(() => {\n        transitionDisabledRef.value = false;\n      });\n    }\n\n    function handleTriggerClick(e) {\n      if (mergedDisabledRef.value || happensIn(e, 'clear')) return;\n\n      if (!mergedShowRef.value) {\n        openPanel();\n      }\n    }\n\n    function handleHourClick(hour) {\n      if (typeof hour === 'string') return;\n\n      if (mergedValueRef.value === null) {\n        doUpdateValue(getTime(setHours(startOfHour(new Date()), hour)));\n      } else {\n        doUpdateValue(getTime(setHours(mergedValueRef.value, hour)));\n      }\n    }\n\n    function handleMinuteClick(minute) {\n      if (typeof minute === 'string') return;\n\n      if (mergedValueRef.value === null) {\n        doUpdateValue(getTime(setMinutes(startOfMinute(new Date()), minute)));\n      } else {\n        doUpdateValue(getTime(setMinutes(mergedValueRef.value, minute)));\n      }\n    }\n\n    function handleSecondClick(second) {\n      if (typeof second === 'string') return;\n\n      if (mergedValueRef.value === null) {\n        doUpdateValue(getTime(setSeconds(startOfSecond(new Date()), second)));\n      } else {\n        doUpdateValue(getTime(setSeconds(mergedValueRef.value, second)));\n      }\n    }\n\n    function handleAmPmClick(amPm) {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n\n      if (mergedValue === null) {\n        const now = new Date();\n        const hours = getHours(now);\n\n        if (amPm === 'pm' && hours < 12) {\n          doUpdateValue(getTime(setHours(now, hours + 12)));\n        } else if (amPm === 'am' && hours >= 12) {\n          doUpdateValue(getTime(setHours(now, hours - 12)));\n        }\n\n        doUpdateValue(getTime(now));\n      } else {\n        const hours = getHours(mergedValue);\n\n        if (amPm === 'pm' && hours < 12) {\n          doUpdateValue(getTime(setHours(mergedValue, hours + 12)));\n        } else if (amPm === 'am' && hours >= 12) {\n          doUpdateValue(getTime(setHours(mergedValue, hours - 12)));\n        }\n      }\n    }\n\n    function deriveInputValue(time) {\n      if (time === undefined) time = mergedValueRef.value;\n      if (time === null) displayTimeStringRef.value = '';else {\n        displayTimeStringRef.value = mergedFormatRef.value(time, props.format, dateFnsOptionsRef.value);\n      }\n    }\n\n    function handleTimeInputFocus(e) {\n      if (isInternalFocusSwitch(e)) return;\n      doFocus(e);\n    }\n\n    function handleTimeInputBlur(e) {\n      var _a;\n\n      if (isInternalFocusSwitch(e)) return;\n\n      if (mergedShowRef.value) {\n        const panelEl = (_a = panelInstRef.value) === null || _a === void 0 ? void 0 : _a.$el;\n\n        if (!(panelEl === null || panelEl === void 0 ? void 0 : panelEl.contains(e.relatedTarget))) {\n          deriveInputValue();\n          doBlur(e);\n          closePanel({\n            returnFocus: false\n          });\n        }\n      } else {\n        deriveInputValue();\n        doBlur(e);\n      }\n    }\n\n    function handleTimeInputActivate() {\n      if (mergedDisabledRef.value) return;\n\n      if (!mergedShowRef.value) {\n        openPanel();\n      }\n    }\n\n    function handleTimeInputDeactivate() {\n      if (mergedDisabledRef.value) return;\n      deriveInputValue();\n      closePanel({\n        returnFocus: false\n      });\n    }\n\n    function scrollTimer() {\n      if (!panelInstRef.value) return;\n      const {\n        hourScrollRef,\n        minuteScrollRef,\n        secondScrollRef,\n        amPmScrollRef\n      } = panelInstRef.value;\n      [hourScrollRef, minuteScrollRef, secondScrollRef, amPmScrollRef].forEach(itemScrollRef => {\n        var _a;\n\n        if (!itemScrollRef) return;\n        const activeItemEl = (_a = itemScrollRef.contentRef) === null || _a === void 0 ? void 0 : _a.querySelector('[data-active]');\n\n        if (activeItemEl) {\n          itemScrollRef.scrollTo({\n            top: activeItemEl.offsetTop\n          });\n        }\n      });\n    }\n\n    function doUpdateShow(value) {\n      uncontrolledShowRef.value = value;\n      const {\n        onUpdateShow,\n        'onUpdate:show': _onUpdateShow\n      } = props;\n      if (onUpdateShow) call(onUpdateShow, value);\n      if (_onUpdateShow) call(_onUpdateShow, value);\n    }\n\n    function isInternalFocusSwitch(e) {\n      var _a, _b, _c;\n\n      return !!(((_b = (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.wrapperElRef) === null || _b === void 0 ? void 0 : _b.contains(e.relatedTarget)) || ((_c = panelInstRef.value) === null || _c === void 0 ? void 0 : _c.$el.contains(e.relatedTarget)));\n    }\n\n    function openPanel() {\n      memorizedValueRef.value = mergedValueRef.value;\n      doUpdateShow(true);\n      void nextTick(scrollTimer);\n    }\n\n    function handleClickOutside(e) {\n      var _a, _b;\n\n      if (mergedShowRef.value && !((_b = (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.wrapperElRef) === null || _b === void 0 ? void 0 : _b.contains(getPreciseEventTarget(e)))) {\n        closePanel({\n          returnFocus: false\n        });\n      }\n    }\n\n    function closePanel({\n      returnFocus\n    }) {\n      var _a;\n\n      if (mergedShowRef.value) {\n        doUpdateShow(false);\n\n        if (returnFocus) {\n          (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n        }\n      }\n    }\n\n    function handleTimeInputUpdateValue(v) {\n      if (v === '') {\n        doUpdateValue(null);\n        return;\n      }\n\n      const time = strictParse(v, props.format, new Date(), dateFnsOptionsRef.value);\n      displayTimeStringRef.value = v;\n\n      if (isValid(time)) {\n        const {\n          value: mergedValue\n        } = mergedValueRef;\n\n        if (mergedValue !== null) {\n          const newTime = set(mergedValue, {\n            hours: getHours(time),\n            minutes: getMinutes(time),\n            seconds: getSeconds(time)\n          });\n          doUpdateValue(getTime(newTime));\n        } else {\n          doUpdateValue(getTime(time));\n        }\n      }\n    }\n\n    function handleCancelClick() {\n      doUpdateValue(memorizedValueRef.value);\n      doUpdateShow(false);\n    }\n\n    function handleNowClick() {\n      const now = new Date();\n      const getNowTime = {\n        hours: getHours,\n        minutes: getMinutes,\n        seconds: getSeconds\n      };\n      const [mergeHours, mergeMinutes, mergeSeconds] = ['hours', 'minutes', 'seconds'].map(i => !props[i] || isTimeInStep(getNowTime[i](now), i, props[i]) ? getNowTime[i](now) : findSimilarTime(getNowTime[i](now), i, props[i]));\n      const newValue = setSeconds(setMinutes(setHours(mergedValueRef.value ? mergedValueRef.value : getTime(now), mergeHours), mergeMinutes), mergeSeconds);\n      doUpdateValue(getTime(newValue));\n    }\n\n    function handleConfirmClick() {\n      deriveInputValue();\n      doConfirm();\n      closePanel({\n        returnFocus: true\n      });\n    }\n\n    function handleMenuFocusOut(e) {\n      if (isInternalFocusSwitch(e)) return;\n      deriveInputValue();\n      doBlur(e);\n      closePanel({\n        returnFocus: false\n      });\n    }\n\n    watch(mergedValueRef, value => {\n      deriveInputValue(value);\n      disableTransitionOneTick();\n      void nextTick(scrollTimer);\n    });\n    watch(mergedShowRef, () => {\n      if (isValueInvalidRef.value) {\n        doUpdateValue(memorizedValueRef.value);\n      }\n    });\n    provide(timePickerInjectionKey, {\n      mergedThemeRef: themeRef,\n      mergedClsPrefixRef\n    });\n    const exposedMethods = {\n      focus: () => {\n        var _a;\n\n        (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n      },\n      blur: () => {\n        var _a;\n\n        (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.blur();\n      }\n    };\n    const triggerCssVarsRef = computed(() => {\n      const {\n        common: {\n          cubicBezierEaseInOut\n        },\n        self: {\n          iconColor,\n          iconColorDisabled\n        }\n      } = themeRef.value;\n      return {\n        '--n-icon-color-override': iconColor,\n        '--n-icon-color-disabled-override': iconColorDisabled,\n        '--n-bezier': cubicBezierEaseInOut\n      };\n    });\n    const triggerThemeClassHandle = inlineThemeDisabled ? useThemeClass('time-picker-trigger', undefined, triggerCssVarsRef, props) : undefined;\n    const cssVarsRef = computed(() => {\n      const {\n        self: {\n          panelColor,\n          itemTextColor,\n          itemTextColorActive,\n          itemColorHover,\n          panelDividerColor,\n          panelBoxShadow,\n          itemOpacityDisabled,\n          borderRadius,\n          itemFontSize,\n          itemWidth,\n          itemHeight,\n          panelActionPadding,\n          itemBorderRadius\n        },\n        common: {\n          cubicBezierEaseInOut\n        }\n      } = themeRef.value;\n      return {\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-border-radius': borderRadius,\n        '--n-item-color-hover': itemColorHover,\n        '--n-item-font-size': itemFontSize,\n        '--n-item-height': itemHeight,\n        '--n-item-opacity-disabled': itemOpacityDisabled,\n        '--n-item-text-color': itemTextColor,\n        '--n-item-text-color-active': itemTextColorActive,\n        '--n-item-width': itemWidth,\n        '--n-panel-action-padding': panelActionPadding,\n        '--n-panel-box-shadow': panelBoxShadow,\n        '--n-panel-color': panelColor,\n        '--n-panel-divider-color': panelDividerColor,\n        '--n-item-border-radius': itemBorderRadius\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('time-picker', undefined, cssVarsRef, props) : undefined;\n    return {\n      focus: exposedMethods.focus,\n      blur: exposedMethods.blur,\n      mergedStatus: mergedStatusRef,\n      mergedBordered: mergedBorderedRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      namespace: namespaceRef,\n      uncontrolledValue: uncontrolledValueRef,\n      mergedValue: mergedValueRef,\n      isMounted: useIsMounted(),\n      inputInstRef,\n      panelInstRef,\n      adjustedTo: useAdjustedTo(props),\n      mergedShow: mergedShowRef,\n      localizedNow: localizedNowRef,\n      localizedPlaceholder: localizedPlaceholderRef,\n      localizedNegativeText: localizedNegativeTextRef,\n      localizedPositiveText: localizedPositiveTextRef,\n      hourInFormat: hourInFormatRef,\n      minuteInFormat: minuteInFormatRef,\n      secondInFormat: secondInFormatRef,\n      mergedAttrSize: mergedAttrSizeRef,\n      displayTimeString: displayTimeStringRef,\n      mergedSize: mergedSizeRef,\n      mergedDisabled: mergedDisabledRef,\n      isValueInvalid: isValueInvalidRef,\n      isHourInvalid: isHourInvalidRef,\n      isMinuteInvalid: isMinuteInvalidRef,\n      isSecondInvalid: isSecondInvalidRef,\n      transitionDisabled: transitionDisabledRef,\n      hourValue: hourValueRef,\n      minuteValue: minuteValueRef,\n      secondValue: secondValueRef,\n      amPmValue: amPmValueRef,\n      handleInputKeydown,\n      handleTimeInputFocus,\n      handleTimeInputBlur,\n      handleNowClick,\n      handleConfirmClick,\n      handleTimeInputUpdateValue,\n      handleMenuFocusOut,\n      handleCancelClick,\n      handleClickOutside,\n      handleTimeInputActivate,\n      handleTimeInputDeactivate,\n      handleHourClick,\n      handleMinuteClick,\n      handleSecondClick,\n      handleAmPmClick,\n      handleTimeInputClear,\n      handleFocusDetectorFocus,\n      handleMenuKeydown,\n      handleTriggerClick,\n      mergedTheme: themeRef,\n      triggerCssVars: inlineThemeDisabled ? undefined : triggerCssVarsRef,\n      triggerThemeClass: triggerThemeClassHandle === null || triggerThemeClassHandle === void 0 ? void 0 : triggerThemeClassHandle.themeClass,\n      triggerOnRender: triggerThemeClassHandle === null || triggerThemeClassHandle === void 0 ? void 0 : triggerThemeClassHandle.onRender,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    };\n  },\n\n  render() {\n    const {\n      mergedClsPrefix,\n      $slots,\n      triggerOnRender\n    } = this;\n    triggerOnRender === null || triggerOnRender === void 0 ? void 0 : triggerOnRender();\n    return h(\"div\", {\n      class: [`${mergedClsPrefix}-time-picker`, this.triggerThemeClass],\n      style: this.triggerCssVars\n    }, h(VBinder, null, {\n      default: () => [h(VTarget, null, {\n        default: () => h(NInput, {\n          ref: \"inputInstRef\",\n          status: this.mergedStatus,\n          value: this.displayTimeString,\n          bordered: this.mergedBordered,\n          passivelyActivated: true,\n          attrSize: this.mergedAttrSize,\n          theme: this.mergedTheme.peers.Input,\n          themeOverrides: this.mergedTheme.peerOverrides.Input,\n          stateful: this.stateful,\n          size: this.mergedSize,\n          placeholder: this.localizedPlaceholder,\n          clearable: this.clearable,\n          disabled: this.mergedDisabled,\n          textDecoration: this.isValueInvalid ? 'line-through' : undefined,\n          onFocus: this.handleTimeInputFocus,\n          onBlur: this.handleTimeInputBlur,\n          onActivate: this.handleTimeInputActivate,\n          onDeactivate: this.handleTimeInputDeactivate,\n          onUpdateValue: this.handleTimeInputUpdateValue,\n          onClear: this.handleTimeInputClear,\n          internalDeactivateOnEnter: true,\n          internalForceFocus: this.mergedShow,\n          readonly: this.inputReadonly || this.mergedDisabled,\n          onClick: this.handleTriggerClick,\n          onKeydown: this.handleInputKeydown\n        }, this.showIcon ? {\n          [this.clearable ? 'clear-icon-placeholder' : 'suffix']: () => h(NBaseIcon, {\n            clsPrefix: mergedClsPrefix,\n            class: `${mergedClsPrefix}-time-picker-icon`\n          }, {\n            default: () => $slots.icon ? $slots.icon() : h(TimeIcon, null)\n          })\n        } : null)\n      }), h(VFollower, {\n        teleportDisabled: this.adjustedTo === useAdjustedTo.tdkey,\n        show: this.mergedShow,\n        to: this.adjustedTo,\n        containerClass: this.namespace,\n        placement: this.placement\n      }, {\n        default: () => h(Transition, {\n          name: \"fade-in-scale-up-transition\",\n          appear: this.isMounted\n        }, {\n          default: () => {\n            var _a;\n\n            if (this.mergedShow) {\n              (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n              return withDirectives(h(Panel, {\n                ref: \"panelInstRef\",\n                actions: this.actions,\n                class: this.themeClass,\n                style: this.cssVars,\n                seconds: this.seconds,\n                minutes: this.minutes,\n                hours: this.hours,\n                transitionDisabled: this.transitionDisabled,\n                hourValue: this.hourValue,\n                showHour: this.hourInFormat,\n                isHourInvalid: this.isHourInvalid,\n                isHourDisabled: this.isHourDisabled,\n                minuteValue: this.minuteValue,\n                showMinute: this.minuteInFormat,\n                isMinuteInvalid: this.isMinuteInvalid,\n                isMinuteDisabled: this.isMinuteDisabled,\n                secondValue: this.secondValue,\n                amPmValue: this.amPmValue,\n                showSecond: this.secondInFormat,\n                isSecondInvalid: this.isSecondInvalid,\n                isSecondDisabled: this.isSecondDisabled,\n                isValueInvalid: this.isValueInvalid,\n                nowText: this.localizedNow,\n                confirmText: this.localizedPositiveText,\n                use12Hours: this.use12Hours,\n                onFocusout: this.handleMenuFocusOut,\n                onKeydown: this.handleMenuKeydown,\n                onHourClick: this.handleHourClick,\n                onMinuteClick: this.handleMinuteClick,\n                onSecondClick: this.handleSecondClick,\n                onAmPmClick: this.handleAmPmClick,\n                onNowClick: this.handleNowClick,\n                onConfirmClick: this.handleConfirmClick,\n                onFocusDetectorFocus: this.handleFocusDetectorFocus\n              }), [[clickoutside, this.handleClickOutside, undefined, {\n                capture: true\n              }]]);\n            }\n\n            return null;\n          }\n        })\n      })]\n    }));\n  }\n\n});","map":{"version":3,"names":["h","ref","toRef","defineComponent","computed","withDirectives","Transition","provide","nextTick","watch","watchEffect","useIsMounted","useKeyboard","useMergedState","VBinder","VTarget","VFollower","clickoutside","getPreciseEventTarget","happensIn","isValid","startOfSecond","startOfMinute","startOfHour","format","set","setHours","setMinutes","setSeconds","getTime","getMinutes","getHours","getSeconds","formatInTimeZone","strictParse","TimeIcon","NInput","NBaseIcon","useConfig","useTheme","useLocale","useFormItem","useThemeClass","call","markEventEffectPerformed","useAdjustedTo","warnOnce","timePickerLight","Panel","timePickerInjectionKey","findSimilarTime","isTimeInStep","style","validateUnits","value","max","undefined","Array","isArray","every","v","timePickerProps","Object","assign","props","to","propTo","bordered","type","Boolean","default","actions","defaultValue","Number","defaultFormattedValue","String","placeholder","placement","valueFormat","formattedValue","isHourDisabled","Function","size","isMinuteDisabled","isSecondDisabled","inputReadonly","clearable","status","onUpdateValue","onUpdateShow","onUpdateFormattedValue","onBlur","onConfirm","onClear","onFocus","timeZone","showIcon","disabled","show","hours","validator","minutes","seconds","use12Hours","stateful","onChange","name","setup","process","env","NODE_ENV","mergedBorderedRef","mergedClsPrefixRef","namespaceRef","inlineThemeDisabled","localeRef","dateLocaleRef","formItem","mergedSizeRef","mergedDisabledRef","mergedStatusRef","themeRef","keyboardState","inputInstRef","panelInstRef","dateFnsOptionsRef","locale","getTimestampFromFormattedValue","Date","uncontrolledValueRef","mergedValueRef","mergedFormatRef","date","options","_format","displayTimeStringRef","mergedValue","immediate","uncontrolledShowRef","controlledShowRef","mergedShowRef","memorizedValueRef","transitionDisabledRef","localizedNowRef","now","localizedPlaceholderRef","localizedNegativeTextRef","negativeText","localizedPositiveTextRef","positiveText","hourInFormatRef","test","minuteInFormatRef","includes","secondInFormatRef","isHourInvalidRef","hourValueRef","isMinuteInvalidRef","minuteValue","minuteValueRef","hourValue","isSecondInvalidRef","secondValue","secondValueRef","isValueInvalidRef","mergedAttrSizeRef","length","amPmValueRef","doUpdateFormattedValue","timestampValue","_onUpdateFormattedValue","createFormattedValue","doUpdateValue","_onUpdateValue","nTriggerFormChange","nTriggerFormInput","doFocus","e","nTriggerFormFocus","doBlur","nTriggerFormBlur","doConfirm","handleTimeInputClear","_a","stopPropagation","deriveInputValue","handleFocusDetectorFocus","closePanel","returnFocus","handleInputKeydown","key","handleMenuKeydown","shift","target","$el","preventDefault","disableTransitionOneTick","handleTriggerClick","openPanel","handleHourClick","hour","handleMinuteClick","minute","handleSecondClick","second","handleAmPmClick","amPm","time","handleTimeInputFocus","isInternalFocusSwitch","handleTimeInputBlur","panelEl","contains","relatedTarget","handleTimeInputActivate","handleTimeInputDeactivate","scrollTimer","hourScrollRef","minuteScrollRef","secondScrollRef","amPmScrollRef","forEach","itemScrollRef","activeItemEl","contentRef","querySelector","scrollTo","top","offsetTop","doUpdateShow","_onUpdateShow","_b","_c","wrapperElRef","handleClickOutside","focus","handleTimeInputUpdateValue","newTime","handleCancelClick","handleNowClick","getNowTime","mergeHours","mergeMinutes","mergeSeconds","map","i","newValue","handleConfirmClick","handleMenuFocusOut","mergedThemeRef","exposedMethods","blur","triggerCssVarsRef","common","cubicBezierEaseInOut","self","iconColor","iconColorDisabled","triggerThemeClassHandle","cssVarsRef","panelColor","itemTextColor","itemTextColorActive","itemColorHover","panelDividerColor","panelBoxShadow","itemOpacityDisabled","borderRadius","itemFontSize","itemWidth","itemHeight","panelActionPadding","itemBorderRadius","themeClassHandle","mergedStatus","mergedBordered","mergedClsPrefix","namespace","uncontrolledValue","isMounted","adjustedTo","mergedShow","localizedNow","localizedPlaceholder","localizedNegativeText","localizedPositiveText","hourInFormat","minuteInFormat","secondInFormat","mergedAttrSize","displayTimeString","mergedSize","mergedDisabled","isValueInvalid","isHourInvalid","isMinuteInvalid","isSecondInvalid","transitionDisabled","amPmValue","mergedTheme","triggerCssVars","triggerThemeClass","themeClass","triggerOnRender","onRender","cssVars","render","$slots","class","passivelyActivated","attrSize","theme","peers","Input","themeOverrides","peerOverrides","textDecoration","onActivate","onDeactivate","internalDeactivateOnEnter","internalForceFocus","readonly","onClick","onKeydown","clsPrefix","icon","teleportDisabled","tdkey","containerClass","appear","showHour","showMinute","showSecond","nowText","confirmText","onFocusout","onHourClick","onMinuteClick","onSecondClick","onAmPmClick","onNowClick","onConfirmClick","onFocusDetectorFocus","capture"],"sources":["E:/VCode/SHC社区管理系统/shc_community_manager_system/node_modules/naive-ui/es/time-picker/src/TimePicker.js"],"sourcesContent":["import { h, ref, toRef, defineComponent, computed, withDirectives, Transition, provide, nextTick, watch, watchEffect } from 'vue';\nimport { useIsMounted, useKeyboard, useMergedState } from 'vooks';\nimport { VBinder, VTarget, VFollower } from 'vueuc';\nimport { clickoutside } from 'vdirs';\nimport { getPreciseEventTarget, happensIn } from 'seemly';\nimport { isValid, startOfSecond, startOfMinute, startOfHour, format, set, setHours, setMinutes, setSeconds, getTime, getMinutes, getHours, getSeconds } from 'date-fns/esm';\nimport formatInTimeZone from 'date-fns-tz/esm/formatInTimeZone';\nimport { strictParse } from '../../date-picker/src/utils';\nimport { TimeIcon } from '../../_internal/icons';\nimport { NInput } from '../../input';\nimport { NBaseIcon } from '../../_internal';\nimport { useConfig, useTheme, useLocale, useFormItem, useThemeClass } from '../../_mixins';\nimport { call, markEventEffectPerformed, useAdjustedTo, warnOnce } from '../../_utils';\nimport { timePickerLight } from '../styles';\nimport Panel from './Panel';\nimport { timePickerInjectionKey } from './interface';\nimport { findSimilarTime, isTimeInStep } from './utils';\nimport style from './styles/index.cssr';\n// validate hours, minutes, seconds prop\nfunction validateUnits(value, max) {\n    if (value === undefined) {\n        return true;\n    }\n    if (Array.isArray(value)) {\n        return value.every((v) => v >= 0 && v <= max);\n    }\n    else {\n        return value >= 0 && value <= max;\n    }\n}\nexport const timePickerProps = Object.assign(Object.assign({}, useTheme.props), { to: useAdjustedTo.propTo, bordered: {\n        type: Boolean,\n        default: undefined\n    }, actions: Array, defaultValue: {\n        type: Number,\n        default: null\n    }, defaultFormattedValue: String, placeholder: String, placement: {\n        type: String,\n        default: 'bottom-start'\n    }, value: Number, format: {\n        type: String,\n        default: 'HH:mm:ss'\n    }, valueFormat: String, formattedValue: String, isHourDisabled: Function, size: String, isMinuteDisabled: Function, isSecondDisabled: Function, inputReadonly: Boolean, clearable: Boolean, status: String, 'onUpdate:value': [Function, Array], onUpdateValue: [Function, Array], 'onUpdate:show': [Function, Array], onUpdateShow: [Function, Array], onUpdateFormattedValue: [Function, Array], 'onUpdate:formattedValue': [Function, Array], onBlur: [Function, Array], onConfirm: [Function, Array], onClear: Function, onFocus: [Function, Array], \n    // https://www.iana.org/time-zones\n    timeZone: String, showIcon: {\n        type: Boolean,\n        default: true\n    }, disabled: {\n        type: Boolean,\n        default: undefined\n    }, show: {\n        type: Boolean,\n        default: undefined\n    }, hours: {\n        type: [Number, Array],\n        validator: (value) => validateUnits(value, 23)\n    }, minutes: {\n        type: [Number, Array],\n        validator: (value) => validateUnits(value, 59)\n    }, seconds: {\n        type: [Number, Array],\n        validator: (value) => validateUnits(value, 59)\n    }, use12Hours: Boolean, \n    // private\n    stateful: {\n        type: Boolean,\n        default: true\n    }, \n    // deprecated\n    onChange: [Function, Array] });\nexport default defineComponent({\n    name: 'TimePicker',\n    props: timePickerProps,\n    setup(props) {\n        if (process.env.NODE_ENV !== 'production') {\n            watchEffect(() => {\n                if (props.onChange !== undefined) {\n                    warnOnce('time-picker', '`on-change` is deprecated, please use `on-update:value` instead.');\n                }\n            });\n        }\n        const { mergedBorderedRef, mergedClsPrefixRef, namespaceRef, inlineThemeDisabled } = useConfig(props);\n        const { localeRef, dateLocaleRef } = useLocale('TimePicker');\n        const formItem = useFormItem(props);\n        const { mergedSizeRef, mergedDisabledRef, mergedStatusRef } = formItem;\n        const themeRef = useTheme('TimePicker', '-time-picker', style, timePickerLight, props, mergedClsPrefixRef);\n        const keyboardState = useKeyboard();\n        const inputInstRef = ref(null);\n        const panelInstRef = ref(null);\n        const dateFnsOptionsRef = computed(() => {\n            return {\n                locale: dateLocaleRef.value.locale\n            };\n        });\n        function getTimestampFromFormattedValue(value) {\n            if (value === null)\n                return null;\n            return strictParse(value, props.valueFormat || props.format, new Date(), dateFnsOptionsRef.value).getTime();\n        }\n        const { defaultValue, defaultFormattedValue } = props;\n        const uncontrolledValueRef = ref(defaultFormattedValue !== undefined\n            ? getTimestampFromFormattedValue(defaultFormattedValue)\n            : defaultValue);\n        const mergedValueRef = computed(() => {\n            const { formattedValue } = props;\n            if (formattedValue !== undefined) {\n                return getTimestampFromFormattedValue(formattedValue);\n            }\n            const { value } = props;\n            if (value !== undefined) {\n                return value;\n            }\n            return uncontrolledValueRef.value;\n        });\n        const mergedFormatRef = computed(() => {\n            const { timeZone } = props;\n            if (timeZone) {\n                return (date, format, options) => {\n                    return formatInTimeZone(date, timeZone, format, options);\n                };\n            }\n            else {\n                return (date, _format, options) => {\n                    return format(date, _format, options);\n                };\n            }\n        });\n        const displayTimeStringRef = ref('');\n        watch(() => props.timeZone, () => {\n            const mergedValue = mergedValueRef.value;\n            displayTimeStringRef.value =\n                mergedValue === null\n                    ? ''\n                    : mergedFormatRef.value(mergedValue, props.format, dateFnsOptionsRef.value);\n        }, {\n            immediate: true\n        });\n        const uncontrolledShowRef = ref(false);\n        const controlledShowRef = toRef(props, 'show');\n        const mergedShowRef = useMergedState(controlledShowRef, uncontrolledShowRef);\n        const memorizedValueRef = ref(mergedValueRef.value);\n        const transitionDisabledRef = ref(false);\n        const localizedNowRef = computed(() => {\n            return localeRef.value.now;\n        });\n        const localizedPlaceholderRef = computed(() => {\n            if (props.placeholder !== undefined)\n                return props.placeholder;\n            return localeRef.value.placeholder;\n        });\n        const localizedNegativeTextRef = computed(() => {\n            return localeRef.value.negativeText;\n        });\n        const localizedPositiveTextRef = computed(() => {\n            return localeRef.value.positiveText;\n        });\n        const hourInFormatRef = computed(() => {\n            return /H|h|K|k/.test(props.format);\n        });\n        const minuteInFormatRef = computed(() => {\n            return props.format.includes('m');\n        });\n        const secondInFormatRef = computed(() => {\n            return props.format.includes('s');\n        });\n        const isHourInvalidRef = computed(() => {\n            const { isHourDisabled } = props;\n            if (hourValueRef.value === null)\n                return false;\n            if (!isTimeInStep(hourValueRef.value, 'hours', props.hours))\n                return true;\n            if (!isHourDisabled)\n                return false;\n            return isHourDisabled(hourValueRef.value);\n        });\n        const isMinuteInvalidRef = computed(() => {\n            const { value: minuteValue } = minuteValueRef;\n            const { value: hourValue } = hourValueRef;\n            if (minuteValue === null || hourValue === null)\n                return false;\n            if (!isTimeInStep(minuteValue, 'minutes', props.minutes))\n                return true;\n            const { isMinuteDisabled } = props;\n            if (!isMinuteDisabled)\n                return false;\n            return isMinuteDisabled(minuteValue, hourValue);\n        });\n        const isSecondInvalidRef = computed(() => {\n            const { value: minuteValue } = minuteValueRef;\n            const { value: hourValue } = hourValueRef;\n            const { value: secondValue } = secondValueRef;\n            if (secondValue === null || minuteValue === null || hourValue === null) {\n                return false;\n            }\n            if (!isTimeInStep(secondValue, 'seconds', props.seconds))\n                return true;\n            const { isSecondDisabled } = props;\n            if (!isSecondDisabled)\n                return false;\n            return isSecondDisabled(secondValue, minuteValue, hourValue);\n        });\n        const isValueInvalidRef = computed(() => {\n            return (isHourInvalidRef.value ||\n                isMinuteInvalidRef.value ||\n                isSecondInvalidRef.value);\n        });\n        const mergedAttrSizeRef = computed(() => {\n            return props.format.length + 4;\n        });\n        const amPmValueRef = computed(() => {\n            const { value } = mergedValueRef;\n            if (value === null)\n                return null;\n            return getHours(value) < 12 ? 'am' : 'pm';\n        });\n        const hourValueRef = computed(() => {\n            const { value } = mergedValueRef;\n            if (value === null)\n                return null;\n            return Number(mergedFormatRef.value(value, 'HH', dateFnsOptionsRef.value));\n        });\n        const minuteValueRef = computed(() => {\n            const { value } = mergedValueRef;\n            if (value === null)\n                return null;\n            return Number(mergedFormatRef.value(value, 'mm', dateFnsOptionsRef.value));\n        });\n        const secondValueRef = computed(() => {\n            const { value } = mergedValueRef;\n            if (value === null)\n                return null;\n            return Number(mergedFormatRef.value(value, 'ss', dateFnsOptionsRef.value));\n        });\n        function doUpdateFormattedValue(value, timestampValue) {\n            const { onUpdateFormattedValue, 'onUpdate:formattedValue': _onUpdateFormattedValue } = props;\n            if (onUpdateFormattedValue) {\n                call(onUpdateFormattedValue, value, timestampValue);\n            }\n            if (_onUpdateFormattedValue) {\n                call(_onUpdateFormattedValue, value, timestampValue);\n            }\n        }\n        function createFormattedValue(value) {\n            return value === null\n                ? null\n                : mergedFormatRef.value(value, props.valueFormat || props.format);\n        }\n        function doUpdateValue(value) {\n            const { onUpdateValue, 'onUpdate:value': _onUpdateValue, onChange } = props;\n            const { nTriggerFormChange, nTriggerFormInput } = formItem;\n            const formattedValue = createFormattedValue(value);\n            if (onUpdateValue) {\n                call(onUpdateValue, value, formattedValue);\n            }\n            if (_onUpdateValue) {\n                call(_onUpdateValue, value, formattedValue);\n            }\n            if (onChange)\n                call(onChange, value, formattedValue);\n            doUpdateFormattedValue(formattedValue, value);\n            uncontrolledValueRef.value = value;\n            nTriggerFormChange();\n            nTriggerFormInput();\n        }\n        function doFocus(e) {\n            const { onFocus } = props;\n            const { nTriggerFormFocus } = formItem;\n            if (onFocus)\n                call(onFocus, e);\n            nTriggerFormFocus();\n        }\n        function doBlur(e) {\n            const { onBlur } = props;\n            const { nTriggerFormBlur } = formItem;\n            if (onBlur)\n                call(onBlur, e);\n            nTriggerFormBlur();\n        }\n        function doConfirm() {\n            const { onConfirm } = props;\n            if (onConfirm) {\n                call(onConfirm, mergedValueRef.value, createFormattedValue(mergedValueRef.value));\n            }\n        }\n        function handleTimeInputClear(e) {\n            var _a;\n            e.stopPropagation();\n            doUpdateValue(null);\n            deriveInputValue(null);\n            (_a = props.onClear) === null || _a === void 0 ? void 0 : _a.call(props);\n        }\n        function handleFocusDetectorFocus() {\n            closePanel({\n                returnFocus: true\n            });\n        }\n        function handleInputKeydown(e) {\n            if (e.key === 'Escape' && mergedShowRef.value) {\n                markEventEffectPerformed(e);\n                // closePanel will be called in onDeactivated\n            }\n        }\n        function handleMenuKeydown(e) {\n            var _a;\n            switch (e.key) {\n                case 'Escape':\n                    if (mergedShowRef.value) {\n                        markEventEffectPerformed(e);\n                        closePanel({\n                            returnFocus: true\n                        });\n                    }\n                    break;\n                case 'Tab':\n                    if (keyboardState.shift && e.target === ((_a = panelInstRef.value) === null || _a === void 0 ? void 0 : _a.$el)) {\n                        e.preventDefault();\n                        closePanel({\n                            returnFocus: true\n                        });\n                    }\n                    break;\n            }\n        }\n        function disableTransitionOneTick() {\n            transitionDisabledRef.value = true;\n            void nextTick(() => {\n                transitionDisabledRef.value = false;\n            });\n        }\n        function handleTriggerClick(e) {\n            if (mergedDisabledRef.value || happensIn(e, 'clear'))\n                return;\n            if (!mergedShowRef.value) {\n                openPanel();\n            }\n        }\n        function handleHourClick(hour) {\n            if (typeof hour === 'string')\n                return;\n            if (mergedValueRef.value === null) {\n                doUpdateValue(getTime(setHours(startOfHour(new Date()), hour)));\n            }\n            else {\n                doUpdateValue(getTime(setHours(mergedValueRef.value, hour)));\n            }\n        }\n        function handleMinuteClick(minute) {\n            if (typeof minute === 'string')\n                return;\n            if (mergedValueRef.value === null) {\n                doUpdateValue(getTime(setMinutes(startOfMinute(new Date()), minute)));\n            }\n            else {\n                doUpdateValue(getTime(setMinutes(mergedValueRef.value, minute)));\n            }\n        }\n        function handleSecondClick(second) {\n            if (typeof second === 'string')\n                return;\n            if (mergedValueRef.value === null) {\n                doUpdateValue(getTime(setSeconds(startOfSecond(new Date()), second)));\n            }\n            else {\n                doUpdateValue(getTime(setSeconds(mergedValueRef.value, second)));\n            }\n        }\n        function handleAmPmClick(amPm) {\n            const { value: mergedValue } = mergedValueRef;\n            if (mergedValue === null) {\n                const now = new Date();\n                const hours = getHours(now);\n                if (amPm === 'pm' && hours < 12) {\n                    doUpdateValue(getTime(setHours(now, hours + 12)));\n                }\n                else if (amPm === 'am' && hours >= 12) {\n                    doUpdateValue(getTime(setHours(now, hours - 12)));\n                }\n                doUpdateValue(getTime(now));\n            }\n            else {\n                const hours = getHours(mergedValue);\n                if (amPm === 'pm' && hours < 12) {\n                    doUpdateValue(getTime(setHours(mergedValue, hours + 12)));\n                }\n                else if (amPm === 'am' && hours >= 12) {\n                    doUpdateValue(getTime(setHours(mergedValue, hours - 12)));\n                }\n            }\n        }\n        function deriveInputValue(time) {\n            if (time === undefined)\n                time = mergedValueRef.value;\n            if (time === null)\n                displayTimeStringRef.value = '';\n            else {\n                displayTimeStringRef.value = mergedFormatRef.value(time, props.format, dateFnsOptionsRef.value);\n            }\n        }\n        function handleTimeInputFocus(e) {\n            if (isInternalFocusSwitch(e))\n                return;\n            doFocus(e);\n        }\n        function handleTimeInputBlur(e) {\n            var _a;\n            if (isInternalFocusSwitch(e))\n                return;\n            if (mergedShowRef.value) {\n                const panelEl = (_a = panelInstRef.value) === null || _a === void 0 ? void 0 : _a.$el;\n                if (!(panelEl === null || panelEl === void 0 ? void 0 : panelEl.contains(e.relatedTarget))) {\n                    deriveInputValue();\n                    doBlur(e);\n                    closePanel({\n                        returnFocus: false\n                    });\n                }\n            }\n            else {\n                deriveInputValue();\n                doBlur(e);\n            }\n        }\n        function handleTimeInputActivate() {\n            if (mergedDisabledRef.value)\n                return;\n            if (!mergedShowRef.value) {\n                openPanel();\n            }\n        }\n        function handleTimeInputDeactivate() {\n            if (mergedDisabledRef.value)\n                return;\n            deriveInputValue();\n            closePanel({\n                returnFocus: false\n            });\n        }\n        function scrollTimer() {\n            if (!panelInstRef.value)\n                return;\n            const { hourScrollRef, minuteScrollRef, secondScrollRef, amPmScrollRef } = panelInstRef.value;\n            [hourScrollRef, minuteScrollRef, secondScrollRef, amPmScrollRef].forEach((itemScrollRef) => {\n                var _a;\n                if (!itemScrollRef)\n                    return;\n                const activeItemEl = (_a = itemScrollRef.contentRef) === null || _a === void 0 ? void 0 : _a.querySelector('[data-active]');\n                if (activeItemEl) {\n                    itemScrollRef.scrollTo({\n                        top: activeItemEl.offsetTop\n                    });\n                }\n            });\n        }\n        function doUpdateShow(value) {\n            uncontrolledShowRef.value = value;\n            const { onUpdateShow, 'onUpdate:show': _onUpdateShow } = props;\n            if (onUpdateShow)\n                call(onUpdateShow, value);\n            if (_onUpdateShow)\n                call(_onUpdateShow, value);\n        }\n        function isInternalFocusSwitch(e) {\n            var _a, _b, _c;\n            return !!(((_b = (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.wrapperElRef) === null || _b === void 0 ? void 0 : _b.contains(e.relatedTarget)) ||\n                ((_c = panelInstRef.value) === null || _c === void 0 ? void 0 : _c.$el.contains(e.relatedTarget)));\n        }\n        function openPanel() {\n            memorizedValueRef.value = mergedValueRef.value;\n            doUpdateShow(true);\n            void nextTick(scrollTimer);\n        }\n        function handleClickOutside(e) {\n            var _a, _b;\n            if (mergedShowRef.value &&\n                !((_b = (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.wrapperElRef) === null || _b === void 0 ? void 0 : _b.contains(getPreciseEventTarget(e)))) {\n                closePanel({\n                    returnFocus: false\n                });\n            }\n        }\n        function closePanel({ returnFocus }) {\n            var _a;\n            if (mergedShowRef.value) {\n                doUpdateShow(false);\n                if (returnFocus) {\n                    (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n                }\n            }\n        }\n        function handleTimeInputUpdateValue(v) {\n            if (v === '') {\n                doUpdateValue(null);\n                return;\n            }\n            const time = strictParse(v, props.format, new Date(), dateFnsOptionsRef.value);\n            displayTimeStringRef.value = v;\n            if (isValid(time)) {\n                const { value: mergedValue } = mergedValueRef;\n                if (mergedValue !== null) {\n                    const newTime = set(mergedValue, {\n                        hours: getHours(time),\n                        minutes: getMinutes(time),\n                        seconds: getSeconds(time)\n                    });\n                    doUpdateValue(getTime(newTime));\n                }\n                else {\n                    doUpdateValue(getTime(time));\n                }\n            }\n        }\n        function handleCancelClick() {\n            doUpdateValue(memorizedValueRef.value);\n            doUpdateShow(false);\n        }\n        function handleNowClick() {\n            const now = new Date();\n            const getNowTime = {\n                hours: getHours,\n                minutes: getMinutes,\n                seconds: getSeconds\n            };\n            const [mergeHours, mergeMinutes, mergeSeconds] = ['hours', 'minutes', 'seconds'].map((i) => !props[i] || isTimeInStep(getNowTime[i](now), i, props[i])\n                ? getNowTime[i](now)\n                : findSimilarTime(getNowTime[i](now), i, props[i]));\n            const newValue = setSeconds(setMinutes(setHours(mergedValueRef.value ? mergedValueRef.value : getTime(now), mergeHours), mergeMinutes), mergeSeconds);\n            doUpdateValue(getTime(newValue));\n        }\n        function handleConfirmClick() {\n            deriveInputValue();\n            doConfirm();\n            closePanel({\n                returnFocus: true\n            });\n        }\n        function handleMenuFocusOut(e) {\n            if (isInternalFocusSwitch(e))\n                return;\n            deriveInputValue();\n            doBlur(e);\n            closePanel({\n                returnFocus: false\n            });\n        }\n        watch(mergedValueRef, (value) => {\n            deriveInputValue(value);\n            disableTransitionOneTick();\n            void nextTick(scrollTimer);\n        });\n        watch(mergedShowRef, () => {\n            if (isValueInvalidRef.value) {\n                doUpdateValue(memorizedValueRef.value);\n            }\n        });\n        provide(timePickerInjectionKey, {\n            mergedThemeRef: themeRef,\n            mergedClsPrefixRef\n        });\n        const exposedMethods = {\n            focus: () => {\n                var _a;\n                (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n            },\n            blur: () => {\n                var _a;\n                (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.blur();\n            }\n        };\n        const triggerCssVarsRef = computed(() => {\n            const { common: { cubicBezierEaseInOut }, self: { iconColor, iconColorDisabled } } = themeRef.value;\n            return {\n                '--n-icon-color-override': iconColor,\n                '--n-icon-color-disabled-override': iconColorDisabled,\n                '--n-bezier': cubicBezierEaseInOut\n            };\n        });\n        const triggerThemeClassHandle = inlineThemeDisabled\n            ? useThemeClass('time-picker-trigger', undefined, triggerCssVarsRef, props)\n            : undefined;\n        const cssVarsRef = computed(() => {\n            const { self: { panelColor, itemTextColor, itemTextColorActive, itemColorHover, panelDividerColor, panelBoxShadow, itemOpacityDisabled, borderRadius, itemFontSize, itemWidth, itemHeight, panelActionPadding, itemBorderRadius }, common: { cubicBezierEaseInOut } } = themeRef.value;\n            return {\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-border-radius': borderRadius,\n                '--n-item-color-hover': itemColorHover,\n                '--n-item-font-size': itemFontSize,\n                '--n-item-height': itemHeight,\n                '--n-item-opacity-disabled': itemOpacityDisabled,\n                '--n-item-text-color': itemTextColor,\n                '--n-item-text-color-active': itemTextColorActive,\n                '--n-item-width': itemWidth,\n                '--n-panel-action-padding': panelActionPadding,\n                '--n-panel-box-shadow': panelBoxShadow,\n                '--n-panel-color': panelColor,\n                '--n-panel-divider-color': panelDividerColor,\n                '--n-item-border-radius': itemBorderRadius\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('time-picker', undefined, cssVarsRef, props)\n            : undefined;\n        return {\n            focus: exposedMethods.focus,\n            blur: exposedMethods.blur,\n            mergedStatus: mergedStatusRef,\n            mergedBordered: mergedBorderedRef,\n            mergedClsPrefix: mergedClsPrefixRef,\n            namespace: namespaceRef,\n            uncontrolledValue: uncontrolledValueRef,\n            mergedValue: mergedValueRef,\n            isMounted: useIsMounted(),\n            inputInstRef,\n            panelInstRef,\n            adjustedTo: useAdjustedTo(props),\n            mergedShow: mergedShowRef,\n            localizedNow: localizedNowRef,\n            localizedPlaceholder: localizedPlaceholderRef,\n            localizedNegativeText: localizedNegativeTextRef,\n            localizedPositiveText: localizedPositiveTextRef,\n            hourInFormat: hourInFormatRef,\n            minuteInFormat: minuteInFormatRef,\n            secondInFormat: secondInFormatRef,\n            mergedAttrSize: mergedAttrSizeRef,\n            displayTimeString: displayTimeStringRef,\n            mergedSize: mergedSizeRef,\n            mergedDisabled: mergedDisabledRef,\n            isValueInvalid: isValueInvalidRef,\n            isHourInvalid: isHourInvalidRef,\n            isMinuteInvalid: isMinuteInvalidRef,\n            isSecondInvalid: isSecondInvalidRef,\n            transitionDisabled: transitionDisabledRef,\n            hourValue: hourValueRef,\n            minuteValue: minuteValueRef,\n            secondValue: secondValueRef,\n            amPmValue: amPmValueRef,\n            handleInputKeydown,\n            handleTimeInputFocus,\n            handleTimeInputBlur,\n            handleNowClick,\n            handleConfirmClick,\n            handleTimeInputUpdateValue,\n            handleMenuFocusOut,\n            handleCancelClick,\n            handleClickOutside,\n            handleTimeInputActivate,\n            handleTimeInputDeactivate,\n            handleHourClick,\n            handleMinuteClick,\n            handleSecondClick,\n            handleAmPmClick,\n            handleTimeInputClear,\n            handleFocusDetectorFocus,\n            handleMenuKeydown,\n            handleTriggerClick,\n            mergedTheme: themeRef,\n            triggerCssVars: inlineThemeDisabled ? undefined : triggerCssVarsRef,\n            triggerThemeClass: triggerThemeClassHandle === null || triggerThemeClassHandle === void 0 ? void 0 : triggerThemeClassHandle.themeClass,\n            triggerOnRender: triggerThemeClassHandle === null || triggerThemeClassHandle === void 0 ? void 0 : triggerThemeClassHandle.onRender,\n            cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n            themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n            onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n        };\n    },\n    render() {\n        const { mergedClsPrefix, $slots, triggerOnRender } = this;\n        triggerOnRender === null || triggerOnRender === void 0 ? void 0 : triggerOnRender();\n        return (h(\"div\", { class: [`${mergedClsPrefix}-time-picker`, this.triggerThemeClass], style: this.triggerCssVars },\n            h(VBinder, null, {\n                default: () => [\n                    h(VTarget, null, {\n                        default: () => (h(NInput, { ref: \"inputInstRef\", status: this.mergedStatus, value: this.displayTimeString, bordered: this.mergedBordered, passivelyActivated: true, attrSize: this.mergedAttrSize, theme: this.mergedTheme.peers.Input, themeOverrides: this.mergedTheme.peerOverrides.Input, stateful: this.stateful, size: this.mergedSize, placeholder: this.localizedPlaceholder, clearable: this.clearable, disabled: this.mergedDisabled, textDecoration: this.isValueInvalid ? 'line-through' : undefined, onFocus: this.handleTimeInputFocus, onBlur: this.handleTimeInputBlur, onActivate: this.handleTimeInputActivate, onDeactivate: this.handleTimeInputDeactivate, onUpdateValue: this.handleTimeInputUpdateValue, onClear: this.handleTimeInputClear, internalDeactivateOnEnter: true, internalForceFocus: this.mergedShow, readonly: this.inputReadonly || this.mergedDisabled, onClick: this.handleTriggerClick, onKeydown: this.handleInputKeydown }, this.showIcon\n                            ? {\n                                [this.clearable\n                                    ? 'clear-icon-placeholder'\n                                    : 'suffix']: () => (h(NBaseIcon, { clsPrefix: mergedClsPrefix, class: `${mergedClsPrefix}-time-picker-icon` }, {\n                                    default: () => $slots.icon ? $slots.icon() : h(TimeIcon, null)\n                                }))\n                            }\n                            : null))\n                    }),\n                    h(VFollower, { teleportDisabled: this.adjustedTo === useAdjustedTo.tdkey, show: this.mergedShow, to: this.adjustedTo, containerClass: this.namespace, placement: this.placement }, {\n                        default: () => (h(Transition, { name: \"fade-in-scale-up-transition\", appear: this.isMounted }, {\n                            default: () => {\n                                var _a;\n                                if (this.mergedShow) {\n                                    (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n                                    return withDirectives(h(Panel, { ref: \"panelInstRef\", actions: this.actions, class: this.themeClass, style: this.cssVars, seconds: this.seconds, minutes: this.minutes, hours: this.hours, transitionDisabled: this.transitionDisabled, hourValue: this.hourValue, showHour: this.hourInFormat, isHourInvalid: this.isHourInvalid, isHourDisabled: this.isHourDisabled, minuteValue: this.minuteValue, showMinute: this.minuteInFormat, isMinuteInvalid: this.isMinuteInvalid, isMinuteDisabled: this.isMinuteDisabled, secondValue: this.secondValue, amPmValue: this.amPmValue, showSecond: this.secondInFormat, isSecondInvalid: this.isSecondInvalid, isSecondDisabled: this.isSecondDisabled, isValueInvalid: this.isValueInvalid, nowText: this.localizedNow, confirmText: this.localizedPositiveText, use12Hours: this.use12Hours, onFocusout: this.handleMenuFocusOut, onKeydown: this.handleMenuKeydown, onHourClick: this.handleHourClick, onMinuteClick: this.handleMinuteClick, onSecondClick: this.handleSecondClick, onAmPmClick: this.handleAmPmClick, onNowClick: this.handleNowClick, onConfirmClick: this.handleConfirmClick, onFocusDetectorFocus: this.handleFocusDetectorFocus }), [\n                                        [\n                                            clickoutside,\n                                            this.handleClickOutside,\n                                            undefined,\n                                            { capture: true }\n                                        ]\n                                    ]);\n                                }\n                                return null;\n                            }\n                        }))\n                    })\n                ]\n            })));\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}