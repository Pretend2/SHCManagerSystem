{"ast":null,"code":"import { h, ref, computed, defineComponent, inject, watch, watchEffect, onMounted, onBeforeUnmount } from 'vue';\nimport { VResizeObserver } from 'vueuc';\nimport { isImageSupportNativeLazy } from '../../_utils/env/is-native-lazy-load';\nimport { observeIntersection } from '../../image/src/utils';\nimport { tagInjectionKey } from '../../tag/src/Tag';\nimport { useConfig, useTheme, useThemeClass } from '../../_mixins';\nimport { createKey, color2Class, resolveWrappedSlot } from '../../_utils';\nimport { avatarLight } from '../styles';\nimport { avatarGroupInjectionKey } from './context';\nimport style from './styles/index.cssr';\nexport const avatarProps = Object.assign(Object.assign({}, useTheme.props), {\n  size: [String, Number],\n  src: String,\n  circle: {\n    type: Boolean,\n    default: undefined\n  },\n  objectFit: String,\n  round: {\n    type: Boolean,\n    default: undefined\n  },\n  bordered: {\n    type: Boolean,\n    default: undefined\n  },\n  onError: Function,\n  fallbackSrc: String,\n  intersectionObserverOptions: Object,\n  lazy: Boolean,\n  onLoad: Function,\n\n  /** @deprecated */\n  color: String\n});\nexport default defineComponent({\n  name: 'Avatar',\n  props: avatarProps,\n\n  setup(props) {\n    const {\n      mergedClsPrefixRef,\n      inlineThemeDisabled\n    } = useConfig(props);\n    const hasLoadErrorRef = ref(false);\n    let memoedTextHtml = null;\n    const textRef = ref(null);\n    const selfRef = ref(null);\n\n    const fitTextTransform = () => {\n      const {\n        value: textEl\n      } = textRef;\n\n      if (textEl) {\n        if (memoedTextHtml === null || memoedTextHtml !== textEl.innerHTML) {\n          memoedTextHtml = textEl.innerHTML;\n          const {\n            value: selfEl\n          } = selfRef;\n\n          if (selfEl) {\n            const {\n              offsetWidth: elWidth,\n              offsetHeight: elHeight\n            } = selfEl;\n            const {\n              offsetWidth: textWidth,\n              offsetHeight: textHeight\n            } = textEl;\n            const radix = 0.9;\n            const ratio = Math.min(elWidth / textWidth * radix, elHeight / textHeight * radix, 1);\n            textEl.style.transform = `translateX(-50%) translateY(-50%) scale(${ratio})`;\n          }\n        }\n      }\n    };\n\n    const NAvatarGroup = inject(avatarGroupInjectionKey, null);\n    const mergedSizeRef = computed(() => {\n      const {\n        size\n      } = props;\n      if (size) return size;\n      const {\n        size: avatarGroupSize\n      } = NAvatarGroup || {};\n      if (avatarGroupSize) return avatarGroupSize;\n      return 'medium';\n    });\n    const themeRef = useTheme('Avatar', '-avatar', style, avatarLight, props, mergedClsPrefixRef);\n    const TagInjection = inject(tagInjectionKey, null);\n    const mergedRoundRef = computed(() => {\n      if (NAvatarGroup) return true;\n      const {\n        round,\n        circle\n      } = props;\n      if (round !== undefined || circle !== undefined) return round || circle;\n\n      if (TagInjection) {\n        return TagInjection.roundRef.value;\n      }\n\n      return false;\n    });\n    const mergedBorderedRef = computed(() => {\n      if (NAvatarGroup) return true;\n      return props.bordered || false;\n    });\n\n    const handleError = e => {\n      if (!shouldStartLoadingRef.value) return;\n      hasLoadErrorRef.value = true;\n      const {\n        onError\n      } = props;\n\n      if (onError) {\n        onError(e);\n      }\n    };\n\n    watch(() => props.src, () => hasLoadErrorRef.value = false);\n    const cssVarsRef = computed(() => {\n      const size = mergedSizeRef.value;\n      const round = mergedRoundRef.value;\n      const bordered = mergedBorderedRef.value;\n      const {\n        color: propColor\n      } = props;\n      const {\n        self: {\n          borderRadius,\n          fontSize,\n          color,\n          border,\n          colorModal,\n          colorPopover\n        },\n        common: {\n          cubicBezierEaseInOut\n        }\n      } = themeRef.value;\n      let height;\n\n      if (typeof size === 'number') {\n        height = `${size}px`;\n      } else {\n        height = themeRef.value.self[createKey('height', size)];\n      }\n\n      return {\n        '--n-font-size': fontSize,\n        '--n-border': bordered ? border : 'none',\n        '--n-border-radius': round ? '50%' : borderRadius,\n        '--n-color': propColor || color,\n        '--n-color-modal': propColor || colorModal,\n        '--n-color-popover': propColor || colorPopover,\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-merged-size': `var(--n-avatar-size-override, ${height})`\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('avatar', computed(() => {\n      const size = mergedSizeRef.value;\n      const round = mergedRoundRef.value;\n      const bordered = mergedBorderedRef.value;\n      const {\n        color\n      } = props;\n      let hash = '';\n\n      if (size) {\n        if (typeof size === 'number') {\n          hash += `a${size}`;\n        } else {\n          hash += size[0];\n        }\n      }\n\n      if (round) {\n        hash += 'b';\n      }\n\n      if (bordered) {\n        hash += 'c';\n      }\n\n      if (color) {\n        hash += color2Class(color);\n      }\n\n      return hash;\n    }), cssVarsRef, props) : undefined;\n    const shouldStartLoadingRef = ref(!props.lazy);\n    onMounted(() => {\n      if (isImageSupportNativeLazy) {\n        return;\n      }\n\n      let unobserve;\n      const stopWatchHandle = watchEffect(() => {\n        unobserve === null || unobserve === void 0 ? void 0 : unobserve();\n        unobserve = undefined;\n\n        if (props.lazy) {\n          unobserve = observeIntersection(selfRef.value, props.intersectionObserverOptions, shouldStartLoadingRef);\n        }\n      });\n      onBeforeUnmount(() => {\n        stopWatchHandle();\n        unobserve === null || unobserve === void 0 ? void 0 : unobserve();\n      });\n    });\n    const loadedRef = ref(!props.lazy);\n    return {\n      textRef,\n      selfRef,\n      mergedRoundRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      fitTextTransform,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender,\n      hasLoadError: hasLoadErrorRef,\n      handleError,\n      shouldStartLoading: shouldStartLoadingRef,\n      loaded: loadedRef,\n      mergedOnLoad: e => {\n        const {\n          onLoad\n        } = props;\n        onLoad === null || onLoad === void 0 ? void 0 : onLoad(e);\n        loadedRef.value = true;\n      }\n    };\n  },\n\n  render() {\n    var _a, _b;\n\n    const {\n      $slots,\n      src,\n      mergedClsPrefix,\n      lazy,\n      onRender,\n      mergedOnLoad,\n      shouldStartLoading,\n      loaded,\n      hasLoadError\n    } = this;\n    onRender === null || onRender === void 0 ? void 0 : onRender();\n    let img;\n    const placeholderNode = !loaded && !hasLoadError && ((_b = (_a = this.$slots).placeholder) === null || _b === void 0 ? void 0 : _b.call(_a));\n\n    if (this.hasLoadError) {\n      img = h(\"img\", {\n        src: this.fallbackSrc,\n        style: {\n          objectFit: this.objectFit\n        }\n      });\n    } else {\n      img = resolveWrappedSlot($slots.default, children => {\n        if (children) {\n          return h(VResizeObserver, {\n            onResize: this.fitTextTransform\n          }, {\n            default: () => h(\"span\", {\n              ref: \"textRef\",\n              class: `${mergedClsPrefix}-avatar__text`\n            }, children)\n          });\n        } else if (src) {\n          return h('img', {\n            loading: isImageSupportNativeLazy && lazy ? 'lazy' : 'eager',\n            src: isImageSupportNativeLazy ? src : shouldStartLoading || loaded ? src : undefined,\n            onLoad: mergedOnLoad,\n            'data-image-src': src,\n            onError: this.handleError,\n            style: [{\n              objectFit: this.objectFit\n            }, placeholderNode ? {\n              height: '0',\n              width: '0',\n              visibility: 'hidden',\n              position: 'absolute'\n            } : '']\n          });\n        }\n      });\n    }\n\n    return h(\"span\", {\n      ref: \"selfRef\",\n      class: [`${mergedClsPrefix}-avatar`, this.themeClass],\n      style: this.cssVars\n    }, img, lazy && placeholderNode);\n  }\n\n});","map":{"version":3,"names":["h","ref","computed","defineComponent","inject","watch","watchEffect","onMounted","onBeforeUnmount","VResizeObserver","isImageSupportNativeLazy","observeIntersection","tagInjectionKey","useConfig","useTheme","useThemeClass","createKey","color2Class","resolveWrappedSlot","avatarLight","avatarGroupInjectionKey","style","avatarProps","Object","assign","props","size","String","Number","src","circle","type","Boolean","default","undefined","objectFit","round","bordered","onError","Function","fallbackSrc","intersectionObserverOptions","lazy","onLoad","color","name","setup","mergedClsPrefixRef","inlineThemeDisabled","hasLoadErrorRef","memoedTextHtml","textRef","selfRef","fitTextTransform","value","textEl","innerHTML","selfEl","offsetWidth","elWidth","offsetHeight","elHeight","textWidth","textHeight","radix","ratio","Math","min","transform","NAvatarGroup","mergedSizeRef","avatarGroupSize","themeRef","TagInjection","mergedRoundRef","roundRef","mergedBorderedRef","handleError","e","shouldStartLoadingRef","cssVarsRef","propColor","self","borderRadius","fontSize","border","colorModal","colorPopover","common","cubicBezierEaseInOut","height","themeClassHandle","hash","unobserve","stopWatchHandle","loadedRef","mergedClsPrefix","cssVars","themeClass","onRender","hasLoadError","shouldStartLoading","loaded","mergedOnLoad","render","_a","_b","$slots","img","placeholderNode","placeholder","call","children","onResize","class","loading","width","visibility","position"],"sources":["E:/VCode/SHC社区管理系统/shc_community_manager_system/node_modules/naive-ui/es/avatar/src/Avatar.js"],"sourcesContent":["import { h, ref, computed, defineComponent, inject, watch, watchEffect, onMounted, onBeforeUnmount } from 'vue';\nimport { VResizeObserver } from 'vueuc';\nimport { isImageSupportNativeLazy } from '../../_utils/env/is-native-lazy-load';\nimport { observeIntersection } from '../../image/src/utils';\nimport { tagInjectionKey } from '../../tag/src/Tag';\nimport { useConfig, useTheme, useThemeClass } from '../../_mixins';\nimport { createKey, color2Class, resolveWrappedSlot } from '../../_utils';\nimport { avatarLight } from '../styles';\nimport { avatarGroupInjectionKey } from './context';\nimport style from './styles/index.cssr';\nexport const avatarProps = Object.assign(Object.assign({}, useTheme.props), { size: [String, Number], src: String, circle: {\n        type: Boolean,\n        default: undefined\n    }, objectFit: String, round: {\n        type: Boolean,\n        default: undefined\n    }, bordered: {\n        type: Boolean,\n        default: undefined\n    }, onError: Function, fallbackSrc: String, intersectionObserverOptions: Object, lazy: Boolean, onLoad: Function, \n    /** @deprecated */\n    color: String });\nexport default defineComponent({\n    name: 'Avatar',\n    props: avatarProps,\n    setup(props) {\n        const { mergedClsPrefixRef, inlineThemeDisabled } = useConfig(props);\n        const hasLoadErrorRef = ref(false);\n        let memoedTextHtml = null;\n        const textRef = ref(null);\n        const selfRef = ref(null);\n        const fitTextTransform = () => {\n            const { value: textEl } = textRef;\n            if (textEl) {\n                if (memoedTextHtml === null || memoedTextHtml !== textEl.innerHTML) {\n                    memoedTextHtml = textEl.innerHTML;\n                    const { value: selfEl } = selfRef;\n                    if (selfEl) {\n                        const { offsetWidth: elWidth, offsetHeight: elHeight } = selfEl;\n                        const { offsetWidth: textWidth, offsetHeight: textHeight } = textEl;\n                        const radix = 0.9;\n                        const ratio = Math.min((elWidth / textWidth) * radix, (elHeight / textHeight) * radix, 1);\n                        textEl.style.transform = `translateX(-50%) translateY(-50%) scale(${ratio})`;\n                    }\n                }\n            }\n        };\n        const NAvatarGroup = inject(avatarGroupInjectionKey, null);\n        const mergedSizeRef = computed(() => {\n            const { size } = props;\n            if (size)\n                return size;\n            const { size: avatarGroupSize } = NAvatarGroup || {};\n            if (avatarGroupSize)\n                return avatarGroupSize;\n            return 'medium';\n        });\n        const themeRef = useTheme('Avatar', '-avatar', style, avatarLight, props, mergedClsPrefixRef);\n        const TagInjection = inject(tagInjectionKey, null);\n        const mergedRoundRef = computed(() => {\n            if (NAvatarGroup)\n                return true;\n            const { round, circle } = props;\n            if (round !== undefined || circle !== undefined)\n                return round || circle;\n            if (TagInjection) {\n                return TagInjection.roundRef.value;\n            }\n            return false;\n        });\n        const mergedBorderedRef = computed(() => {\n            if (NAvatarGroup)\n                return true;\n            return props.bordered || false;\n        });\n        const handleError = (e) => {\n            if (!shouldStartLoadingRef.value)\n                return;\n            hasLoadErrorRef.value = true;\n            const { onError } = props;\n            if (onError) {\n                onError(e);\n            }\n        };\n        watch(() => props.src, () => (hasLoadErrorRef.value = false));\n        const cssVarsRef = computed(() => {\n            const size = mergedSizeRef.value;\n            const round = mergedRoundRef.value;\n            const bordered = mergedBorderedRef.value;\n            const { color: propColor } = props;\n            const { self: { borderRadius, fontSize, color, border, colorModal, colorPopover }, common: { cubicBezierEaseInOut } } = themeRef.value;\n            let height;\n            if (typeof size === 'number') {\n                height = `${size}px`;\n            }\n            else {\n                height = themeRef.value.self[createKey('height', size)];\n            }\n            return {\n                '--n-font-size': fontSize,\n                '--n-border': bordered ? border : 'none',\n                '--n-border-radius': round ? '50%' : borderRadius,\n                '--n-color': propColor || color,\n                '--n-color-modal': propColor || colorModal,\n                '--n-color-popover': propColor || colorPopover,\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-merged-size': `var(--n-avatar-size-override, ${height})`\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('avatar', computed(() => {\n                const size = mergedSizeRef.value;\n                const round = mergedRoundRef.value;\n                const bordered = mergedBorderedRef.value;\n                const { color } = props;\n                let hash = '';\n                if (size) {\n                    if (typeof size === 'number') {\n                        hash += `a${size}`;\n                    }\n                    else {\n                        hash += size[0];\n                    }\n                }\n                if (round) {\n                    hash += 'b';\n                }\n                if (bordered) {\n                    hash += 'c';\n                }\n                if (color) {\n                    hash += color2Class(color);\n                }\n                return hash;\n            }), cssVarsRef, props)\n            : undefined;\n        const shouldStartLoadingRef = ref(!props.lazy);\n        onMounted(() => {\n            if (isImageSupportNativeLazy) {\n                return;\n            }\n            let unobserve;\n            const stopWatchHandle = watchEffect(() => {\n                unobserve === null || unobserve === void 0 ? void 0 : unobserve();\n                unobserve = undefined;\n                if (props.lazy) {\n                    unobserve = observeIntersection(selfRef.value, props.intersectionObserverOptions, shouldStartLoadingRef);\n                }\n            });\n            onBeforeUnmount(() => {\n                stopWatchHandle();\n                unobserve === null || unobserve === void 0 ? void 0 : unobserve();\n            });\n        });\n        const loadedRef = ref(!props.lazy);\n        return {\n            textRef,\n            selfRef,\n            mergedRoundRef,\n            mergedClsPrefix: mergedClsPrefixRef,\n            fitTextTransform,\n            cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n            themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n            onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender,\n            hasLoadError: hasLoadErrorRef,\n            handleError,\n            shouldStartLoading: shouldStartLoadingRef,\n            loaded: loadedRef,\n            mergedOnLoad: (e) => {\n                const { onLoad } = props;\n                onLoad === null || onLoad === void 0 ? void 0 : onLoad(e);\n                loadedRef.value = true;\n            }\n        };\n    },\n    render() {\n        var _a, _b;\n        const { $slots, src, mergedClsPrefix, lazy, onRender, mergedOnLoad, shouldStartLoading, loaded, hasLoadError } = this;\n        onRender === null || onRender === void 0 ? void 0 : onRender();\n        let img;\n        const placeholderNode = !loaded && !hasLoadError && ((_b = (_a = this.$slots).placeholder) === null || _b === void 0 ? void 0 : _b.call(_a));\n        if (this.hasLoadError) {\n            img = h(\"img\", { src: this.fallbackSrc, style: { objectFit: this.objectFit } });\n        }\n        else {\n            img = resolveWrappedSlot($slots.default, (children) => {\n                if (children) {\n                    return (h(VResizeObserver, { onResize: this.fitTextTransform }, {\n                        default: () => (h(\"span\", { ref: \"textRef\", class: `${mergedClsPrefix}-avatar__text` }, children))\n                    }));\n                }\n                else if (src) {\n                    return h('img', {\n                        loading: isImageSupportNativeLazy && lazy ? 'lazy' : 'eager',\n                        src: isImageSupportNativeLazy\n                            ? src\n                            : shouldStartLoading || loaded\n                                ? src\n                                : undefined,\n                        onLoad: mergedOnLoad,\n                        'data-image-src': src,\n                        onError: this.handleError,\n                        style: [\n                            { objectFit: this.objectFit },\n                            placeholderNode\n                                ? {\n                                    height: '0',\n                                    width: '0',\n                                    visibility: 'hidden',\n                                    position: 'absolute'\n                                }\n                                : ''\n                        ]\n                    });\n                }\n            });\n        }\n        return (h(\"span\", { ref: \"selfRef\", class: [`${mergedClsPrefix}-avatar`, this.themeClass], style: this.cssVars },\n            img,\n            lazy && placeholderNode));\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}