{"ast":null,"code":"import { h, defineComponent, inject, getCurrentInstance, computed } from 'vue';\nimport { pxfy } from 'seemly';\nimport { keysOf } from '../../_utils';\nimport { gridInjectionKey } from './config';\nexport const defaultSpan = 1;\nexport const gridItemProps = {\n  span: {\n    type: [Number, String],\n    default: defaultSpan\n  },\n  offset: {\n    type: [Number, String],\n    default: 0\n  },\n  suffix: Boolean,\n  // private props\n  privateOffset: Number,\n  privateSpan: Number,\n  privateColStart: Number,\n  privateShow: {\n    type: Boolean,\n    default: true\n  }\n};\nexport const gridItemPropKeys = keysOf(gridItemProps);\nexport default defineComponent({\n  __GRID_ITEM__: true,\n  name: 'GridItem',\n  alias: ['Gi'],\n  props: gridItemProps,\n\n  setup() {\n    const {\n      isSsrRef,\n      xGapRef,\n      itemStyleRef,\n      overflowRef,\n      layoutShiftDisabledRef // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    } = inject(gridInjectionKey);\n    const self = getCurrentInstance();\n    return {\n      overflow: overflowRef,\n      itemStyle: itemStyleRef,\n      layoutShiftDisabled: layoutShiftDisabledRef,\n      mergedXGap: computed(() => {\n        return pxfy(xGapRef.value || 0);\n      }),\n      deriveStyle: () => {\n        void isSsrRef.value; // Here is quite a hack, I hope there is a better way to solve it\n\n        const {\n          privateSpan = defaultSpan,\n          privateShow = true,\n          privateColStart = undefined,\n          privateOffset = 0 // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n        } = self.vnode.props;\n        const {\n          value: xGap\n        } = xGapRef;\n        const mergedXGap = pxfy(xGap || 0);\n        return {\n          display: !privateShow ? 'none' : '',\n          gridColumn: `${privateColStart !== null && privateColStart !== void 0 ? privateColStart : `span ${privateSpan}`} / span ${privateSpan}`,\n          marginLeft: privateOffset ? `calc((100% - (${privateSpan} - 1) * ${mergedXGap}) / ${privateSpan} * ${privateOffset} + ${mergedXGap} * ${privateOffset})` : ''\n        };\n      }\n    };\n  },\n\n  render() {\n    var _a, _b;\n\n    if (this.layoutShiftDisabled) {\n      const {\n        span,\n        offset,\n        mergedXGap\n      } = this;\n      return h(\"div\", {\n        style: {\n          gridColumn: `span ${span} / span ${span}`,\n          marginLeft: offset ? `calc((100% - (${span} - 1) * ${mergedXGap}) / ${span} * ${offset} + ${mergedXGap} * ${offset})` : ''\n        }\n      }, this.$slots);\n    }\n\n    return h(\"div\", {\n      style: [this.itemStyle, this.deriveStyle()]\n    }, (_b = (_a = this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a, {\n      overflow: this.overflow\n    }));\n  }\n\n});","map":{"version":3,"names":["h","defineComponent","inject","getCurrentInstance","computed","pxfy","keysOf","gridInjectionKey","defaultSpan","gridItemProps","span","type","Number","String","default","offset","suffix","Boolean","privateOffset","privateSpan","privateColStart","privateShow","gridItemPropKeys","__GRID_ITEM__","name","alias","props","setup","isSsrRef","xGapRef","itemStyleRef","overflowRef","layoutShiftDisabledRef","self","overflow","itemStyle","layoutShiftDisabled","mergedXGap","value","deriveStyle","undefined","vnode","xGap","display","gridColumn","marginLeft","render","_a","_b","style","$slots","call"],"sources":["D:/VCode/SHC社区管理系统/shc_community_manager_system/node_modules/naive-ui/es/grid/src/GridItem.js"],"sourcesContent":["import { h, defineComponent, inject, getCurrentInstance, computed } from 'vue';\nimport { pxfy } from 'seemly';\nimport { keysOf } from '../../_utils';\nimport { gridInjectionKey } from './config';\nexport const defaultSpan = 1;\nexport const gridItemProps = {\n    span: {\n        type: [Number, String],\n        default: defaultSpan\n    },\n    offset: {\n        type: [Number, String],\n        default: 0\n    },\n    suffix: Boolean,\n    // private props\n    privateOffset: Number,\n    privateSpan: Number,\n    privateColStart: Number,\n    privateShow: {\n        type: Boolean,\n        default: true\n    }\n};\nexport const gridItemPropKeys = keysOf(gridItemProps);\nexport default defineComponent({\n    __GRID_ITEM__: true,\n    name: 'GridItem',\n    alias: ['Gi'],\n    props: gridItemProps,\n    setup() {\n        const { isSsrRef, xGapRef, itemStyleRef, overflowRef, layoutShiftDisabledRef\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n         } = inject(gridInjectionKey);\n        const self = getCurrentInstance();\n        return {\n            overflow: overflowRef,\n            itemStyle: itemStyleRef,\n            layoutShiftDisabled: layoutShiftDisabledRef,\n            mergedXGap: computed(() => {\n                return pxfy(xGapRef.value || 0);\n            }),\n            deriveStyle: () => {\n                void isSsrRef.value;\n                // Here is quite a hack, I hope there is a better way to solve it\n                const { privateSpan = defaultSpan, privateShow = true, privateColStart = undefined, privateOffset = 0\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                 } = self.vnode.props;\n                const { value: xGap } = xGapRef;\n                const mergedXGap = pxfy(xGap || 0);\n                return {\n                    display: !privateShow ? 'none' : '',\n                    gridColumn: `${privateColStart !== null && privateColStart !== void 0 ? privateColStart : `span ${privateSpan}`} / span ${privateSpan}`,\n                    marginLeft: privateOffset\n                        ? `calc((100% - (${privateSpan} - 1) * ${mergedXGap}) / ${privateSpan} * ${privateOffset} + ${mergedXGap} * ${privateOffset})`\n                        : ''\n                };\n            }\n        };\n    },\n    render() {\n        var _a, _b;\n        if (this.layoutShiftDisabled) {\n            const { span, offset, mergedXGap } = this;\n            return (h(\"div\", { style: {\n                    gridColumn: `span ${span} / span ${span}`,\n                    marginLeft: offset\n                        ? `calc((100% - (${span} - 1) * ${mergedXGap}) / ${span} * ${offset} + ${mergedXGap} * ${offset})`\n                        : ''\n                } }, this.$slots));\n        }\n        return (h(\"div\", { style: [this.itemStyle, this.deriveStyle()] }, (_b = (_a = this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a, { overflow: this.overflow })));\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}