{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { h, defineComponent, computed, provide, toRef, mergeProps, ref, cloneVNode, vShow, onMounted } from 'vue';\nimport { useBreakpoints, useMemo } from 'vooks';\nimport { VResizeObserver } from 'vueuc';\nimport { pxfy, parseResponsivePropValue, beforeNextFrameOnce } from 'seemly';\nimport { defaultBreakpoints } from '../../config-provider/src/config';\nimport { useConfig } from '../../_mixins';\nimport { getSlot, flatten, isBrowser, isNodeVShowFalse } from '../../_utils';\nimport { defaultSpan, gridInjectionKey } from './config';\nconst defaultCols = 24;\nconst SSR_ATTR_NAME = '__ssr__';\nexport const gridProps = {\n  layoutShiftDisabled: Boolean,\n  responsive: {\n    type: [String, Boolean],\n    default: 'self'\n  },\n  cols: {\n    type: [Number, String],\n    default: defaultCols\n  },\n  itemResponsive: Boolean,\n  collapsed: Boolean,\n  // may create grid rows < collapsedRows since a item may take all the row\n  collapsedRows: {\n    type: Number,\n    default: 1\n  },\n  itemStyle: [Object, String],\n  xGap: {\n    type: [Number, String],\n    default: 0\n  },\n  yGap: {\n    type: [Number, String],\n    default: 0\n  }\n};\nexport default defineComponent({\n  name: 'Grid',\n  inheritAttrs: false,\n  props: gridProps,\n\n  setup(props) {\n    const {\n      mergedClsPrefixRef,\n      mergedBreakpointsRef\n    } = useConfig(props);\n    const numRegex = /^\\d+$/;\n    const widthRef = ref(undefined);\n    const breakpointsRef = useBreakpoints((mergedBreakpointsRef === null || mergedBreakpointsRef === void 0 ? void 0 : mergedBreakpointsRef.value) || defaultBreakpoints);\n    const isResponsiveRef = useMemo(() => {\n      if (props.itemResponsive) return true;\n      if (!numRegex.test(props.cols.toString())) return true;\n      if (!numRegex.test(props.xGap.toString())) return true;\n      if (!numRegex.test(props.yGap.toString())) return true;\n      return false;\n    });\n    const responsiveQueryRef = computed(() => {\n      if (!isResponsiveRef.value) return undefined;\n      return props.responsive === 'self' ? widthRef.value : breakpointsRef.value;\n    });\n    const responsiveColsRef = useMemo(() => {\n      var _a;\n\n      return (_a = Number(parseResponsivePropValue(props.cols.toString(), responsiveQueryRef.value))) !== null && _a !== void 0 ? _a : defaultCols;\n    });\n    const responsiveXGapRef = useMemo(() => parseResponsivePropValue(props.xGap.toString(), responsiveQueryRef.value));\n    const responsiveYGapRef = useMemo(() => parseResponsivePropValue(props.yGap.toString(), responsiveQueryRef.value));\n\n    const handleResize = entry => {\n      widthRef.value = entry.contentRect.width;\n    };\n\n    const handleResizeRaf = entry => {\n      beforeNextFrameOnce(handleResize, entry);\n    };\n\n    const overflowRef = ref(false);\n    const handleResizeRef = computed(() => {\n      if (props.responsive === 'self') {\n        return handleResizeRaf;\n      }\n\n      return undefined;\n    }); // for SSR, fix bug https://github.com/TuSimple/naive-ui/issues/2462\n\n    const isSsrRef = ref(false);\n    const contentElRef = ref();\n    onMounted(() => {\n      const {\n        value: contentEl\n      } = contentElRef;\n\n      if (contentEl) {\n        if (contentEl.hasAttribute(SSR_ATTR_NAME)) {\n          contentEl.removeAttribute(SSR_ATTR_NAME);\n          isSsrRef.value = true;\n        }\n      }\n    });\n    provide(gridInjectionKey, {\n      layoutShiftDisabledRef: toRef(props, 'layoutShiftDisabled'),\n      isSsrRef,\n      itemStyleRef: toRef(props, 'itemStyle'),\n      xGapRef: responsiveXGapRef,\n      overflowRef\n    });\n    return {\n      isSsr: !isBrowser,\n      contentEl: contentElRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      style: computed(() => {\n        if (props.layoutShiftDisabled) {\n          return {\n            width: '100%',\n            display: 'grid',\n            gridTemplateColumns: `repeat(${props.cols}, minmax(0, 1fr))`,\n            columnGap: pxfy(props.xGap),\n            rowGap: pxfy(props.yGap)\n          };\n        }\n\n        return {\n          width: '100%',\n          display: 'grid',\n          gridTemplateColumns: `repeat(${responsiveColsRef.value}, minmax(0, 1fr))`,\n          columnGap: pxfy(responsiveXGapRef.value),\n          rowGap: pxfy(responsiveYGapRef.value)\n        };\n      }),\n      isResponsive: isResponsiveRef,\n      responsiveQuery: responsiveQueryRef,\n      responsiveCols: responsiveColsRef,\n      handleResize: handleResizeRef,\n      overflow: overflowRef\n    };\n  },\n\n  render() {\n    if (this.layoutShiftDisabled) {\n      return h('div', mergeProps({\n        ref: 'contentEl',\n        class: `${this.mergedClsPrefix}-grid`,\n        style: this.style\n      }, this.$attrs), this.$slots);\n    }\n\n    const renderContent = () => {\n      var _a, _b, _c, _d, _e, _f, _g;\n\n      this.overflow = false; // render will be called twice when mounted, I can't figure out why\n      // 2 jobs will be pushed into job queues with same id, and then be flushed\n\n      const rawChildren = flatten(getSlot(this));\n      const childrenAndRawSpan = [];\n      const {\n        collapsed,\n        collapsedRows,\n        responsiveCols,\n        responsiveQuery\n      } = this;\n      rawChildren.forEach(child => {\n        var _a, _b, _c, _d;\n\n        if (((_a = child === null || child === void 0 ? void 0 : child.type) === null || _a === void 0 ? void 0 : _a.__GRID_ITEM__) !== true) return;\n\n        if (isNodeVShowFalse(child)) {\n          const clonedNode = cloneVNode(child);\n\n          if (clonedNode.props) {\n            clonedNode.props.privateShow = false;\n          } else {\n            clonedNode.props = {\n              privateShow: false\n            };\n          }\n\n          childrenAndRawSpan.push({\n            child: clonedNode,\n            rawChildSpan: 0\n          });\n          return;\n        } // We don't want v-show to control display, so we need to stripe it\n        // here, nor it may mess child's style\n\n\n        child.dirs = ((_b = child.dirs) === null || _b === void 0 ? void 0 : _b.filter(({\n          dir\n        }) => dir !== vShow)) || null;\n        const clonedChild = cloneVNode(child);\n        const rawChildSpan = Number((_d = parseResponsivePropValue((_c = clonedChild.props) === null || _c === void 0 ? void 0 : _c.span, responsiveQuery)) !== null && _d !== void 0 ? _d : defaultSpan);\n        if (rawChildSpan === 0) return;\n        childrenAndRawSpan.push({\n          child: clonedChild,\n          rawChildSpan\n        });\n      });\n      let suffixSpan = 0;\n      const maybeSuffixNode = (_a = childrenAndRawSpan[childrenAndRawSpan.length - 1]) === null || _a === void 0 ? void 0 : _a.child;\n\n      if (maybeSuffixNode === null || maybeSuffixNode === void 0 ? void 0 : maybeSuffixNode.props) {\n        const suffixPropValue = (_b = maybeSuffixNode.props) === null || _b === void 0 ? void 0 : _b.suffix;\n\n        if (suffixPropValue !== undefined && suffixPropValue !== false) {\n          suffixSpan = (_d = (_c = maybeSuffixNode.props) === null || _c === void 0 ? void 0 : _c.span) !== null && _d !== void 0 ? _d : defaultSpan;\n          maybeSuffixNode.props.privateSpan = suffixSpan;\n          maybeSuffixNode.props.privateColStart = responsiveCols + 1 - suffixSpan;\n          maybeSuffixNode.props.privateShow = (_e = maybeSuffixNode.props.privateShow) !== null && _e !== void 0 ? _e : true;\n        }\n      }\n\n      let spanCounter = 0;\n      let done = false;\n\n      for (const {\n        child,\n        rawChildSpan\n      } of childrenAndRawSpan) {\n        if (done) {\n          this.overflow = true;\n        }\n\n        if (!done) {\n          const childOffset = Number((_g = parseResponsivePropValue((_f = child.props) === null || _f === void 0 ? void 0 : _f.offset, responsiveQuery)) !== null && _g !== void 0 ? _g : 0); // it could be 0 sometimes (v-show = false)\n\n          const childSpan = Math.min(rawChildSpan + childOffset, responsiveCols);\n\n          if (!child.props) {\n            child.props = {\n              privateSpan: childSpan,\n              privateOffset: childOffset\n            };\n          } else {\n            child.props.privateSpan = childSpan;\n            child.props.privateOffset = childOffset;\n          }\n\n          if (collapsed) {\n            const remainder = spanCounter % responsiveCols;\n\n            if (childSpan + remainder > responsiveCols) {\n              spanCounter += responsiveCols - remainder;\n            }\n\n            if (childSpan + spanCounter + suffixSpan > collapsedRows * responsiveCols) {\n              done = true;\n            } else {\n              spanCounter += childSpan;\n            }\n          }\n        }\n\n        if (done) {\n          if (child.props) {\n            // suffix node's privateShow may be true\n            if (child.props.privateShow !== true) {\n              child.props.privateShow = false;\n            }\n          } else {\n            child.props = {\n              privateShow: false\n            };\n          }\n        }\n      }\n\n      return h('div', mergeProps({\n        ref: 'contentEl',\n        class: `${this.mergedClsPrefix}-grid`,\n        style: this.style,\n        [SSR_ATTR_NAME]: this.isSsr || undefined\n      }, this.$attrs), childrenAndRawSpan.map(({\n        child\n      }) => child));\n    };\n\n    return this.isResponsive && this.responsive === 'self' ? h(VResizeObserver, {\n      onResize: this.handleResize\n    }, {\n      default: renderContent\n    }) : renderContent();\n  }\n\n});","map":{"version":3,"names":["h","defineComponent","computed","provide","toRef","mergeProps","ref","cloneVNode","vShow","onMounted","useBreakpoints","useMemo","VResizeObserver","pxfy","parseResponsivePropValue","beforeNextFrameOnce","defaultBreakpoints","useConfig","getSlot","flatten","isBrowser","isNodeVShowFalse","defaultSpan","gridInjectionKey","defaultCols","SSR_ATTR_NAME","gridProps","layoutShiftDisabled","Boolean","responsive","type","String","default","cols","Number","itemResponsive","collapsed","collapsedRows","itemStyle","Object","xGap","yGap","name","inheritAttrs","props","setup","mergedClsPrefixRef","mergedBreakpointsRef","numRegex","widthRef","undefined","breakpointsRef","value","isResponsiveRef","test","toString","responsiveQueryRef","responsiveColsRef","_a","responsiveXGapRef","responsiveYGapRef","handleResize","entry","contentRect","width","handleResizeRaf","overflowRef","handleResizeRef","isSsrRef","contentElRef","contentEl","hasAttribute","removeAttribute","layoutShiftDisabledRef","itemStyleRef","xGapRef","isSsr","mergedClsPrefix","style","display","gridTemplateColumns","columnGap","rowGap","isResponsive","responsiveQuery","responsiveCols","overflow","render","class","$attrs","$slots","renderContent","_b","_c","_d","_e","_f","_g","rawChildren","childrenAndRawSpan","forEach","child","__GRID_ITEM__","clonedNode","privateShow","push","rawChildSpan","dirs","filter","dir","clonedChild","span","suffixSpan","maybeSuffixNode","length","suffixPropValue","suffix","privateSpan","privateColStart","spanCounter","done","childOffset","offset","childSpan","Math","min","privateOffset","remainder","map","onResize"],"sources":["E:/VCode/SHC社区管理系统/shc_community_manager_system/node_modules/naive-ui/es/grid/src/Grid.js"],"sourcesContent":["import { h, defineComponent, computed, provide, toRef, mergeProps, ref, cloneVNode, vShow, onMounted } from 'vue';\nimport { useBreakpoints, useMemo } from 'vooks';\nimport { VResizeObserver } from 'vueuc';\nimport { pxfy, parseResponsivePropValue, beforeNextFrameOnce } from 'seemly';\nimport { defaultBreakpoints } from '../../config-provider/src/config';\nimport { useConfig } from '../../_mixins';\nimport { getSlot, flatten, isBrowser, isNodeVShowFalse } from '../../_utils';\nimport { defaultSpan, gridInjectionKey } from './config';\nconst defaultCols = 24;\nconst SSR_ATTR_NAME = '__ssr__';\nexport const gridProps = {\n    layoutShiftDisabled: Boolean,\n    responsive: {\n        type: [String, Boolean],\n        default: 'self'\n    },\n    cols: {\n        type: [Number, String],\n        default: defaultCols\n    },\n    itemResponsive: Boolean,\n    collapsed: Boolean,\n    // may create grid rows < collapsedRows since a item may take all the row\n    collapsedRows: {\n        type: Number,\n        default: 1\n    },\n    itemStyle: [Object, String],\n    xGap: {\n        type: [Number, String],\n        default: 0\n    },\n    yGap: {\n        type: [Number, String],\n        default: 0\n    }\n};\nexport default defineComponent({\n    name: 'Grid',\n    inheritAttrs: false,\n    props: gridProps,\n    setup(props) {\n        const { mergedClsPrefixRef, mergedBreakpointsRef } = useConfig(props);\n        const numRegex = /^\\d+$/;\n        const widthRef = ref(undefined);\n        const breakpointsRef = useBreakpoints((mergedBreakpointsRef === null || mergedBreakpointsRef === void 0 ? void 0 : mergedBreakpointsRef.value) || defaultBreakpoints);\n        const isResponsiveRef = useMemo(() => {\n            if (props.itemResponsive)\n                return true;\n            if (!numRegex.test(props.cols.toString()))\n                return true;\n            if (!numRegex.test(props.xGap.toString()))\n                return true;\n            if (!numRegex.test(props.yGap.toString()))\n                return true;\n            return false;\n        });\n        const responsiveQueryRef = computed(() => {\n            if (!isResponsiveRef.value)\n                return undefined;\n            return props.responsive === 'self' ? widthRef.value : breakpointsRef.value;\n        });\n        const responsiveColsRef = useMemo(() => {\n            var _a;\n            return ((_a = Number(parseResponsivePropValue(props.cols.toString(), responsiveQueryRef.value))) !== null && _a !== void 0 ? _a : defaultCols);\n        });\n        const responsiveXGapRef = useMemo(() => parseResponsivePropValue(props.xGap.toString(), responsiveQueryRef.value));\n        const responsiveYGapRef = useMemo(() => parseResponsivePropValue(props.yGap.toString(), responsiveQueryRef.value));\n        const handleResize = (entry) => {\n            widthRef.value = entry.contentRect.width;\n        };\n        const handleResizeRaf = (entry) => {\n            beforeNextFrameOnce(handleResize, entry);\n        };\n        const overflowRef = ref(false);\n        const handleResizeRef = computed(() => {\n            if (props.responsive === 'self') {\n                return handleResizeRaf;\n            }\n            return undefined;\n        });\n        // for SSR, fix bug https://github.com/TuSimple/naive-ui/issues/2462\n        const isSsrRef = ref(false);\n        const contentElRef = ref();\n        onMounted(() => {\n            const { value: contentEl } = contentElRef;\n            if (contentEl) {\n                if (contentEl.hasAttribute(SSR_ATTR_NAME)) {\n                    contentEl.removeAttribute(SSR_ATTR_NAME);\n                    isSsrRef.value = true;\n                }\n            }\n        });\n        provide(gridInjectionKey, {\n            layoutShiftDisabledRef: toRef(props, 'layoutShiftDisabled'),\n            isSsrRef,\n            itemStyleRef: toRef(props, 'itemStyle'),\n            xGapRef: responsiveXGapRef,\n            overflowRef\n        });\n        return {\n            isSsr: !isBrowser,\n            contentEl: contentElRef,\n            mergedClsPrefix: mergedClsPrefixRef,\n            style: computed(() => {\n                if (props.layoutShiftDisabled) {\n                    return {\n                        width: '100%',\n                        display: 'grid',\n                        gridTemplateColumns: `repeat(${props.cols}, minmax(0, 1fr))`,\n                        columnGap: pxfy(props.xGap),\n                        rowGap: pxfy(props.yGap)\n                    };\n                }\n                return {\n                    width: '100%',\n                    display: 'grid',\n                    gridTemplateColumns: `repeat(${responsiveColsRef.value}, minmax(0, 1fr))`,\n                    columnGap: pxfy(responsiveXGapRef.value),\n                    rowGap: pxfy(responsiveYGapRef.value)\n                };\n            }),\n            isResponsive: isResponsiveRef,\n            responsiveQuery: responsiveQueryRef,\n            responsiveCols: responsiveColsRef,\n            handleResize: handleResizeRef,\n            overflow: overflowRef\n        };\n    },\n    render() {\n        if (this.layoutShiftDisabled) {\n            return h('div', mergeProps({\n                ref: 'contentEl',\n                class: `${this.mergedClsPrefix}-grid`,\n                style: this.style\n            }, this.$attrs), this.$slots);\n        }\n        const renderContent = () => {\n            var _a, _b, _c, _d, _e, _f, _g;\n            this.overflow = false;\n            // render will be called twice when mounted, I can't figure out why\n            // 2 jobs will be pushed into job queues with same id, and then be flushed\n            const rawChildren = flatten(getSlot(this));\n            const childrenAndRawSpan = [];\n            const { collapsed, collapsedRows, responsiveCols, responsiveQuery } = this;\n            rawChildren.forEach((child) => {\n                var _a, _b, _c, _d;\n                if (((_a = child === null || child === void 0 ? void 0 : child.type) === null || _a === void 0 ? void 0 : _a.__GRID_ITEM__) !== true)\n                    return;\n                if (isNodeVShowFalse(child)) {\n                    const clonedNode = cloneVNode(child);\n                    if (clonedNode.props) {\n                        clonedNode.props.privateShow = false;\n                    }\n                    else {\n                        clonedNode.props = { privateShow: false };\n                    }\n                    childrenAndRawSpan.push({\n                        child: clonedNode,\n                        rawChildSpan: 0\n                    });\n                    return;\n                }\n                // We don't want v-show to control display, so we need to stripe it\n                // here, nor it may mess child's style\n                child.dirs = ((_b = child.dirs) === null || _b === void 0 ? void 0 : _b.filter(({ dir }) => dir !== vShow)) || null;\n                const clonedChild = cloneVNode(child);\n                const rawChildSpan = Number((_d = parseResponsivePropValue((_c = clonedChild.props) === null || _c === void 0 ? void 0 : _c.span, responsiveQuery)) !== null && _d !== void 0 ? _d : defaultSpan);\n                if (rawChildSpan === 0)\n                    return;\n                childrenAndRawSpan.push({\n                    child: clonedChild,\n                    rawChildSpan\n                });\n            });\n            let suffixSpan = 0;\n            const maybeSuffixNode = (_a = childrenAndRawSpan[childrenAndRawSpan.length - 1]) === null || _a === void 0 ? void 0 : _a.child;\n            if (maybeSuffixNode === null || maybeSuffixNode === void 0 ? void 0 : maybeSuffixNode.props) {\n                const suffixPropValue = (_b = maybeSuffixNode.props) === null || _b === void 0 ? void 0 : _b.suffix;\n                if (suffixPropValue !== undefined && suffixPropValue !== false) {\n                    suffixSpan = (_d = (_c = maybeSuffixNode.props) === null || _c === void 0 ? void 0 : _c.span) !== null && _d !== void 0 ? _d : defaultSpan;\n                    maybeSuffixNode.props.privateSpan = suffixSpan;\n                    maybeSuffixNode.props.privateColStart =\n                        responsiveCols + 1 - suffixSpan;\n                    maybeSuffixNode.props.privateShow =\n                        (_e = maybeSuffixNode.props.privateShow) !== null && _e !== void 0 ? _e : true;\n                }\n            }\n            let spanCounter = 0;\n            let done = false;\n            for (const { child, rawChildSpan } of childrenAndRawSpan) {\n                if (done) {\n                    this.overflow = true;\n                }\n                if (!done) {\n                    const childOffset = Number((_g = parseResponsivePropValue((_f = child.props) === null || _f === void 0 ? void 0 : _f.offset, responsiveQuery)) !== null && _g !== void 0 ? _g : 0);\n                    // it could be 0 sometimes (v-show = false)\n                    const childSpan = Math.min(rawChildSpan + childOffset, responsiveCols);\n                    if (!child.props) {\n                        child.props = {\n                            privateSpan: childSpan,\n                            privateOffset: childOffset\n                        };\n                    }\n                    else {\n                        child.props.privateSpan = childSpan;\n                        child.props.privateOffset = childOffset;\n                    }\n                    if (collapsed) {\n                        const remainder = spanCounter % responsiveCols;\n                        if (childSpan + remainder > responsiveCols) {\n                            spanCounter += responsiveCols - remainder;\n                        }\n                        if (childSpan + spanCounter + suffixSpan >\n                            collapsedRows * responsiveCols) {\n                            done = true;\n                        }\n                        else {\n                            spanCounter += childSpan;\n                        }\n                    }\n                }\n                if (done) {\n                    if (child.props) {\n                        // suffix node's privateShow may be true\n                        if (child.props.privateShow !== true) {\n                            child.props.privateShow = false;\n                        }\n                    }\n                    else {\n                        child.props = {\n                            privateShow: false\n                        };\n                    }\n                }\n            }\n            return h('div', mergeProps({\n                ref: 'contentEl',\n                class: `${this.mergedClsPrefix}-grid`,\n                style: this.style,\n                [SSR_ATTR_NAME]: this.isSsr || undefined\n            }, this.$attrs), childrenAndRawSpan.map(({ child }) => child));\n        };\n        return this.isResponsive && this.responsive === 'self' ? (h(VResizeObserver, { onResize: this.handleResize }, {\n            default: renderContent\n        })) : (renderContent());\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}