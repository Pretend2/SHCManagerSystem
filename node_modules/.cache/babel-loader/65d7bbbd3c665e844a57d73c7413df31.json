{"ast":null,"code":"import { defineComponent, computed, onMounted, ref, watchEffect } from 'vue';\nimport { round } from 'lodash-es';\nimport { tween } from './utils';\nimport { useLocale } from '../../_mixins';\nexport const numberAnimationProps = {\n  to: {\n    type: Number,\n    default: 0\n  },\n  precision: {\n    type: Number,\n    default: 0\n  },\n  showSeparator: Boolean,\n  locale: String,\n  from: {\n    type: Number,\n    default: 0\n  },\n  active: {\n    type: Boolean,\n    default: true\n  },\n  duration: {\n    type: Number,\n    default: 2000\n  },\n  onFinish: Function\n};\nexport default defineComponent({\n  name: 'NumberAnimation',\n  props: numberAnimationProps,\n\n  setup(props) {\n    const {\n      localeRef\n    } = useLocale('name');\n    const {\n      duration\n    } = props;\n    const displayedValueRef = ref(props.from);\n    const mergedLocaleRef = computed(() => {\n      const {\n        locale\n      } = props;\n      if (locale !== undefined) return locale;\n      return localeRef.value;\n    });\n    let animating = false;\n\n    const onUpdate = currentValue => {\n      displayedValueRef.value = currentValue;\n    };\n\n    const onFinish = () => {\n      var _a;\n\n      displayedValueRef.value = props.to;\n      animating = false;\n      (_a = props.onFinish) === null || _a === void 0 ? void 0 : _a.call(props);\n    };\n\n    const animate = (from = props.from, to = props.to) => {\n      animating = true;\n      displayedValueRef.value = props.from;\n\n      if (from !== to) {\n        tween({\n          from,\n          to,\n          duration,\n          onUpdate,\n          onFinish\n        });\n      }\n    };\n\n    const formattedValueRef = computed(() => {\n      var _a;\n\n      const formatted = round(displayedValueRef.value, props.precision).toFixed(props.precision);\n      const splitValue = formatted.split('.');\n      const numberFormatter = new Intl.NumberFormat(mergedLocaleRef.value);\n      const decimalSeparator = (_a = numberFormatter.formatToParts(0.5).find(part => part.type === 'decimal')) === null || _a === void 0 ? void 0 : _a.value;\n      const integer = props.showSeparator ? numberFormatter.format(Number(splitValue[0])) : splitValue[0];\n      const decimal = splitValue[1];\n      return {\n        integer,\n        decimal,\n        decimalSeparator\n      };\n    });\n\n    function play() {\n      if (animating) return;\n      animate();\n    }\n\n    onMounted(() => {\n      watchEffect(() => {\n        if (props.active) animate();\n      });\n    });\n    const exposedMethods = {\n      play\n    };\n    return Object.assign({\n      formattedValue: formattedValueRef\n    }, exposedMethods);\n  },\n\n  render() {\n    const {\n      formattedValue: {\n        integer,\n        decimal,\n        decimalSeparator\n      }\n    } = this;\n    return [integer, decimal ? decimalSeparator : null, decimal];\n  }\n\n});","map":{"version":3,"names":["defineComponent","computed","onMounted","ref","watchEffect","round","tween","useLocale","numberAnimationProps","to","type","Number","default","precision","showSeparator","Boolean","locale","String","from","active","duration","onFinish","Function","name","props","setup","localeRef","displayedValueRef","mergedLocaleRef","undefined","value","animating","onUpdate","currentValue","_a","call","animate","formattedValueRef","formatted","toFixed","splitValue","split","numberFormatter","Intl","NumberFormat","decimalSeparator","formatToParts","find","part","integer","format","decimal","play","exposedMethods","Object","assign","formattedValue","render"],"sources":["D:/VCode/SHC社区管理系统/shc_community_manager_system/node_modules/naive-ui/es/number-animation/src/NumberAnimation.js"],"sourcesContent":["import { defineComponent, computed, onMounted, ref, watchEffect } from 'vue';\nimport { round } from 'lodash-es';\nimport { tween } from './utils';\nimport { useLocale } from '../../_mixins';\nexport const numberAnimationProps = {\n    to: {\n        type: Number,\n        default: 0\n    },\n    precision: {\n        type: Number,\n        default: 0\n    },\n    showSeparator: Boolean,\n    locale: String,\n    from: { type: Number, default: 0 },\n    active: {\n        type: Boolean,\n        default: true\n    },\n    duration: {\n        type: Number,\n        default: 2000\n    },\n    onFinish: Function\n};\nexport default defineComponent({\n    name: 'NumberAnimation',\n    props: numberAnimationProps,\n    setup(props) {\n        const { localeRef } = useLocale('name');\n        const { duration } = props;\n        const displayedValueRef = ref(props.from);\n        const mergedLocaleRef = computed(() => {\n            const { locale } = props;\n            if (locale !== undefined)\n                return locale;\n            return localeRef.value;\n        });\n        let animating = false;\n        const onUpdate = (currentValue) => {\n            displayedValueRef.value = currentValue;\n        };\n        const onFinish = () => {\n            var _a;\n            displayedValueRef.value = props.to;\n            animating = false;\n            (_a = props.onFinish) === null || _a === void 0 ? void 0 : _a.call(props);\n        };\n        const animate = (from = props.from, to = props.to) => {\n            animating = true;\n            displayedValueRef.value = props.from;\n            if (from !== to) {\n                tween({\n                    from,\n                    to,\n                    duration,\n                    onUpdate,\n                    onFinish\n                });\n            }\n        };\n        const formattedValueRef = computed(() => {\n            var _a;\n            const formatted = round(displayedValueRef.value, props.precision).toFixed(props.precision);\n            const splitValue = formatted.split('.');\n            const numberFormatter = new Intl.NumberFormat(mergedLocaleRef.value);\n            const decimalSeparator = (_a = numberFormatter\n                .formatToParts(0.5)\n                .find((part) => part.type === 'decimal')) === null || _a === void 0 ? void 0 : _a.value;\n            const integer = props.showSeparator\n                ? numberFormatter.format(Number(splitValue[0]))\n                : splitValue[0];\n            const decimal = splitValue[1];\n            return {\n                integer,\n                decimal,\n                decimalSeparator\n            };\n        });\n        function play() {\n            if (animating)\n                return;\n            animate();\n        }\n        onMounted(() => {\n            watchEffect(() => {\n                if (props.active)\n                    animate();\n            });\n        });\n        const exposedMethods = { play };\n        return Object.assign({ formattedValue: formattedValueRef }, exposedMethods);\n    },\n    render() {\n        const { formattedValue: { integer, decimal, decimalSeparator } } = this;\n        return [integer, decimal ? decimalSeparator : null, decimal];\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}