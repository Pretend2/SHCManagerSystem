{"ast":null,"code":"import { h, defineComponent, inject } from 'vue';\nimport { NButton } from '../../button';\nimport { useLocale } from '../../_mixins';\nimport { transferInjectionKey } from './interface';\nexport default defineComponent({\n  name: 'TransferHeader',\n  props: {\n    size: {\n      type: String,\n      required: true\n    },\n    source: Boolean,\n    onCheckedAll: Function,\n    onClearAll: Function,\n    title: String\n  },\n\n  setup(props) {\n    const {\n      targetOptionsRef,\n      canNotSelectAnythingRef,\n      canBeClearedRef,\n      allCheckedRef,\n      mergedThemeRef,\n      disabledRef,\n      mergedClsPrefixRef,\n      srcOptionsLengthRef // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    } = inject(transferInjectionKey);\n    const {\n      localeRef\n    } = useLocale('Transfer');\n    return () => {\n      const {\n        source,\n        onClearAll,\n        onCheckedAll\n      } = props;\n      const {\n        value: mergedTheme\n      } = mergedThemeRef;\n      const {\n        value: mergedClsPrefix\n      } = mergedClsPrefixRef;\n      const {\n        value: locale\n      } = localeRef;\n      const buttonSize = props.size === 'large' ? 'small' : 'tiny';\n      const {\n        title\n      } = props;\n      return h(\"div\", {\n        class: `${mergedClsPrefix}-transfer-list-header`\n      }, title && h(\"div\", {\n        class: `${mergedClsPrefix}-transfer-list-header__title`\n      }, title), source && h(NButton, {\n        class: `${mergedClsPrefix}-transfer-list-header__button`,\n        theme: mergedTheme.peers.Button,\n        themeOverrides: mergedTheme.peerOverrides.Button,\n        size: buttonSize,\n        tertiary: true,\n        onClick: allCheckedRef.value ? onClearAll : onCheckedAll,\n        disabled: canNotSelectAnythingRef.value || disabledRef.value\n      }, {\n        default: () => allCheckedRef.value ? locale.unselectAll : locale.selectAll\n      }), !source && canBeClearedRef.value && h(NButton, {\n        class: `${mergedClsPrefix}-transfer-list-header__button`,\n        theme: mergedTheme.peers.Button,\n        themeOverrides: mergedTheme.peerOverrides.Button,\n        size: buttonSize,\n        tertiary: true,\n        onClick: onClearAll,\n        disabled: disabledRef.value\n      }, {\n        default: () => locale.clearAll\n      }), h(\"div\", {\n        class: `${mergedClsPrefix}-transfer-list-header__extra`\n      }, source ? locale.total(srcOptionsLengthRef.value) : locale.selected(targetOptionsRef.value.length)));\n    };\n  }\n\n});","map":{"version":3,"names":["h","defineComponent","inject","NButton","useLocale","transferInjectionKey","name","props","size","type","String","required","source","Boolean","onCheckedAll","Function","onClearAll","title","setup","targetOptionsRef","canNotSelectAnythingRef","canBeClearedRef","allCheckedRef","mergedThemeRef","disabledRef","mergedClsPrefixRef","srcOptionsLengthRef","localeRef","value","mergedTheme","mergedClsPrefix","locale","buttonSize","class","theme","peers","Button","themeOverrides","peerOverrides","tertiary","onClick","disabled","default","unselectAll","selectAll","clearAll","total","selected","length"],"sources":["E:/VCode/SHC社区管理系统/shc_community_manager_system/node_modules/naive-ui/es/transfer/src/TransferHeader.js"],"sourcesContent":["import { h, defineComponent, inject } from 'vue';\nimport { NButton } from '../../button';\nimport { useLocale } from '../../_mixins';\nimport { transferInjectionKey } from './interface';\nexport default defineComponent({\n    name: 'TransferHeader',\n    props: {\n        size: {\n            type: String,\n            required: true\n        },\n        source: Boolean,\n        onCheckedAll: Function,\n        onClearAll: Function,\n        title: String\n    },\n    setup(props) {\n        const { targetOptionsRef, canNotSelectAnythingRef, canBeClearedRef, allCheckedRef, mergedThemeRef, disabledRef, mergedClsPrefixRef, srcOptionsLengthRef\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n         } = inject(transferInjectionKey);\n        const { localeRef } = useLocale('Transfer');\n        return () => {\n            const { source, onClearAll, onCheckedAll } = props;\n            const { value: mergedTheme } = mergedThemeRef;\n            const { value: mergedClsPrefix } = mergedClsPrefixRef;\n            const { value: locale } = localeRef;\n            const buttonSize = props.size === 'large' ? 'small' : 'tiny';\n            const { title } = props;\n            return (h(\"div\", { class: `${mergedClsPrefix}-transfer-list-header` },\n                title && (h(\"div\", { class: `${mergedClsPrefix}-transfer-list-header__title` }, title)),\n                source && (h(NButton, { class: `${mergedClsPrefix}-transfer-list-header__button`, theme: mergedTheme.peers.Button, themeOverrides: mergedTheme.peerOverrides.Button, size: buttonSize, tertiary: true, onClick: allCheckedRef.value ? onClearAll : onCheckedAll, disabled: canNotSelectAnythingRef.value || disabledRef.value }, {\n                    default: () => allCheckedRef.value ? locale.unselectAll : locale.selectAll\n                })),\n                !source && canBeClearedRef.value && (h(NButton, { class: `${mergedClsPrefix}-transfer-list-header__button`, theme: mergedTheme.peers.Button, themeOverrides: mergedTheme.peerOverrides.Button, size: buttonSize, tertiary: true, onClick: onClearAll, disabled: disabledRef.value }, {\n                    default: () => locale.clearAll\n                })),\n                h(\"div\", { class: `${mergedClsPrefix}-transfer-list-header__extra` }, source\n                    ? locale.total(srcOptionsLengthRef.value)\n                    : locale.selected(targetOptionsRef.value.length))));\n        };\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}