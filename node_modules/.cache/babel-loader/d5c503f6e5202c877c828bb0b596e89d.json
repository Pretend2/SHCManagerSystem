{"ast":null,"code":"import { h, ref, defineComponent, computed, onMounted, onBeforeUnmount, mergeProps, Transition, watchEffect, Fragment } from 'vue';\nimport { on, off } from 'evtd';\nimport { VResizeObserver } from 'vueuc';\nimport { useIsIos } from 'vooks';\nimport { getPreciseEventTarget } from 'seemly';\nimport { useConfig, useTheme, useThemeClass, useRtl } from '../../../_mixins';\nimport { useReactivated, Wrapper } from '../../../_utils';\nimport { scrollbarLight } from '../styles';\nimport style from './styles/index.cssr';\nconst scrollbarProps = Object.assign(Object.assign({}, useTheme.props), {\n  size: {\n    type: Number,\n    default: 5\n  },\n  duration: {\n    type: Number,\n    default: 0\n  },\n  scrollable: {\n    type: Boolean,\n    default: true\n  },\n  xScrollable: Boolean,\n  trigger: {\n    type: String,\n    default: 'hover'\n  },\n  useUnifiedContainer: Boolean,\n  triggerDisplayManually: Boolean,\n  // If container is set, resize observer won't not attached\n  container: Function,\n  content: Function,\n  containerClass: String,\n  containerStyle: [String, Object],\n  contentClass: String,\n  contentStyle: [String, Object],\n  horizontalRailStyle: [String, Object],\n  verticalRailStyle: [String, Object],\n  onScroll: Function,\n  onWheel: Function,\n  onResize: Function,\n  internalOnUpdateScrollLeft: Function,\n  internalHoistYRail: Boolean\n});\nconst Scrollbar = defineComponent({\n  name: 'Scrollbar',\n  props: scrollbarProps,\n  inheritAttrs: false,\n\n  setup(props) {\n    const {\n      mergedClsPrefixRef,\n      inlineThemeDisabled,\n      mergedRtlRef\n    } = useConfig(props);\n    const rtlEnabledRef = useRtl('Scrollbar', mergedRtlRef, mergedClsPrefixRef); // dom ref\n\n    const wrapperRef = ref(null);\n    const containerRef = ref(null);\n    const contentRef = ref(null);\n    const yRailRef = ref(null);\n    const xRailRef = ref(null); // data ref\n\n    const contentHeightRef = ref(null);\n    const contentWidthRef = ref(null);\n    const containerHeightRef = ref(null);\n    const containerWidthRef = ref(null);\n    const yRailSizeRef = ref(null);\n    const xRailSizeRef = ref(null);\n    const containerScrollTopRef = ref(0);\n    const containerScrollLeftRef = ref(0);\n    const isShowXBarRef = ref(false);\n    const isShowYBarRef = ref(false);\n    let yBarPressed = false;\n    let xBarPressed = false;\n    let xBarVanishTimerId;\n    let yBarVanishTimerId;\n    let memoYTop = 0;\n    let memoXLeft = 0;\n    let memoMouseX = 0;\n    let memoMouseY = 0;\n    const isIos = useIsIos();\n    const yBarSizeRef = computed(() => {\n      const {\n        value: containerHeight\n      } = containerHeightRef;\n      const {\n        value: contentHeight\n      } = contentHeightRef;\n      const {\n        value: yRailSize\n      } = yRailSizeRef;\n\n      if (containerHeight === null || contentHeight === null || yRailSize === null) {\n        return 0;\n      } else {\n        return Math.min(containerHeight, yRailSize * containerHeight / contentHeight + props.size * 1.5);\n      }\n    });\n    const yBarSizePxRef = computed(() => {\n      return `${yBarSizeRef.value}px`;\n    });\n    const xBarSizeRef = computed(() => {\n      const {\n        value: containerWidth\n      } = containerWidthRef;\n      const {\n        value: contentWidth\n      } = contentWidthRef;\n      const {\n        value: xRailSize\n      } = xRailSizeRef;\n\n      if (containerWidth === null || contentWidth === null || xRailSize === null) {\n        return 0;\n      } else {\n        return xRailSize * containerWidth / contentWidth + props.size * 1.5;\n      }\n    });\n    const xBarSizePxRef = computed(() => {\n      return `${xBarSizeRef.value}px`;\n    });\n    const yBarTopRef = computed(() => {\n      const {\n        value: containerHeight\n      } = containerHeightRef;\n      const {\n        value: containerScrollTop\n      } = containerScrollTopRef;\n      const {\n        value: contentHeight\n      } = contentHeightRef;\n      const {\n        value: yRailSize\n      } = yRailSizeRef;\n\n      if (containerHeight === null || contentHeight === null || yRailSize === null) {\n        return 0;\n      } else {\n        const heightDiff = contentHeight - containerHeight;\n        if (!heightDiff) return 0;\n        return containerScrollTop / heightDiff * (yRailSize - yBarSizeRef.value);\n      }\n    });\n    const yBarTopPxRef = computed(() => {\n      return `${yBarTopRef.value}px`;\n    });\n    const xBarLeftRef = computed(() => {\n      const {\n        value: containerWidth\n      } = containerWidthRef;\n      const {\n        value: containerScrollLeft\n      } = containerScrollLeftRef;\n      const {\n        value: contentWidth\n      } = contentWidthRef;\n      const {\n        value: xRailSize\n      } = xRailSizeRef;\n\n      if (containerWidth === null || contentWidth === null || xRailSize === null) {\n        return 0;\n      } else {\n        const widthDiff = contentWidth - containerWidth;\n        if (!widthDiff) return 0;\n        return containerScrollLeft / widthDiff * (xRailSize - xBarSizeRef.value);\n      }\n    });\n    const xBarLeftPxRef = computed(() => {\n      return `${xBarLeftRef.value}px`;\n    });\n    const needYBarRef = computed(() => {\n      const {\n        value: containerHeight\n      } = containerHeightRef;\n      const {\n        value: contentHeight\n      } = contentHeightRef;\n      return containerHeight !== null && contentHeight !== null && contentHeight > containerHeight;\n    });\n    const needXBarRef = computed(() => {\n      const {\n        value: containerWidth\n      } = containerWidthRef;\n      const {\n        value: contentWidth\n      } = contentWidthRef;\n      return containerWidth !== null && contentWidth !== null && contentWidth > containerWidth;\n    });\n    const mergedShowXBarRef = computed(() => {\n      const {\n        trigger\n      } = props;\n      return trigger === 'none' || isShowXBarRef.value;\n    });\n    const mergedShowYBarRef = computed(() => {\n      const {\n        trigger\n      } = props;\n      return trigger === 'none' || isShowYBarRef.value;\n    });\n    const mergedContainerRef = computed(() => {\n      const {\n        container\n      } = props;\n      if (container) return container();\n      return containerRef.value;\n    });\n    const mergedContentRef = computed(() => {\n      const {\n        content\n      } = props;\n      if (content) return content();\n      return contentRef.value;\n    });\n    const activateState = useReactivated(() => {\n      // Only restore for builtin container & content\n      if (!props.container) {\n        // remount\n        scrollTo({\n          top: containerScrollTopRef.value,\n          left: containerScrollLeftRef.value\n        });\n      }\n    }); // methods\n\n    const handleContentResize = () => {\n      if (activateState.isDeactivated) return;\n      sync();\n    };\n\n    const handleContainerResize = e => {\n      if (activateState.isDeactivated) return;\n      const {\n        onResize\n      } = props;\n      if (onResize) onResize(e);\n      sync();\n    };\n\n    const scrollTo = (options, y) => {\n      if (!props.scrollable) return;\n\n      if (typeof options === 'number') {\n        scrollToPosition(y !== null && y !== void 0 ? y : 0, options, 0, false, 'auto');\n        return;\n      }\n\n      const {\n        left,\n        top,\n        index,\n        elSize,\n        position,\n        behavior,\n        el,\n        debounce = true\n      } = options;\n\n      if (left !== undefined || top !== undefined) {\n        scrollToPosition(left !== null && left !== void 0 ? left : 0, top !== null && top !== void 0 ? top : 0, 0, false, behavior);\n      }\n\n      if (el !== undefined) {\n        scrollToPosition(0, el.offsetTop, el.offsetHeight, debounce, behavior);\n      } else if (index !== undefined && elSize !== undefined) {\n        scrollToPosition(0, index * elSize, elSize, debounce, behavior);\n      } else if (position === 'bottom') {\n        scrollToPosition(0, Number.MAX_SAFE_INTEGER, 0, false, behavior);\n      } else if (position === 'top') {\n        scrollToPosition(0, 0, 0, false, behavior);\n      }\n    };\n\n    const scrollBy = (options, y) => {\n      if (!props.scrollable) return;\n      const {\n        value: container\n      } = mergedContainerRef;\n      if (!container) return;\n\n      if (typeof options === 'object') {\n        container.scrollBy(options);\n      } else {\n        container.scrollBy(options, y || 0);\n      }\n    };\n\n    function scrollToPosition(left, top, elSize, debounce, behavior) {\n      const {\n        value: container\n      } = mergedContainerRef;\n      if (!container) return;\n\n      if (debounce) {\n        const {\n          scrollTop,\n          offsetHeight\n        } = container;\n\n        if (top > scrollTop) {\n          if (top + elSize <= scrollTop + offsetHeight) {// do nothing\n          } else {\n            container.scrollTo({\n              left,\n              top: top + elSize - offsetHeight,\n              behavior\n            });\n          }\n\n          return;\n        }\n      }\n\n      container.scrollTo({\n        left,\n        top,\n        behavior\n      });\n    }\n\n    function handleMouseEnterWrapper() {\n      showXBar();\n      showYBar();\n      sync();\n    }\n\n    function handleMouseLeaveWrapper() {\n      hideBar();\n    }\n\n    function hideBar() {\n      hideYBar();\n      hideXBar();\n    }\n\n    function hideYBar() {\n      if (yBarVanishTimerId !== undefined) {\n        window.clearTimeout(yBarVanishTimerId);\n      }\n\n      yBarVanishTimerId = window.setTimeout(() => {\n        isShowYBarRef.value = false;\n      }, props.duration);\n    }\n\n    function hideXBar() {\n      if (xBarVanishTimerId !== undefined) {\n        window.clearTimeout(xBarVanishTimerId);\n      }\n\n      xBarVanishTimerId = window.setTimeout(() => {\n        isShowXBarRef.value = false;\n      }, props.duration);\n    }\n\n    function showXBar() {\n      if (xBarVanishTimerId !== undefined) {\n        window.clearTimeout(xBarVanishTimerId);\n      }\n\n      isShowXBarRef.value = true;\n    }\n\n    function showYBar() {\n      if (yBarVanishTimerId !== undefined) {\n        window.clearTimeout(yBarVanishTimerId);\n      }\n\n      isShowYBarRef.value = true;\n    }\n\n    function handleScroll(e) {\n      const {\n        onScroll\n      } = props;\n      if (onScroll) onScroll(e);\n      syncScrollState();\n    }\n\n    function syncScrollState() {\n      // only collect scroll state, do not trigger any dom event\n      const {\n        value: container\n      } = mergedContainerRef;\n\n      if (container) {\n        containerScrollTopRef.value = container.scrollTop;\n        containerScrollLeftRef.value = container.scrollLeft * ((rtlEnabledRef === null || rtlEnabledRef === void 0 ? void 0 : rtlEnabledRef.value) ? -1 : 1);\n      }\n    }\n\n    function syncPositionState() {\n      // only collect position state, do not trigger any dom event\n      // Don't use getClientBoundingRect because element may be scale transformed\n      const {\n        value: content\n      } = mergedContentRef;\n\n      if (content) {\n        contentHeightRef.value = content.offsetHeight;\n        contentWidthRef.value = content.offsetWidth;\n      }\n\n      const {\n        value: container\n      } = mergedContainerRef;\n\n      if (container) {\n        containerHeightRef.value = container.offsetHeight;\n        containerWidthRef.value = container.offsetWidth;\n      }\n\n      const {\n        value: xRailEl\n      } = xRailRef;\n      const {\n        value: yRailEl\n      } = yRailRef;\n\n      if (xRailEl) {\n        xRailSizeRef.value = xRailEl.offsetWidth;\n      }\n\n      if (yRailEl) {\n        yRailSizeRef.value = yRailEl.offsetHeight;\n      }\n    }\n    /**\n     * Sometimes there's only one element that we can scroll,\n     * For example for textarea, there won't be a content element.\n     */\n\n\n    function syncUnifiedContainer() {\n      const {\n        value: container\n      } = mergedContainerRef;\n\n      if (container) {\n        containerScrollTopRef.value = container.scrollTop;\n        containerScrollLeftRef.value = container.scrollLeft * ((rtlEnabledRef === null || rtlEnabledRef === void 0 ? void 0 : rtlEnabledRef.value) ? -1 : 1);\n        containerHeightRef.value = container.offsetHeight;\n        containerWidthRef.value = container.offsetWidth;\n        contentHeightRef.value = container.scrollHeight;\n        contentWidthRef.value = container.scrollWidth;\n      }\n\n      const {\n        value: xRailEl\n      } = xRailRef;\n      const {\n        value: yRailEl\n      } = yRailRef;\n\n      if (xRailEl) {\n        xRailSizeRef.value = xRailEl.offsetWidth;\n      }\n\n      if (yRailEl) {\n        yRailSizeRef.value = yRailEl.offsetHeight;\n      }\n    }\n\n    function sync() {\n      if (!props.scrollable) return;\n\n      if (props.useUnifiedContainer) {\n        syncUnifiedContainer();\n      } else {\n        syncPositionState();\n        syncScrollState();\n      }\n    }\n\n    function isMouseUpAway(e) {\n      var _a;\n\n      return !((_a = wrapperRef.value) === null || _a === void 0 ? void 0 : _a.contains(getPreciseEventTarget(e)));\n    }\n\n    function handleXScrollMouseDown(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      xBarPressed = true;\n      on('mousemove', window, handleXScrollMouseMove, true);\n      on('mouseup', window, handleXScrollMouseUp, true);\n      memoXLeft = containerScrollLeftRef.value;\n      memoMouseX = (rtlEnabledRef === null || rtlEnabledRef === void 0 ? void 0 : rtlEnabledRef.value) ? window.innerWidth - e.clientX : e.clientX;\n    }\n\n    function handleXScrollMouseMove(e) {\n      if (!xBarPressed) return;\n\n      if (xBarVanishTimerId !== undefined) {\n        window.clearTimeout(xBarVanishTimerId);\n      }\n\n      if (yBarVanishTimerId !== undefined) {\n        window.clearTimeout(yBarVanishTimerId);\n      }\n\n      const {\n        value: containerWidth\n      } = containerWidthRef;\n      const {\n        value: contentWidth\n      } = contentWidthRef;\n      const {\n        value: xBarSize\n      } = xBarSizeRef;\n      if (containerWidth === null || contentWidth === null) return;\n      const dX = (rtlEnabledRef === null || rtlEnabledRef === void 0 ? void 0 : rtlEnabledRef.value) ? window.innerWidth - e.clientX - memoMouseX : e.clientX - memoMouseX;\n      const dScrollLeft = dX * (contentWidth - containerWidth) / (containerWidth - xBarSize);\n      const toScrollLeftUpperBound = contentWidth - containerWidth;\n      let toScrollLeft = memoXLeft + dScrollLeft;\n      toScrollLeft = Math.min(toScrollLeftUpperBound, toScrollLeft);\n      toScrollLeft = Math.max(toScrollLeft, 0);\n      const {\n        value: container\n      } = mergedContainerRef;\n\n      if (container) {\n        container.scrollLeft = toScrollLeft * ((rtlEnabledRef === null || rtlEnabledRef === void 0 ? void 0 : rtlEnabledRef.value) ? -1 : 1);\n        const {\n          internalOnUpdateScrollLeft\n        } = props;\n        if (internalOnUpdateScrollLeft) internalOnUpdateScrollLeft(toScrollLeft);\n      }\n    }\n\n    function handleXScrollMouseUp(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      off('mousemove', window, handleXScrollMouseMove, true);\n      off('mouseup', window, handleXScrollMouseUp, true);\n      xBarPressed = false;\n      sync();\n\n      if (isMouseUpAway(e)) {\n        hideBar();\n      }\n    }\n\n    function handleYScrollMouseDown(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      yBarPressed = true;\n      on('mousemove', window, handleYScrollMouseMove, true);\n      on('mouseup', window, handleYScrollMouseUp, true);\n      memoYTop = containerScrollTopRef.value;\n      memoMouseY = e.clientY;\n    }\n\n    function handleYScrollMouseMove(e) {\n      if (!yBarPressed) return;\n\n      if (xBarVanishTimerId !== undefined) {\n        window.clearTimeout(xBarVanishTimerId);\n      }\n\n      if (yBarVanishTimerId !== undefined) {\n        window.clearTimeout(yBarVanishTimerId);\n      }\n\n      const {\n        value: containerHeight\n      } = containerHeightRef;\n      const {\n        value: contentHeight\n      } = contentHeightRef;\n      const {\n        value: yBarSize\n      } = yBarSizeRef;\n      if (containerHeight === null || contentHeight === null) return;\n      const dY = e.clientY - memoMouseY;\n      const dScrollTop = dY * (contentHeight - containerHeight) / (containerHeight - yBarSize);\n      const toScrollTopUpperBound = contentHeight - containerHeight;\n      let toScrollTop = memoYTop + dScrollTop;\n      toScrollTop = Math.min(toScrollTopUpperBound, toScrollTop);\n      toScrollTop = Math.max(toScrollTop, 0);\n      const {\n        value: container\n      } = mergedContainerRef;\n\n      if (container) {\n        container.scrollTop = toScrollTop;\n      }\n    }\n\n    function handleYScrollMouseUp(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      off('mousemove', window, handleYScrollMouseMove, true);\n      off('mouseup', window, handleYScrollMouseUp, true);\n      yBarPressed = false;\n      sync();\n\n      if (isMouseUpAway(e)) {\n        hideBar();\n      }\n    }\n\n    watchEffect(() => {\n      const {\n        value: needXBar\n      } = needXBarRef;\n      const {\n        value: needYBar\n      } = needYBarRef;\n      const {\n        value: mergedClsPrefix\n      } = mergedClsPrefixRef;\n      const {\n        value: xRailEl\n      } = xRailRef;\n      const {\n        value: yRailEl\n      } = yRailRef;\n\n      if (xRailEl) {\n        if (!needXBar) {\n          xRailEl.classList.add(`${mergedClsPrefix}-scrollbar-rail--disabled`);\n        } else {\n          xRailEl.classList.remove(`${mergedClsPrefix}-scrollbar-rail--disabled`);\n        }\n      }\n\n      if (yRailEl) {\n        if (!needYBar) {\n          yRailEl.classList.add(`${mergedClsPrefix}-scrollbar-rail--disabled`);\n        } else {\n          yRailEl.classList.remove(`${mergedClsPrefix}-scrollbar-rail--disabled`);\n        }\n      }\n    });\n    onMounted(() => {\n      // if container exist, it always can't be resolved when scrollbar is mounted\n      // for example:\n      // - component\n      //   - scrollbar\n      //     - inner\n      // if you pass inner to scrollbar, you may use a ref inside component\n      // however, when scrollbar is mounted, ref is not ready at component\n      // you need to init by yourself\n      if (props.container) return;\n      sync();\n    });\n    onBeforeUnmount(() => {\n      if (xBarVanishTimerId !== undefined) {\n        window.clearTimeout(xBarVanishTimerId);\n      }\n\n      if (yBarVanishTimerId !== undefined) {\n        window.clearTimeout(yBarVanishTimerId);\n      }\n\n      off('mousemove', window, handleYScrollMouseMove, true);\n      off('mouseup', window, handleYScrollMouseUp, true);\n    });\n    const themeRef = useTheme('Scrollbar', '-scrollbar', style, scrollbarLight, props, mergedClsPrefixRef);\n    const cssVarsRef = computed(() => {\n      const {\n        common: {\n          cubicBezierEaseInOut,\n          scrollbarBorderRadius,\n          scrollbarHeight,\n          scrollbarWidth\n        },\n        self: {\n          color,\n          colorHover\n        }\n      } = themeRef.value;\n      return {\n        '--n-scrollbar-bezier': cubicBezierEaseInOut,\n        '--n-scrollbar-color': color,\n        '--n-scrollbar-color-hover': colorHover,\n        '--n-scrollbar-border-radius': scrollbarBorderRadius,\n        '--n-scrollbar-width': scrollbarWidth,\n        '--n-scrollbar-height': scrollbarHeight\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('scrollbar', undefined, cssVarsRef, props) : undefined;\n    const exposedMethods = {\n      scrollTo,\n      scrollBy,\n      sync,\n      syncUnifiedContainer,\n      handleMouseEnterWrapper,\n      handleMouseLeaveWrapper\n    };\n    return Object.assign(Object.assign({}, exposedMethods), {\n      mergedClsPrefix: mergedClsPrefixRef,\n      rtlEnabled: rtlEnabledRef,\n      containerScrollTop: containerScrollTopRef,\n      wrapperRef,\n      containerRef,\n      contentRef,\n      yRailRef,\n      xRailRef,\n      needYBar: needYBarRef,\n      needXBar: needXBarRef,\n      yBarSizePx: yBarSizePxRef,\n      xBarSizePx: xBarSizePxRef,\n      yBarTopPx: yBarTopPxRef,\n      xBarLeftPx: xBarLeftPxRef,\n      isShowXBar: mergedShowXBarRef,\n      isShowYBar: mergedShowYBarRef,\n      isIos,\n      handleScroll,\n      handleContentResize,\n      handleContainerResize,\n      handleYScrollMouseDown,\n      handleXScrollMouseDown,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    });\n  },\n\n  render() {\n    var _a;\n\n    const {\n      $slots,\n      mergedClsPrefix,\n      triggerDisplayManually,\n      rtlEnabled,\n      internalHoistYRail\n    } = this;\n    if (!this.scrollable) return (_a = $slots.default) === null || _a === void 0 ? void 0 : _a.call($slots);\n    const triggerIsNone = this.trigger === 'none';\n\n    const createYRail = () => {\n      return h(\"div\", {\n        ref: \"yRailRef\",\n        class: [`${mergedClsPrefix}-scrollbar-rail`, `${mergedClsPrefix}-scrollbar-rail--vertical`],\n        \"data-scrollbar-rail\": true,\n        style: this.verticalRailStyle,\n        \"aria-hidden\": true\n      }, h(triggerIsNone ? Wrapper : Transition, triggerIsNone ? null : {\n        name: 'fade-in-transition'\n      }, {\n        default: () => this.needYBar && this.isShowYBar && !this.isIos ? h(\"div\", {\n          class: `${mergedClsPrefix}-scrollbar-rail__scrollbar`,\n          style: {\n            height: this.yBarSizePx,\n            top: this.yBarTopPx\n          },\n          onMousedown: this.handleYScrollMouseDown\n        }) : null\n      }));\n    };\n\n    const createChildren = () => {\n      var _a, _b;\n\n      (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n      return h('div', mergeProps(this.$attrs, {\n        role: 'none',\n        ref: 'wrapperRef',\n        class: [`${mergedClsPrefix}-scrollbar`, this.themeClass, rtlEnabled && `${mergedClsPrefix}-scrollbar--rtl`],\n        style: this.cssVars,\n        onMouseenter: triggerDisplayManually ? undefined : this.handleMouseEnterWrapper,\n        onMouseleave: triggerDisplayManually ? undefined : this.handleMouseLeaveWrapper\n      }), [this.container ? (_b = $slots.default) === null || _b === void 0 ? void 0 : _b.call($slots) : h(\"div\", {\n        role: \"none\",\n        ref: \"containerRef\",\n        class: [`${mergedClsPrefix}-scrollbar-container`, this.containerClass],\n        style: this.containerStyle,\n        onScroll: this.handleScroll,\n        onWheel: this.onWheel\n      }, h(VResizeObserver, {\n        onResize: this.handleContentResize\n      }, {\n        default: () => h(\"div\", {\n          ref: \"contentRef\",\n          role: \"none\",\n          style: [{\n            width: this.xScrollable ? 'fit-content' : null\n          }, this.contentStyle],\n          class: [`${mergedClsPrefix}-scrollbar-content`, this.contentClass]\n        }, $slots)\n      })), internalHoistYRail ? null : createYRail(), this.xScrollable && h(\"div\", {\n        ref: \"xRailRef\",\n        class: [`${mergedClsPrefix}-scrollbar-rail`, `${mergedClsPrefix}-scrollbar-rail--horizontal`],\n        style: this.horizontalRailStyle,\n        \"data-scrollbar-rail\": true,\n        \"aria-hidden\": true\n      }, h(triggerIsNone ? Wrapper : Transition, triggerIsNone ? null : {\n        name: 'fade-in-transition'\n      }, {\n        default: () => this.needXBar && this.isShowXBar && !this.isIos ? h(\"div\", {\n          class: `${mergedClsPrefix}-scrollbar-rail__scrollbar`,\n          style: {\n            width: this.xBarSizePx,\n            right: rtlEnabled ? this.xBarLeftPx : undefined,\n            left: rtlEnabled ? undefined : this.xBarLeftPx\n          },\n          onMousedown: this.handleXScrollMouseDown\n        }) : null\n      }))]);\n    };\n\n    const scrollbarNode = this.container ? createChildren() : h(VResizeObserver, {\n      onResize: this.handleContainerResize\n    }, {\n      default: createChildren\n    });\n\n    if (internalHoistYRail) {\n      return h(Fragment, null, scrollbarNode, createYRail());\n    } else {\n      return scrollbarNode;\n    }\n  }\n\n});\nexport default Scrollbar;\nexport const XScrollbar = Scrollbar;","map":{"version":3,"names":["h","ref","defineComponent","computed","onMounted","onBeforeUnmount","mergeProps","Transition","watchEffect","Fragment","on","off","VResizeObserver","useIsIos","getPreciseEventTarget","useConfig","useTheme","useThemeClass","useRtl","useReactivated","Wrapper","scrollbarLight","style","scrollbarProps","Object","assign","props","size","type","Number","default","duration","scrollable","Boolean","xScrollable","trigger","String","useUnifiedContainer","triggerDisplayManually","container","Function","content","containerClass","containerStyle","contentClass","contentStyle","horizontalRailStyle","verticalRailStyle","onScroll","onWheel","onResize","internalOnUpdateScrollLeft","internalHoistYRail","Scrollbar","name","inheritAttrs","setup","mergedClsPrefixRef","inlineThemeDisabled","mergedRtlRef","rtlEnabledRef","wrapperRef","containerRef","contentRef","yRailRef","xRailRef","contentHeightRef","contentWidthRef","containerHeightRef","containerWidthRef","yRailSizeRef","xRailSizeRef","containerScrollTopRef","containerScrollLeftRef","isShowXBarRef","isShowYBarRef","yBarPressed","xBarPressed","xBarVanishTimerId","yBarVanishTimerId","memoYTop","memoXLeft","memoMouseX","memoMouseY","isIos","yBarSizeRef","value","containerHeight","contentHeight","yRailSize","Math","min","yBarSizePxRef","xBarSizeRef","containerWidth","contentWidth","xRailSize","xBarSizePxRef","yBarTopRef","containerScrollTop","heightDiff","yBarTopPxRef","xBarLeftRef","containerScrollLeft","widthDiff","xBarLeftPxRef","needYBarRef","needXBarRef","mergedShowXBarRef","mergedShowYBarRef","mergedContainerRef","mergedContentRef","activateState","scrollTo","top","left","handleContentResize","isDeactivated","sync","handleContainerResize","e","options","y","scrollToPosition","index","elSize","position","behavior","el","debounce","undefined","offsetTop","offsetHeight","MAX_SAFE_INTEGER","scrollBy","scrollTop","handleMouseEnterWrapper","showXBar","showYBar","handleMouseLeaveWrapper","hideBar","hideYBar","hideXBar","window","clearTimeout","setTimeout","handleScroll","syncScrollState","scrollLeft","syncPositionState","offsetWidth","xRailEl","yRailEl","syncUnifiedContainer","scrollHeight","scrollWidth","isMouseUpAway","_a","contains","handleXScrollMouseDown","preventDefault","stopPropagation","handleXScrollMouseMove","handleXScrollMouseUp","innerWidth","clientX","xBarSize","dX","dScrollLeft","toScrollLeftUpperBound","toScrollLeft","max","handleYScrollMouseDown","handleYScrollMouseMove","handleYScrollMouseUp","clientY","yBarSize","dY","dScrollTop","toScrollTopUpperBound","toScrollTop","needXBar","needYBar","mergedClsPrefix","classList","add","remove","themeRef","cssVarsRef","common","cubicBezierEaseInOut","scrollbarBorderRadius","scrollbarHeight","scrollbarWidth","self","color","colorHover","themeClassHandle","exposedMethods","rtlEnabled","yBarSizePx","xBarSizePx","yBarTopPx","xBarLeftPx","isShowXBar","isShowYBar","cssVars","themeClass","onRender","render","$slots","call","triggerIsNone","createYRail","class","height","onMousedown","createChildren","_b","$attrs","role","onMouseenter","onMouseleave","width","right","scrollbarNode","XScrollbar"],"sources":["D:/VCode/SHC社区管理系统/shc_community_manager_system/node_modules/naive-ui/es/_internal/scrollbar/src/Scrollbar.js"],"sourcesContent":["import { h, ref, defineComponent, computed, onMounted, onBeforeUnmount, mergeProps, Transition, watchEffect, Fragment } from 'vue';\nimport { on, off } from 'evtd';\nimport { VResizeObserver } from 'vueuc';\nimport { useIsIos } from 'vooks';\nimport { getPreciseEventTarget } from 'seemly';\nimport { useConfig, useTheme, useThemeClass, useRtl } from '../../../_mixins';\nimport { useReactivated, Wrapper } from '../../../_utils';\nimport { scrollbarLight } from '../styles';\nimport style from './styles/index.cssr';\nconst scrollbarProps = Object.assign(Object.assign({}, useTheme.props), { size: {\n        type: Number,\n        default: 5\n    }, duration: {\n        type: Number,\n        default: 0\n    }, scrollable: {\n        type: Boolean,\n        default: true\n    }, xScrollable: Boolean, trigger: {\n        type: String,\n        default: 'hover'\n    }, useUnifiedContainer: Boolean, triggerDisplayManually: Boolean, \n    // If container is set, resize observer won't not attached\n    container: Function, content: Function, containerClass: String, containerStyle: [String, Object], contentClass: String, contentStyle: [String, Object], horizontalRailStyle: [String, Object], verticalRailStyle: [String, Object], onScroll: Function, onWheel: Function, onResize: Function, internalOnUpdateScrollLeft: Function, internalHoistYRail: Boolean });\nconst Scrollbar = defineComponent({\n    name: 'Scrollbar',\n    props: scrollbarProps,\n    inheritAttrs: false,\n    setup(props) {\n        const { mergedClsPrefixRef, inlineThemeDisabled, mergedRtlRef } = useConfig(props);\n        const rtlEnabledRef = useRtl('Scrollbar', mergedRtlRef, mergedClsPrefixRef);\n        // dom ref\n        const wrapperRef = ref(null);\n        const containerRef = ref(null);\n        const contentRef = ref(null);\n        const yRailRef = ref(null);\n        const xRailRef = ref(null);\n        // data ref\n        const contentHeightRef = ref(null);\n        const contentWidthRef = ref(null);\n        const containerHeightRef = ref(null);\n        const containerWidthRef = ref(null);\n        const yRailSizeRef = ref(null);\n        const xRailSizeRef = ref(null);\n        const containerScrollTopRef = ref(0);\n        const containerScrollLeftRef = ref(0);\n        const isShowXBarRef = ref(false);\n        const isShowYBarRef = ref(false);\n        let yBarPressed = false;\n        let xBarPressed = false;\n        let xBarVanishTimerId;\n        let yBarVanishTimerId;\n        let memoYTop = 0;\n        let memoXLeft = 0;\n        let memoMouseX = 0;\n        let memoMouseY = 0;\n        const isIos = useIsIos();\n        const yBarSizeRef = computed(() => {\n            const { value: containerHeight } = containerHeightRef;\n            const { value: contentHeight } = contentHeightRef;\n            const { value: yRailSize } = yRailSizeRef;\n            if (containerHeight === null ||\n                contentHeight === null ||\n                yRailSize === null) {\n                return 0;\n            }\n            else {\n                return Math.min(containerHeight, (yRailSize * containerHeight) / contentHeight + props.size * 1.5);\n            }\n        });\n        const yBarSizePxRef = computed(() => {\n            return `${yBarSizeRef.value}px`;\n        });\n        const xBarSizeRef = computed(() => {\n            const { value: containerWidth } = containerWidthRef;\n            const { value: contentWidth } = contentWidthRef;\n            const { value: xRailSize } = xRailSizeRef;\n            if (containerWidth === null ||\n                contentWidth === null ||\n                xRailSize === null) {\n                return 0;\n            }\n            else {\n                return (xRailSize * containerWidth) / contentWidth + props.size * 1.5;\n            }\n        });\n        const xBarSizePxRef = computed(() => {\n            return `${xBarSizeRef.value}px`;\n        });\n        const yBarTopRef = computed(() => {\n            const { value: containerHeight } = containerHeightRef;\n            const { value: containerScrollTop } = containerScrollTopRef;\n            const { value: contentHeight } = contentHeightRef;\n            const { value: yRailSize } = yRailSizeRef;\n            if (containerHeight === null ||\n                contentHeight === null ||\n                yRailSize === null) {\n                return 0;\n            }\n            else {\n                const heightDiff = contentHeight - containerHeight;\n                if (!heightDiff)\n                    return 0;\n                return ((containerScrollTop / heightDiff) * (yRailSize - yBarSizeRef.value));\n            }\n        });\n        const yBarTopPxRef = computed(() => {\n            return `${yBarTopRef.value}px`;\n        });\n        const xBarLeftRef = computed(() => {\n            const { value: containerWidth } = containerWidthRef;\n            const { value: containerScrollLeft } = containerScrollLeftRef;\n            const { value: contentWidth } = contentWidthRef;\n            const { value: xRailSize } = xRailSizeRef;\n            if (containerWidth === null ||\n                contentWidth === null ||\n                xRailSize === null) {\n                return 0;\n            }\n            else {\n                const widthDiff = contentWidth - containerWidth;\n                if (!widthDiff)\n                    return 0;\n                return ((containerScrollLeft / widthDiff) * (xRailSize - xBarSizeRef.value));\n            }\n        });\n        const xBarLeftPxRef = computed(() => {\n            return `${xBarLeftRef.value}px`;\n        });\n        const needYBarRef = computed(() => {\n            const { value: containerHeight } = containerHeightRef;\n            const { value: contentHeight } = contentHeightRef;\n            return (containerHeight !== null &&\n                contentHeight !== null &&\n                contentHeight > containerHeight);\n        });\n        const needXBarRef = computed(() => {\n            const { value: containerWidth } = containerWidthRef;\n            const { value: contentWidth } = contentWidthRef;\n            return (containerWidth !== null &&\n                contentWidth !== null &&\n                contentWidth > containerWidth);\n        });\n        const mergedShowXBarRef = computed(() => {\n            const { trigger } = props;\n            return trigger === 'none' || isShowXBarRef.value;\n        });\n        const mergedShowYBarRef = computed(() => {\n            const { trigger } = props;\n            return trigger === 'none' || isShowYBarRef.value;\n        });\n        const mergedContainerRef = computed(() => {\n            const { container } = props;\n            if (container)\n                return container();\n            return containerRef.value;\n        });\n        const mergedContentRef = computed(() => {\n            const { content } = props;\n            if (content)\n                return content();\n            return contentRef.value;\n        });\n        const activateState = useReactivated(() => {\n            // Only restore for builtin container & content\n            if (!props.container) {\n                // remount\n                scrollTo({\n                    top: containerScrollTopRef.value,\n                    left: containerScrollLeftRef.value\n                });\n            }\n        });\n        // methods\n        const handleContentResize = () => {\n            if (activateState.isDeactivated)\n                return;\n            sync();\n        };\n        const handleContainerResize = (e) => {\n            if (activateState.isDeactivated)\n                return;\n            const { onResize } = props;\n            if (onResize)\n                onResize(e);\n            sync();\n        };\n        const scrollTo = (options, y) => {\n            if (!props.scrollable)\n                return;\n            if (typeof options === 'number') {\n                scrollToPosition(y !== null && y !== void 0 ? y : 0, options, 0, false, 'auto');\n                return;\n            }\n            const { left, top, index, elSize, position, behavior, el, debounce = true } = options;\n            if (left !== undefined || top !== undefined) {\n                scrollToPosition(left !== null && left !== void 0 ? left : 0, top !== null && top !== void 0 ? top : 0, 0, false, behavior);\n            }\n            if (el !== undefined) {\n                scrollToPosition(0, el.offsetTop, el.offsetHeight, debounce, behavior);\n            }\n            else if (index !== undefined && elSize !== undefined) {\n                scrollToPosition(0, index * elSize, elSize, debounce, behavior);\n            }\n            else if (position === 'bottom') {\n                scrollToPosition(0, Number.MAX_SAFE_INTEGER, 0, false, behavior);\n            }\n            else if (position === 'top') {\n                scrollToPosition(0, 0, 0, false, behavior);\n            }\n        };\n        const scrollBy = (options, y) => {\n            if (!props.scrollable)\n                return;\n            const { value: container } = mergedContainerRef;\n            if (!container)\n                return;\n            if (typeof options === 'object') {\n                container.scrollBy(options);\n            }\n            else {\n                container.scrollBy(options, y || 0);\n            }\n        };\n        function scrollToPosition(left, top, elSize, debounce, behavior) {\n            const { value: container } = mergedContainerRef;\n            if (!container)\n                return;\n            if (debounce) {\n                const { scrollTop, offsetHeight } = container;\n                if (top > scrollTop) {\n                    if (top + elSize <= scrollTop + offsetHeight) {\n                        // do nothing\n                    }\n                    else {\n                        container.scrollTo({\n                            left,\n                            top: top + elSize - offsetHeight,\n                            behavior\n                        });\n                    }\n                    return;\n                }\n            }\n            container.scrollTo({\n                left,\n                top,\n                behavior\n            });\n        }\n        function handleMouseEnterWrapper() {\n            showXBar();\n            showYBar();\n            sync();\n        }\n        function handleMouseLeaveWrapper() {\n            hideBar();\n        }\n        function hideBar() {\n            hideYBar();\n            hideXBar();\n        }\n        function hideYBar() {\n            if (yBarVanishTimerId !== undefined) {\n                window.clearTimeout(yBarVanishTimerId);\n            }\n            yBarVanishTimerId = window.setTimeout(() => {\n                isShowYBarRef.value = false;\n            }, props.duration);\n        }\n        function hideXBar() {\n            if (xBarVanishTimerId !== undefined) {\n                window.clearTimeout(xBarVanishTimerId);\n            }\n            xBarVanishTimerId = window.setTimeout(() => {\n                isShowXBarRef.value = false;\n            }, props.duration);\n        }\n        function showXBar() {\n            if (xBarVanishTimerId !== undefined) {\n                window.clearTimeout(xBarVanishTimerId);\n            }\n            isShowXBarRef.value = true;\n        }\n        function showYBar() {\n            if (yBarVanishTimerId !== undefined) {\n                window.clearTimeout(yBarVanishTimerId);\n            }\n            isShowYBarRef.value = true;\n        }\n        function handleScroll(e) {\n            const { onScroll } = props;\n            if (onScroll)\n                onScroll(e);\n            syncScrollState();\n        }\n        function syncScrollState() {\n            // only collect scroll state, do not trigger any dom event\n            const { value: container } = mergedContainerRef;\n            if (container) {\n                containerScrollTopRef.value = container.scrollTop;\n                containerScrollLeftRef.value =\n                    container.scrollLeft * ((rtlEnabledRef === null || rtlEnabledRef === void 0 ? void 0 : rtlEnabledRef.value) ? -1 : 1);\n            }\n        }\n        function syncPositionState() {\n            // only collect position state, do not trigger any dom event\n            // Don't use getClientBoundingRect because element may be scale transformed\n            const { value: content } = mergedContentRef;\n            if (content) {\n                contentHeightRef.value = content.offsetHeight;\n                contentWidthRef.value = content.offsetWidth;\n            }\n            const { value: container } = mergedContainerRef;\n            if (container) {\n                containerHeightRef.value = container.offsetHeight;\n                containerWidthRef.value = container.offsetWidth;\n            }\n            const { value: xRailEl } = xRailRef;\n            const { value: yRailEl } = yRailRef;\n            if (xRailEl) {\n                xRailSizeRef.value = xRailEl.offsetWidth;\n            }\n            if (yRailEl) {\n                yRailSizeRef.value = yRailEl.offsetHeight;\n            }\n        }\n        /**\n         * Sometimes there's only one element that we can scroll,\n         * For example for textarea, there won't be a content element.\n         */\n        function syncUnifiedContainer() {\n            const { value: container } = mergedContainerRef;\n            if (container) {\n                containerScrollTopRef.value = container.scrollTop;\n                containerScrollLeftRef.value =\n                    container.scrollLeft * ((rtlEnabledRef === null || rtlEnabledRef === void 0 ? void 0 : rtlEnabledRef.value) ? -1 : 1);\n                containerHeightRef.value = container.offsetHeight;\n                containerWidthRef.value = container.offsetWidth;\n                contentHeightRef.value = container.scrollHeight;\n                contentWidthRef.value = container.scrollWidth;\n            }\n            const { value: xRailEl } = xRailRef;\n            const { value: yRailEl } = yRailRef;\n            if (xRailEl) {\n                xRailSizeRef.value = xRailEl.offsetWidth;\n            }\n            if (yRailEl) {\n                yRailSizeRef.value = yRailEl.offsetHeight;\n            }\n        }\n        function sync() {\n            if (!props.scrollable)\n                return;\n            if (props.useUnifiedContainer) {\n                syncUnifiedContainer();\n            }\n            else {\n                syncPositionState();\n                syncScrollState();\n            }\n        }\n        function isMouseUpAway(e) {\n            var _a;\n            return !((_a = wrapperRef.value) === null || _a === void 0 ? void 0 : _a.contains(getPreciseEventTarget(e)));\n        }\n        function handleXScrollMouseDown(e) {\n            e.preventDefault();\n            e.stopPropagation();\n            xBarPressed = true;\n            on('mousemove', window, handleXScrollMouseMove, true);\n            on('mouseup', window, handleXScrollMouseUp, true);\n            memoXLeft = containerScrollLeftRef.value;\n            memoMouseX = (rtlEnabledRef === null || rtlEnabledRef === void 0 ? void 0 : rtlEnabledRef.value)\n                ? window.innerWidth - e.clientX\n                : e.clientX;\n        }\n        function handleXScrollMouseMove(e) {\n            if (!xBarPressed)\n                return;\n            if (xBarVanishTimerId !== undefined) {\n                window.clearTimeout(xBarVanishTimerId);\n            }\n            if (yBarVanishTimerId !== undefined) {\n                window.clearTimeout(yBarVanishTimerId);\n            }\n            const { value: containerWidth } = containerWidthRef;\n            const { value: contentWidth } = contentWidthRef;\n            const { value: xBarSize } = xBarSizeRef;\n            if (containerWidth === null || contentWidth === null)\n                return;\n            const dX = (rtlEnabledRef === null || rtlEnabledRef === void 0 ? void 0 : rtlEnabledRef.value)\n                ? window.innerWidth - e.clientX - memoMouseX\n                : e.clientX - memoMouseX;\n            const dScrollLeft = (dX * (contentWidth - containerWidth)) / (containerWidth - xBarSize);\n            const toScrollLeftUpperBound = contentWidth - containerWidth;\n            let toScrollLeft = memoXLeft + dScrollLeft;\n            toScrollLeft = Math.min(toScrollLeftUpperBound, toScrollLeft);\n            toScrollLeft = Math.max(toScrollLeft, 0);\n            const { value: container } = mergedContainerRef;\n            if (container) {\n                container.scrollLeft = toScrollLeft * ((rtlEnabledRef === null || rtlEnabledRef === void 0 ? void 0 : rtlEnabledRef.value) ? -1 : 1);\n                const { internalOnUpdateScrollLeft } = props;\n                if (internalOnUpdateScrollLeft)\n                    internalOnUpdateScrollLeft(toScrollLeft);\n            }\n        }\n        function handleXScrollMouseUp(e) {\n            e.preventDefault();\n            e.stopPropagation();\n            off('mousemove', window, handleXScrollMouseMove, true);\n            off('mouseup', window, handleXScrollMouseUp, true);\n            xBarPressed = false;\n            sync();\n            if (isMouseUpAway(e)) {\n                hideBar();\n            }\n        }\n        function handleYScrollMouseDown(e) {\n            e.preventDefault();\n            e.stopPropagation();\n            yBarPressed = true;\n            on('mousemove', window, handleYScrollMouseMove, true);\n            on('mouseup', window, handleYScrollMouseUp, true);\n            memoYTop = containerScrollTopRef.value;\n            memoMouseY = e.clientY;\n        }\n        function handleYScrollMouseMove(e) {\n            if (!yBarPressed)\n                return;\n            if (xBarVanishTimerId !== undefined) {\n                window.clearTimeout(xBarVanishTimerId);\n            }\n            if (yBarVanishTimerId !== undefined) {\n                window.clearTimeout(yBarVanishTimerId);\n            }\n            const { value: containerHeight } = containerHeightRef;\n            const { value: contentHeight } = contentHeightRef;\n            const { value: yBarSize } = yBarSizeRef;\n            if (containerHeight === null || contentHeight === null)\n                return;\n            const dY = e.clientY - memoMouseY;\n            const dScrollTop = (dY * (contentHeight - containerHeight)) / (containerHeight - yBarSize);\n            const toScrollTopUpperBound = contentHeight - containerHeight;\n            let toScrollTop = memoYTop + dScrollTop;\n            toScrollTop = Math.min(toScrollTopUpperBound, toScrollTop);\n            toScrollTop = Math.max(toScrollTop, 0);\n            const { value: container } = mergedContainerRef;\n            if (container) {\n                container.scrollTop = toScrollTop;\n            }\n        }\n        function handleYScrollMouseUp(e) {\n            e.preventDefault();\n            e.stopPropagation();\n            off('mousemove', window, handleYScrollMouseMove, true);\n            off('mouseup', window, handleYScrollMouseUp, true);\n            yBarPressed = false;\n            sync();\n            if (isMouseUpAway(e)) {\n                hideBar();\n            }\n        }\n        watchEffect(() => {\n            const { value: needXBar } = needXBarRef;\n            const { value: needYBar } = needYBarRef;\n            const { value: mergedClsPrefix } = mergedClsPrefixRef;\n            const { value: xRailEl } = xRailRef;\n            const { value: yRailEl } = yRailRef;\n            if (xRailEl) {\n                if (!needXBar) {\n                    xRailEl.classList.add(`${mergedClsPrefix}-scrollbar-rail--disabled`);\n                }\n                else {\n                    xRailEl.classList.remove(`${mergedClsPrefix}-scrollbar-rail--disabled`);\n                }\n            }\n            if (yRailEl) {\n                if (!needYBar) {\n                    yRailEl.classList.add(`${mergedClsPrefix}-scrollbar-rail--disabled`);\n                }\n                else {\n                    yRailEl.classList.remove(`${mergedClsPrefix}-scrollbar-rail--disabled`);\n                }\n            }\n        });\n        onMounted(() => {\n            // if container exist, it always can't be resolved when scrollbar is mounted\n            // for example:\n            // - component\n            //   - scrollbar\n            //     - inner\n            // if you pass inner to scrollbar, you may use a ref inside component\n            // however, when scrollbar is mounted, ref is not ready at component\n            // you need to init by yourself\n            if (props.container)\n                return;\n            sync();\n        });\n        onBeforeUnmount(() => {\n            if (xBarVanishTimerId !== undefined) {\n                window.clearTimeout(xBarVanishTimerId);\n            }\n            if (yBarVanishTimerId !== undefined) {\n                window.clearTimeout(yBarVanishTimerId);\n            }\n            off('mousemove', window, handleYScrollMouseMove, true);\n            off('mouseup', window, handleYScrollMouseUp, true);\n        });\n        const themeRef = useTheme('Scrollbar', '-scrollbar', style, scrollbarLight, props, mergedClsPrefixRef);\n        const cssVarsRef = computed(() => {\n            const { common: { cubicBezierEaseInOut, scrollbarBorderRadius, scrollbarHeight, scrollbarWidth }, self: { color, colorHover } } = themeRef.value;\n            return {\n                '--n-scrollbar-bezier': cubicBezierEaseInOut,\n                '--n-scrollbar-color': color,\n                '--n-scrollbar-color-hover': colorHover,\n                '--n-scrollbar-border-radius': scrollbarBorderRadius,\n                '--n-scrollbar-width': scrollbarWidth,\n                '--n-scrollbar-height': scrollbarHeight\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('scrollbar', undefined, cssVarsRef, props)\n            : undefined;\n        const exposedMethods = {\n            scrollTo,\n            scrollBy,\n            sync,\n            syncUnifiedContainer,\n            handleMouseEnterWrapper,\n            handleMouseLeaveWrapper\n        };\n        return Object.assign(Object.assign({}, exposedMethods), { mergedClsPrefix: mergedClsPrefixRef, rtlEnabled: rtlEnabledRef, containerScrollTop: containerScrollTopRef, wrapperRef,\n            containerRef,\n            contentRef,\n            yRailRef,\n            xRailRef, needYBar: needYBarRef, needXBar: needXBarRef, yBarSizePx: yBarSizePxRef, xBarSizePx: xBarSizePxRef, yBarTopPx: yBarTopPxRef, xBarLeftPx: xBarLeftPxRef, isShowXBar: mergedShowXBarRef, isShowYBar: mergedShowYBarRef, isIos,\n            handleScroll,\n            handleContentResize,\n            handleContainerResize,\n            handleYScrollMouseDown,\n            handleXScrollMouseDown, cssVars: inlineThemeDisabled ? undefined : cssVarsRef, themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass, onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender });\n    },\n    render() {\n        var _a;\n        const { $slots, mergedClsPrefix, triggerDisplayManually, rtlEnabled, internalHoistYRail } = this;\n        if (!this.scrollable)\n            return (_a = $slots.default) === null || _a === void 0 ? void 0 : _a.call($slots);\n        const triggerIsNone = this.trigger === 'none';\n        const createYRail = () => {\n            return (h(\"div\", { ref: \"yRailRef\", class: [\n                    `${mergedClsPrefix}-scrollbar-rail`,\n                    `${mergedClsPrefix}-scrollbar-rail--vertical`\n                ], \"data-scrollbar-rail\": true, style: this.verticalRailStyle, \"aria-hidden\": true }, h((triggerIsNone ? Wrapper : Transition), triggerIsNone ? null : { name: 'fade-in-transition' }, {\n                default: () => this.needYBar && this.isShowYBar && !this.isIos ? (h(\"div\", { class: `${mergedClsPrefix}-scrollbar-rail__scrollbar`, style: {\n                        height: this.yBarSizePx,\n                        top: this.yBarTopPx\n                    }, onMousedown: this.handleYScrollMouseDown })) : null\n            })));\n        };\n        const createChildren = () => {\n            var _a, _b;\n            (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n            return h('div', mergeProps(this.$attrs, {\n                role: 'none',\n                ref: 'wrapperRef',\n                class: [\n                    `${mergedClsPrefix}-scrollbar`,\n                    this.themeClass,\n                    rtlEnabled && `${mergedClsPrefix}-scrollbar--rtl`\n                ],\n                style: this.cssVars,\n                onMouseenter: triggerDisplayManually\n                    ? undefined\n                    : this.handleMouseEnterWrapper,\n                onMouseleave: triggerDisplayManually\n                    ? undefined\n                    : this.handleMouseLeaveWrapper\n            }), [\n                this.container ? ((_b = $slots.default) === null || _b === void 0 ? void 0 : _b.call($slots)) : (h(\"div\", { role: \"none\", ref: \"containerRef\", class: [\n                        `${mergedClsPrefix}-scrollbar-container`,\n                        this.containerClass\n                    ], style: this.containerStyle, onScroll: this.handleScroll, onWheel: this.onWheel },\n                    h(VResizeObserver, { onResize: this.handleContentResize }, {\n                        default: () => (h(\"div\", { ref: \"contentRef\", role: \"none\", style: [\n                                {\n                                    width: this.xScrollable ? 'fit-content' : null\n                                },\n                                this.contentStyle\n                            ], class: [\n                                `${mergedClsPrefix}-scrollbar-content`,\n                                this.contentClass\n                            ] }, $slots))\n                    }))),\n                internalHoistYRail ? null : createYRail(),\n                this.xScrollable && (h(\"div\", { ref: \"xRailRef\", class: [\n                        `${mergedClsPrefix}-scrollbar-rail`,\n                        `${mergedClsPrefix}-scrollbar-rail--horizontal`\n                    ], style: this.horizontalRailStyle, \"data-scrollbar-rail\": true, \"aria-hidden\": true }, h((triggerIsNone ? Wrapper : Transition), triggerIsNone ? null : { name: 'fade-in-transition' }, {\n                    default: () => this.needXBar && this.isShowXBar && !this.isIos ? (h(\"div\", { class: `${mergedClsPrefix}-scrollbar-rail__scrollbar`, style: {\n                            width: this.xBarSizePx,\n                            right: rtlEnabled ? this.xBarLeftPx : undefined,\n                            left: rtlEnabled ? undefined : this.xBarLeftPx\n                        }, onMousedown: this.handleXScrollMouseDown })) : null\n                })))\n            ]);\n        };\n        const scrollbarNode = this.container ? (createChildren()) : (h(VResizeObserver, { onResize: this.handleContainerResize }, {\n            default: createChildren\n        }));\n        if (internalHoistYRail) {\n            return (h(Fragment, null,\n                scrollbarNode,\n                createYRail()));\n        }\n        else {\n            return scrollbarNode;\n        }\n    }\n});\nexport default Scrollbar;\nexport const XScrollbar = Scrollbar;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}