{"ast":null,"code":"import { h, Transition, TransitionGroup, defineComponent } from 'vue';\nexport default defineComponent({\n  name: 'FadeInExpandTransition',\n  props: {\n    appear: Boolean,\n    group: Boolean,\n    mode: String,\n    onLeave: Function,\n    onAfterLeave: Function,\n    onAfterEnter: Function,\n    width: Boolean,\n    // reverse mode is only used in tree\n    // it make it from expanded to collapsed after mounted\n    reverse: Boolean\n  },\n\n  setup(props, {\n    slots\n  }) {\n    function handleBeforeLeave(el) {\n      if (props.width) {\n        el.style.maxWidth = `${el.offsetWidth}px`;\n      } else {\n        el.style.maxHeight = `${el.offsetHeight}px`;\n      }\n\n      void el.offsetWidth;\n    }\n\n    function handleLeave(el) {\n      if (props.width) {\n        el.style.maxWidth = '0';\n      } else {\n        el.style.maxHeight = '0';\n      }\n\n      void el.offsetWidth;\n      const {\n        onLeave\n      } = props;\n      if (onLeave) onLeave();\n    }\n\n    function handleAfterLeave(el) {\n      if (props.width) {\n        el.style.maxWidth = '';\n      } else {\n        el.style.maxHeight = '';\n      }\n\n      const {\n        onAfterLeave\n      } = props;\n      if (onAfterLeave) onAfterLeave();\n    }\n\n    function handleEnter(el) {\n      el.style.transition = 'none';\n\n      if (props.width) {\n        const memorizedWidth = el.offsetWidth;\n        el.style.maxWidth = '0';\n        void el.offsetWidth;\n        el.style.transition = '';\n        el.style.maxWidth = `${memorizedWidth}px`;\n      } else {\n        if (props.reverse) {\n          el.style.maxHeight = `${el.offsetHeight}px`;\n          void el.offsetHeight;\n          el.style.transition = '';\n          el.style.maxHeight = '0';\n        } else {\n          const memorizedHeight = el.offsetHeight;\n          el.style.maxHeight = '0';\n          void el.offsetWidth;\n          el.style.transition = '';\n          el.style.maxHeight = `${memorizedHeight}px`;\n        }\n      }\n\n      void el.offsetWidth;\n    }\n\n    function handleAfterEnter(el) {\n      var _a;\n\n      if (props.width) {\n        el.style.maxWidth = '';\n      } else {\n        if (!props.reverse) {\n          el.style.maxHeight = '';\n        }\n      }\n\n      (_a = props.onAfterEnter) === null || _a === void 0 ? void 0 : _a.call(props);\n    }\n\n    return () => {\n      const type = props.group ? TransitionGroup : Transition;\n      return h(type, {\n        name: props.width ? 'fade-in-width-expand-transition' : 'fade-in-height-expand-transition',\n        mode: props.mode,\n        appear: props.appear,\n        onEnter: handleEnter,\n        onAfterEnter: handleAfterEnter,\n        onBeforeLeave: handleBeforeLeave,\n        onLeave: handleLeave,\n        onAfterLeave: handleAfterLeave\n      }, slots);\n    };\n  }\n\n});","map":{"version":3,"names":["h","Transition","TransitionGroup","defineComponent","name","props","appear","Boolean","group","mode","String","onLeave","Function","onAfterLeave","onAfterEnter","width","reverse","setup","slots","handleBeforeLeave","el","style","maxWidth","offsetWidth","maxHeight","offsetHeight","handleLeave","handleAfterLeave","handleEnter","transition","memorizedWidth","memorizedHeight","handleAfterEnter","_a","call","type","onEnter","onBeforeLeave"],"sources":["D:/VCode/SHC社区管理系统/shc_community_manager_system/node_modules/naive-ui/es/_internal/fade-in-expand-transition/src/FadeInExpandTransition.js"],"sourcesContent":["import { h, Transition, TransitionGroup, defineComponent } from 'vue';\nexport default defineComponent({\n    name: 'FadeInExpandTransition',\n    props: {\n        appear: Boolean,\n        group: Boolean,\n        mode: String,\n        onLeave: Function,\n        onAfterLeave: Function,\n        onAfterEnter: Function,\n        width: Boolean,\n        // reverse mode is only used in tree\n        // it make it from expanded to collapsed after mounted\n        reverse: Boolean\n    },\n    setup(props, { slots }) {\n        function handleBeforeLeave(el) {\n            if (props.width) {\n                el.style.maxWidth = `${el.offsetWidth}px`;\n            }\n            else {\n                el.style.maxHeight = `${el.offsetHeight}px`;\n            }\n            void el.offsetWidth;\n        }\n        function handleLeave(el) {\n            if (props.width) {\n                el.style.maxWidth = '0';\n            }\n            else {\n                el.style.maxHeight = '0';\n            }\n            void el.offsetWidth;\n            const { onLeave } = props;\n            if (onLeave)\n                onLeave();\n        }\n        function handleAfterLeave(el) {\n            if (props.width) {\n                el.style.maxWidth = '';\n            }\n            else {\n                el.style.maxHeight = '';\n            }\n            const { onAfterLeave } = props;\n            if (onAfterLeave)\n                onAfterLeave();\n        }\n        function handleEnter(el) {\n            el.style.transition = 'none';\n            if (props.width) {\n                const memorizedWidth = el.offsetWidth;\n                el.style.maxWidth = '0';\n                void el.offsetWidth;\n                el.style.transition = '';\n                el.style.maxWidth = `${memorizedWidth}px`;\n            }\n            else {\n                if (props.reverse) {\n                    el.style.maxHeight = `${el.offsetHeight}px`;\n                    void el.offsetHeight;\n                    el.style.transition = '';\n                    el.style.maxHeight = '0';\n                }\n                else {\n                    const memorizedHeight = el.offsetHeight;\n                    el.style.maxHeight = '0';\n                    void el.offsetWidth;\n                    el.style.transition = '';\n                    el.style.maxHeight = `${memorizedHeight}px`;\n                }\n            }\n            void el.offsetWidth;\n        }\n        function handleAfterEnter(el) {\n            var _a;\n            if (props.width) {\n                el.style.maxWidth = '';\n            }\n            else {\n                if (!props.reverse) {\n                    el.style.maxHeight = '';\n                }\n            }\n            (_a = props.onAfterEnter) === null || _a === void 0 ? void 0 : _a.call(props);\n        }\n        return () => {\n            const type = props.group ? TransitionGroup : Transition;\n            return h(type, {\n                name: props.width\n                    ? 'fade-in-width-expand-transition'\n                    : 'fade-in-height-expand-transition',\n                mode: props.mode,\n                appear: props.appear,\n                onEnter: handleEnter,\n                onAfterEnter: handleAfterEnter,\n                onBeforeLeave: handleBeforeLeave,\n                onLeave: handleLeave,\n                onAfterLeave: handleAfterLeave\n            }, slots);\n        };\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}