{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { h, nextTick, toRef, watch, ref, inject, defineComponent, provide, withDirectives, vShow, Transition, mergeProps, cloneVNode, computed } from 'vue';\nimport { clickoutside } from 'vdirs';\nimport { VFocusTrap } from 'vueuc';\nimport { dialogPropKeys } from '../../dialog/src/dialogProps';\nimport { NDialog } from '../../dialog/src/Dialog';\nimport { cardBasePropKeys } from '../../card/src/Card';\nimport { drawerBodyInjectionKey } from '../../drawer/src/interface';\nimport { popoverBodyInjectionKey } from '../../popover/src/interface';\nimport { NScrollbar } from '../../_internal';\nimport { NCard } from '../../card';\nimport { getFirstSlotVNode, keep, useLockHtmlScroll, warn } from '../../_utils';\nimport { modalBodyInjectionKey, modalInjectionKey } from './interface';\nimport { presetProps } from './presetProps';\nexport default defineComponent({\n  name: 'ModalBody',\n  inheritAttrs: false,\n  props: Object.assign(Object.assign({\n    show: {\n      type: Boolean,\n      required: true\n    },\n    preset: String,\n    displayDirective: {\n      type: String,\n      required: true\n    },\n    trapFocus: {\n      type: Boolean,\n      default: true\n    },\n    autoFocus: {\n      type: Boolean,\n      default: true\n    },\n    blockScroll: Boolean\n  }, presetProps), {\n    renderMask: Function,\n    // events\n    onClickoutside: Function,\n    onBeforeLeave: {\n      type: Function,\n      required: true\n    },\n    onAfterLeave: {\n      type: Function,\n      required: true\n    },\n    onPositiveClick: {\n      type: Function,\n      required: true\n    },\n    onNegativeClick: {\n      type: Function,\n      required: true\n    },\n    onClose: {\n      type: Function,\n      required: true\n    },\n    onAfterEnter: Function,\n    onEsc: Function\n  }),\n\n  setup(props) {\n    const bodyRef = ref(null);\n    const scrollbarRef = ref(null);\n    const displayedRef = ref(props.show);\n    const transformOriginXRef = ref(null);\n    const transformOriginYRef = ref(null);\n    watch(toRef(props, 'show'), value => {\n      if (value) displayedRef.value = true;\n    });\n    useLockHtmlScroll(computed(() => props.blockScroll && displayedRef.value)); // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    const NModal = inject(modalInjectionKey);\n\n    function styleTransformOrigin() {\n      if (NModal.transformOriginRef.value === 'center') {\n        return '';\n      }\n\n      const {\n        value: transformOriginX\n      } = transformOriginXRef;\n      const {\n        value: transformOriginY\n      } = transformOriginYRef;\n\n      if (transformOriginX === null || transformOriginY === null) {\n        return '';\n      } else if (scrollbarRef.value) {\n        const scrollTop = scrollbarRef.value.containerScrollTop;\n        return `${transformOriginX}px ${transformOriginY + scrollTop}px`;\n      }\n\n      return '';\n    }\n\n    function syncTransformOrigin(el) {\n      if (NModal.transformOriginRef.value === 'center') {\n        return;\n      }\n\n      const mousePosition = NModal.getMousePosition();\n\n      if (!mousePosition) {\n        return;\n      }\n\n      if (!scrollbarRef.value) return;\n      const scrollTop = scrollbarRef.value.containerScrollTop;\n      const {\n        offsetLeft,\n        offsetTop\n      } = el;\n\n      if (mousePosition) {\n        const top = mousePosition.y;\n        const left = mousePosition.x;\n        transformOriginXRef.value = -(offsetLeft - left);\n        transformOriginYRef.value = -(offsetTop - top - scrollTop);\n      }\n\n      el.style.transformOrigin = styleTransformOrigin();\n    }\n\n    function handleEnter(el) {\n      void nextTick(() => {\n        syncTransformOrigin(el);\n      });\n    }\n\n    function handleBeforeLeave(el) {\n      el.style.transformOrigin = styleTransformOrigin();\n      props.onBeforeLeave();\n    }\n\n    function handleAfterLeave() {\n      displayedRef.value = false;\n      transformOriginXRef.value = null;\n      transformOriginYRef.value = null;\n      props.onAfterLeave();\n    }\n\n    function handleCloseClick() {\n      const {\n        onClose\n      } = props;\n\n      if (onClose) {\n        onClose();\n      }\n    }\n\n    function handleNegativeClick() {\n      props.onNegativeClick();\n    }\n\n    function handlePositiveClick() {\n      props.onPositiveClick();\n    }\n\n    const childNodeRef = ref(null);\n    watch(childNodeRef, node => {\n      if (node) {\n        void nextTick(() => {\n          const el = node.el;\n\n          if (el && bodyRef.value !== el) {\n            bodyRef.value = el;\n          }\n        });\n      }\n    });\n    provide(modalBodyInjectionKey, bodyRef);\n    provide(drawerBodyInjectionKey, null);\n    provide(popoverBodyInjectionKey, null);\n    return {\n      mergedTheme: NModal.mergedThemeRef,\n      appear: NModal.appearRef,\n      isMounted: NModal.isMountedRef,\n      mergedClsPrefix: NModal.mergedClsPrefixRef,\n      bodyRef,\n      scrollbarRef,\n      displayed: displayedRef,\n      childNodeRef,\n      handlePositiveClick,\n      handleNegativeClick,\n      handleCloseClick,\n      handleAfterLeave,\n      handleBeforeLeave,\n      handleEnter\n    };\n  },\n\n  render() {\n    const {\n      $slots,\n      $attrs,\n      handleEnter,\n      handleAfterLeave,\n      handleBeforeLeave,\n      preset,\n      mergedClsPrefix\n    } = this;\n    let childNode = null;\n\n    if (!preset) {\n      childNode = getFirstSlotVNode($slots);\n\n      if (!childNode) {\n        warn('modal', 'default slot is empty');\n        return;\n      }\n\n      childNode = cloneVNode(childNode);\n      childNode.props = mergeProps({\n        class: `${mergedClsPrefix}-modal`\n      }, $attrs, childNode.props || {});\n    }\n\n    return this.displayDirective === 'show' || this.displayed || this.show ? withDirectives(h(\"div\", {\n      role: \"none\",\n      class: `${mergedClsPrefix}-modal-body-wrapper`\n    }, h(NScrollbar, {\n      ref: \"scrollbarRef\",\n      theme: this.mergedTheme.peers.Scrollbar,\n      themeOverrides: this.mergedTheme.peerOverrides.Scrollbar,\n      contentClass: `${mergedClsPrefix}-modal-scroll-content`\n    }, {\n      default: () => {\n        var _a;\n\n        return [(_a = this.renderMask) === null || _a === void 0 ? void 0 : _a.call(this), h(VFocusTrap, {\n          disabled: !this.trapFocus,\n          active: this.show,\n          onEsc: this.onEsc,\n          autoFocus: this.autoFocus\n        }, {\n          default: () => {\n            var _a;\n\n            return h(Transition, {\n              name: \"fade-in-scale-up-transition\",\n              appear: (_a = this.appear) !== null && _a !== void 0 ? _a : this.isMounted,\n              onEnter: handleEnter,\n              onAfterEnter: this.onAfterEnter,\n              onAfterLeave: handleAfterLeave,\n              onBeforeLeave: handleBeforeLeave\n            }, {\n              default: () => {\n                const dirs = [[vShow, this.show]];\n                const {\n                  onClickoutside\n                } = this;\n\n                if (onClickoutside) {\n                  dirs.push([clickoutside, this.onClickoutside, undefined, {\n                    capture: true\n                  }]);\n                }\n\n                return withDirectives(this.preset === 'confirm' || this.preset === 'dialog' ? h(NDialog, Object.assign({}, this.$attrs, {\n                  class: [`${mergedClsPrefix}-modal`, this.$attrs.class],\n                  ref: \"bodyRef\",\n                  theme: this.mergedTheme.peers.Dialog,\n                  themeOverrides: this.mergedTheme.peerOverrides.Dialog\n                }, keep(this.$props, dialogPropKeys), {\n                  \"aria-modal\": \"true\"\n                }), $slots) : this.preset === 'card' ? h(NCard, Object.assign({}, this.$attrs, {\n                  ref: \"bodyRef\",\n                  class: [`${mergedClsPrefix}-modal`, this.$attrs.class],\n                  theme: this.mergedTheme.peers.Card,\n                  themeOverrides: this.mergedTheme.peerOverrides.Card\n                }, keep(this.$props, cardBasePropKeys), {\n                  \"aria-modal\": \"true\",\n                  role: \"dialog\"\n                }), $slots) : this.childNodeRef = childNode, dirs);\n              }\n            });\n          }\n        })];\n      }\n    })), [[vShow, this.displayDirective === 'if' || this.displayed || this.show]]) : null;\n  }\n\n});","map":{"version":3,"names":["h","nextTick","toRef","watch","ref","inject","defineComponent","provide","withDirectives","vShow","Transition","mergeProps","cloneVNode","computed","clickoutside","VFocusTrap","dialogPropKeys","NDialog","cardBasePropKeys","drawerBodyInjectionKey","popoverBodyInjectionKey","NScrollbar","NCard","getFirstSlotVNode","keep","useLockHtmlScroll","warn","modalBodyInjectionKey","modalInjectionKey","presetProps","name","inheritAttrs","props","Object","assign","show","type","Boolean","required","preset","String","displayDirective","trapFocus","default","autoFocus","blockScroll","renderMask","Function","onClickoutside","onBeforeLeave","onAfterLeave","onPositiveClick","onNegativeClick","onClose","onAfterEnter","onEsc","setup","bodyRef","scrollbarRef","displayedRef","transformOriginXRef","transformOriginYRef","value","NModal","styleTransformOrigin","transformOriginRef","transformOriginX","transformOriginY","scrollTop","containerScrollTop","syncTransformOrigin","el","mousePosition","getMousePosition","offsetLeft","offsetTop","top","y","left","x","style","transformOrigin","handleEnter","handleBeforeLeave","handleAfterLeave","handleCloseClick","handleNegativeClick","handlePositiveClick","childNodeRef","node","mergedTheme","mergedThemeRef","appear","appearRef","isMounted","isMountedRef","mergedClsPrefix","mergedClsPrefixRef","displayed","render","$slots","$attrs","childNode","class","role","theme","peers","Scrollbar","themeOverrides","peerOverrides","contentClass","_a","call","disabled","active","onEnter","dirs","push","undefined","capture","Dialog","$props","Card"],"sources":["E:/VCode/SHC社区管理系统/shc_community_manager_system/node_modules/naive-ui/es/modal/src/BodyWrapper.js"],"sourcesContent":["import { h, nextTick, toRef, watch, ref, inject, defineComponent, provide, withDirectives, vShow, Transition, mergeProps, cloneVNode, computed } from 'vue';\nimport { clickoutside } from 'vdirs';\nimport { VFocusTrap } from 'vueuc';\nimport { dialogPropKeys } from '../../dialog/src/dialogProps';\nimport { NDialog } from '../../dialog/src/Dialog';\nimport { cardBasePropKeys } from '../../card/src/Card';\nimport { drawerBodyInjectionKey } from '../../drawer/src/interface';\nimport { popoverBodyInjectionKey } from '../../popover/src/interface';\nimport { NScrollbar } from '../../_internal';\nimport { NCard } from '../../card';\nimport { getFirstSlotVNode, keep, useLockHtmlScroll, warn } from '../../_utils';\nimport { modalBodyInjectionKey, modalInjectionKey } from './interface';\nimport { presetProps } from './presetProps';\nexport default defineComponent({\n    name: 'ModalBody',\n    inheritAttrs: false,\n    props: Object.assign(Object.assign({ show: {\n            type: Boolean,\n            required: true\n        }, preset: String, displayDirective: {\n            type: String,\n            required: true\n        }, trapFocus: {\n            type: Boolean,\n            default: true\n        }, autoFocus: {\n            type: Boolean,\n            default: true\n        }, blockScroll: Boolean }, presetProps), { renderMask: Function, \n        // events\n        onClickoutside: Function, onBeforeLeave: {\n            type: Function,\n            required: true\n        }, onAfterLeave: {\n            type: Function,\n            required: true\n        }, onPositiveClick: {\n            type: Function,\n            required: true\n        }, onNegativeClick: {\n            type: Function,\n            required: true\n        }, onClose: {\n            type: Function,\n            required: true\n        }, onAfterEnter: Function, onEsc: Function }),\n    setup(props) {\n        const bodyRef = ref(null);\n        const scrollbarRef = ref(null);\n        const displayedRef = ref(props.show);\n        const transformOriginXRef = ref(null);\n        const transformOriginYRef = ref(null);\n        watch(toRef(props, 'show'), (value) => {\n            if (value)\n                displayedRef.value = true;\n        });\n        useLockHtmlScroll(computed(() => props.blockScroll && displayedRef.value));\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const NModal = inject(modalInjectionKey);\n        function styleTransformOrigin() {\n            if (NModal.transformOriginRef.value === 'center') {\n                return '';\n            }\n            const { value: transformOriginX } = transformOriginXRef;\n            const { value: transformOriginY } = transformOriginYRef;\n            if (transformOriginX === null || transformOriginY === null) {\n                return '';\n            }\n            else if (scrollbarRef.value) {\n                const scrollTop = scrollbarRef.value.containerScrollTop;\n                return `${transformOriginX}px ${transformOriginY + scrollTop}px`;\n            }\n            return '';\n        }\n        function syncTransformOrigin(el) {\n            if (NModal.transformOriginRef.value === 'center') {\n                return;\n            }\n            const mousePosition = NModal.getMousePosition();\n            if (!mousePosition) {\n                return;\n            }\n            if (!scrollbarRef.value)\n                return;\n            const scrollTop = scrollbarRef.value.containerScrollTop;\n            const { offsetLeft, offsetTop } = el;\n            if (mousePosition) {\n                const top = mousePosition.y;\n                const left = mousePosition.x;\n                transformOriginXRef.value = -(offsetLeft - left);\n                transformOriginYRef.value = -(offsetTop - top - scrollTop);\n            }\n            el.style.transformOrigin = styleTransformOrigin();\n        }\n        function handleEnter(el) {\n            void nextTick(() => {\n                syncTransformOrigin(el);\n            });\n        }\n        function handleBeforeLeave(el) {\n            el.style.transformOrigin = styleTransformOrigin();\n            props.onBeforeLeave();\n        }\n        function handleAfterLeave() {\n            displayedRef.value = false;\n            transformOriginXRef.value = null;\n            transformOriginYRef.value = null;\n            props.onAfterLeave();\n        }\n        function handleCloseClick() {\n            const { onClose } = props;\n            if (onClose) {\n                onClose();\n            }\n        }\n        function handleNegativeClick() {\n            props.onNegativeClick();\n        }\n        function handlePositiveClick() {\n            props.onPositiveClick();\n        }\n        const childNodeRef = ref(null);\n        watch(childNodeRef, (node) => {\n            if (node) {\n                void nextTick(() => {\n                    const el = node.el;\n                    if (el && bodyRef.value !== el) {\n                        bodyRef.value = el;\n                    }\n                });\n            }\n        });\n        provide(modalBodyInjectionKey, bodyRef);\n        provide(drawerBodyInjectionKey, null);\n        provide(popoverBodyInjectionKey, null);\n        return {\n            mergedTheme: NModal.mergedThemeRef,\n            appear: NModal.appearRef,\n            isMounted: NModal.isMountedRef,\n            mergedClsPrefix: NModal.mergedClsPrefixRef,\n            bodyRef,\n            scrollbarRef,\n            displayed: displayedRef,\n            childNodeRef,\n            handlePositiveClick,\n            handleNegativeClick,\n            handleCloseClick,\n            handleAfterLeave,\n            handleBeforeLeave,\n            handleEnter\n        };\n    },\n    render() {\n        const { $slots, $attrs, handleEnter, handleAfterLeave, handleBeforeLeave, preset, mergedClsPrefix } = this;\n        let childNode = null;\n        if (!preset) {\n            childNode = getFirstSlotVNode($slots);\n            if (!childNode) {\n                warn('modal', 'default slot is empty');\n                return;\n            }\n            childNode = cloneVNode(childNode);\n            childNode.props = mergeProps({\n                class: `${mergedClsPrefix}-modal`\n            }, $attrs, childNode.props || {});\n        }\n        return this.displayDirective === 'show' || this.displayed || this.show\n            ? withDirectives(h(\"div\", { role: \"none\", class: `${mergedClsPrefix}-modal-body-wrapper` },\n                h(NScrollbar, { ref: \"scrollbarRef\", theme: this.mergedTheme.peers.Scrollbar, themeOverrides: this.mergedTheme.peerOverrides.Scrollbar, contentClass: `${mergedClsPrefix}-modal-scroll-content` }, {\n                    default: () => {\n                        var _a;\n                        return [\n                            (_a = this.renderMask) === null || _a === void 0 ? void 0 : _a.call(this),\n                            h(VFocusTrap, { disabled: !this.trapFocus, active: this.show, onEsc: this.onEsc, autoFocus: this.autoFocus }, {\n                                default: () => {\n                                    var _a;\n                                    return (h(Transition, { name: \"fade-in-scale-up-transition\", appear: (_a = this.appear) !== null && _a !== void 0 ? _a : this.isMounted, onEnter: handleEnter, onAfterEnter: this.onAfterEnter, onAfterLeave: handleAfterLeave, onBeforeLeave: handleBeforeLeave }, {\n                                        default: () => {\n                                            const dirs = [\n                                                [vShow, this.show]\n                                            ];\n                                            const { onClickoutside } = this;\n                                            if (onClickoutside) {\n                                                dirs.push([\n                                                    clickoutside,\n                                                    this.onClickoutside,\n                                                    undefined,\n                                                    { capture: true }\n                                                ]);\n                                            }\n                                            return withDirectives((this.preset === 'confirm' ||\n                                                this.preset === 'dialog' ? (h(NDialog, Object.assign({}, this.$attrs, { class: [\n                                                    `${mergedClsPrefix}-modal`,\n                                                    this.$attrs.class\n                                                ], ref: \"bodyRef\", theme: this.mergedTheme.peers.Dialog, themeOverrides: this.mergedTheme.peerOverrides.Dialog }, keep(this.$props, dialogPropKeys), { \"aria-modal\": \"true\" }), $slots)) : this.preset === 'card' ? (h(NCard, Object.assign({}, this.$attrs, { ref: \"bodyRef\", class: [\n                                                    `${mergedClsPrefix}-modal`,\n                                                    this.$attrs.class\n                                                ], theme: this.mergedTheme.peers.Card, themeOverrides: this.mergedTheme.peerOverrides.Card }, keep(this.$props, cardBasePropKeys), { \"aria-modal\": \"true\", role: \"dialog\" }), $slots)) : ((this.childNodeRef = childNode))), dirs);\n                                        }\n                                    }));\n                                }\n                            })\n                        ];\n                    }\n                })), [\n                [\n                    vShow,\n                    this.displayDirective === 'if' || this.displayed || this.show\n                ]\n            ])\n            : null;\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}