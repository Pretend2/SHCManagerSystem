{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { isBrowser } from '../../_utils';\nexport const isImageFileType = type => type.includes('image/');\n\nconst getExtname = (url = '') => {\n  const temp = url.split('/');\n  const filename = temp[temp.length - 1];\n  const filenameWithoutSuffix = filename.split(/#|\\?/)[0];\n  return (/\\.[^./\\\\]*$/.exec(filenameWithoutSuffix) || [''])[0];\n};\n\nexport const isImageFile = file => {\n  if (file.type) {\n    return isImageFileType(file.type);\n  }\n\n  const url = file.thumbnailUrl || file.url || '';\n  const extension = getExtname(url);\n\n  if (/^data:image\\//.test(url) || /(webp|svg|png|gif|jpg|jpeg|jfif|bmp|dpg|ico)$/i.test(extension)) {\n    return true;\n  }\n\n  if (/^data:/.test(url)) {\n    return false;\n  }\n\n  if (extension) {\n    return false;\n  }\n\n  return true;\n};\nexport function createImageDataUrl(file) {\n  return __awaiter(this, void 0, void 0, function* () {\n    return yield new Promise(resolve => {\n      if (!file.type || !isImageFileType(file.type)) {\n        resolve('');\n        return;\n      }\n\n      resolve(window.URL.createObjectURL(file));\n    });\n  });\n}\nexport const environmentSupportFile = isBrowser && window.FileReader && window.File;\nexport function isFileSystemDirectoryEntry(item) {\n  return item.isDirectory;\n}\nexport function isFileSystemFileEntry(item) {\n  return item.isFile;\n}\nexport function getFilesFromEntries(entries, directory) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const fileAndEntries = [];\n\n    let _resolve;\n\n    let requestCallbackCount = 0;\n\n    function lock() {\n      requestCallbackCount++;\n    }\n\n    function unlock() {\n      requestCallbackCount--;\n\n      if (!requestCallbackCount) {\n        _resolve(fileAndEntries);\n      }\n    }\n\n    function _getFilesFromEntries(entries) {\n      entries.forEach(entry => {\n        if (!entry) return;\n        lock();\n\n        if (directory && isFileSystemDirectoryEntry(entry)) {\n          const directoryReader = entry.createReader();\n          lock();\n          directoryReader.readEntries(entries => {\n            _getFilesFromEntries(entries);\n\n            unlock();\n          }, () => {\n            unlock();\n          });\n        } else if (isFileSystemFileEntry(entry)) {\n          lock();\n          entry.file(file => {\n            fileAndEntries.push({\n              file,\n              entry,\n              source: 'dnd'\n            });\n            unlock();\n          }, () => {\n            unlock();\n          });\n        }\n\n        unlock();\n      });\n    }\n\n    yield new Promise(resolve => {\n      _resolve = resolve;\n\n      _getFilesFromEntries(entries);\n    });\n    return fileAndEntries;\n  });\n}\nexport function createSettledFileInfo(fileInfo) {\n  const {\n    id,\n    name,\n    percentage,\n    status,\n    url,\n    file,\n    thumbnailUrl,\n    type,\n    fullPath,\n    batchId\n  } = fileInfo;\n  return {\n    id,\n    name,\n    percentage: percentage !== null && percentage !== void 0 ? percentage : null,\n    status,\n    url: url !== null && url !== void 0 ? url : null,\n    file: file !== null && file !== void 0 ? file : null,\n    thumbnailUrl: thumbnailUrl !== null && thumbnailUrl !== void 0 ? thumbnailUrl : null,\n    type: type !== null && type !== void 0 ? type : null,\n    fullPath: fullPath !== null && fullPath !== void 0 ? fullPath : null,\n    batchId: batchId !== null && batchId !== void 0 ? batchId : null\n  };\n}\n/**\n * This is a rather simple version. I may fix it later to make it more accurate.\n * I've looked at https://github.com/broofa/mime, however it doesn't has a esm\n * version, so I can't simply use it.\n */\n\nexport function matchType(name, mimeType, accept) {\n  name = name.toLowerCase();\n  mimeType = mimeType.toLocaleLowerCase();\n  accept = accept.toLocaleLowerCase();\n  const acceptAtoms = accept.split(',').map(acceptAtom => acceptAtom.trim()).filter(Boolean);\n  return acceptAtoms.some(acceptAtom => {\n    if (acceptAtom.startsWith('.')) {\n      // suffix\n      if (name.endsWith(acceptAtom)) return true;\n    } else if (acceptAtom.includes('/')) {\n      // mime type\n      const [type, subtype] = mimeType.split('/');\n      const [acceptType, acceptSubtype] = acceptAtom.split('/');\n\n      if (acceptType === '*' || type && acceptType && acceptType === type) {\n        if (acceptSubtype === '*' || subtype && acceptSubtype && acceptSubtype === subtype) {\n          return true;\n        }\n      }\n    } else {\n      // invalid type\n      return true;\n    }\n\n    return false;\n  });\n}\nexport const download = (url, name) => {\n  if (!url) return;\n  const a = document.createElement('a');\n  a.href = url;\n\n  if (name !== undefined) {\n    a.download = name;\n  }\n\n  document.body.appendChild(a);\n  a.click();\n  document.body.removeChild(a);\n};","map":{"version":3,"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","isBrowser","isImageFileType","type","includes","getExtname","url","temp","split","filename","length","filenameWithoutSuffix","exec","isImageFile","file","thumbnailUrl","extension","test","createImageDataUrl","window","URL","createObjectURL","environmentSupportFile","FileReader","File","isFileSystemDirectoryEntry","item","isDirectory","isFileSystemFileEntry","isFile","getFilesFromEntries","entries","directory","fileAndEntries","_resolve","requestCallbackCount","lock","unlock","_getFilesFromEntries","forEach","entry","directoryReader","createReader","readEntries","push","source","createSettledFileInfo","fileInfo","id","name","percentage","status","fullPath","batchId","matchType","mimeType","accept","toLowerCase","toLocaleLowerCase","acceptAtoms","map","acceptAtom","trim","filter","Boolean","some","startsWith","endsWith","subtype","acceptType","acceptSubtype","download","a","document","createElement","href","undefined","body","appendChild","click","removeChild"],"sources":["D:/VCode/SHC社区管理系统/shc_community_manager_system/node_modules/naive-ui/es/upload/src/utils.js"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { isBrowser } from '../../_utils';\nexport const isImageFileType = (type) => type.includes('image/');\nconst getExtname = (url = '') => {\n    const temp = url.split('/');\n    const filename = temp[temp.length - 1];\n    const filenameWithoutSuffix = filename.split(/#|\\?/)[0];\n    return (/\\.[^./\\\\]*$/.exec(filenameWithoutSuffix) || [''])[0];\n};\nexport const isImageFile = (file) => {\n    if (file.type) {\n        return isImageFileType(file.type);\n    }\n    const url = file.thumbnailUrl || file.url || '';\n    const extension = getExtname(url);\n    if (/^data:image\\//.test(url) ||\n        /(webp|svg|png|gif|jpg|jpeg|jfif|bmp|dpg|ico)$/i.test(extension)) {\n        return true;\n    }\n    if (/^data:/.test(url)) {\n        return false;\n    }\n    if (extension) {\n        return false;\n    }\n    return true;\n};\nexport function createImageDataUrl(file) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return yield new Promise((resolve) => {\n            if (!file.type || !isImageFileType(file.type)) {\n                resolve('');\n                return;\n            }\n            resolve(window.URL.createObjectURL(file));\n        });\n    });\n}\nexport const environmentSupportFile = isBrowser && window.FileReader && window.File;\nexport function isFileSystemDirectoryEntry(item) {\n    return item.isDirectory;\n}\nexport function isFileSystemFileEntry(item) {\n    return item.isFile;\n}\nexport function getFilesFromEntries(entries, directory) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const fileAndEntries = [];\n        let _resolve;\n        let requestCallbackCount = 0;\n        function lock() {\n            requestCallbackCount++;\n        }\n        function unlock() {\n            requestCallbackCount--;\n            if (!requestCallbackCount) {\n                _resolve(fileAndEntries);\n            }\n        }\n        function _getFilesFromEntries(entries) {\n            entries.forEach((entry) => {\n                if (!entry)\n                    return;\n                lock();\n                if (directory && isFileSystemDirectoryEntry(entry)) {\n                    const directoryReader = entry.createReader();\n                    lock();\n                    directoryReader.readEntries((entries) => {\n                        _getFilesFromEntries(entries);\n                        unlock();\n                    }, () => {\n                        unlock();\n                    });\n                }\n                else if (isFileSystemFileEntry(entry)) {\n                    lock();\n                    entry.file((file) => {\n                        fileAndEntries.push({ file, entry, source: 'dnd' });\n                        unlock();\n                    }, () => {\n                        unlock();\n                    });\n                }\n                unlock();\n            });\n        }\n        yield new Promise((resolve) => {\n            _resolve = resolve;\n            _getFilesFromEntries(entries);\n        });\n        return fileAndEntries;\n    });\n}\nexport function createSettledFileInfo(fileInfo) {\n    const { id, name, percentage, status, url, file, thumbnailUrl, type, fullPath, batchId } = fileInfo;\n    return {\n        id,\n        name,\n        percentage: percentage !== null && percentage !== void 0 ? percentage : null,\n        status,\n        url: url !== null && url !== void 0 ? url : null,\n        file: file !== null && file !== void 0 ? file : null,\n        thumbnailUrl: thumbnailUrl !== null && thumbnailUrl !== void 0 ? thumbnailUrl : null,\n        type: type !== null && type !== void 0 ? type : null,\n        fullPath: fullPath !== null && fullPath !== void 0 ? fullPath : null,\n        batchId: batchId !== null && batchId !== void 0 ? batchId : null\n    };\n}\n/**\n * This is a rather simple version. I may fix it later to make it more accurate.\n * I've looked at https://github.com/broofa/mime, however it doesn't has a esm\n * version, so I can't simply use it.\n */\nexport function matchType(name, mimeType, accept) {\n    name = name.toLowerCase();\n    mimeType = mimeType.toLocaleLowerCase();\n    accept = accept.toLocaleLowerCase();\n    const acceptAtoms = accept\n        .split(',')\n        .map((acceptAtom) => acceptAtom.trim())\n        .filter(Boolean);\n    return acceptAtoms.some((acceptAtom) => {\n        if (acceptAtom.startsWith('.')) {\n            // suffix\n            if (name.endsWith(acceptAtom))\n                return true;\n        }\n        else if (acceptAtom.includes('/')) {\n            // mime type\n            const [type, subtype] = mimeType.split('/');\n            const [acceptType, acceptSubtype] = acceptAtom.split('/');\n            if (acceptType === '*' || (type && acceptType && acceptType === type)) {\n                if (acceptSubtype === '*' ||\n                    (subtype && acceptSubtype && acceptSubtype === subtype)) {\n                    return true;\n                }\n            }\n        }\n        else {\n            // invalid type\n            return true;\n        }\n        return false;\n    });\n}\nexport const download = (url, name) => {\n    if (!url)\n        return;\n    const a = document.createElement('a');\n    a.href = url;\n    if (name !== undefined) {\n        a.download = name;\n    }\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}