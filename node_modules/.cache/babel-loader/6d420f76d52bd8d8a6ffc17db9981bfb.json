{"ast":null,"code":"import { defineComponent, onMounted, onBeforeUnmount, watchEffect, ref } from 'vue';\nexport const countdownProps = {\n  duration: {\n    type: Number,\n    default: 0\n  },\n  active: {\n    type: Boolean,\n    default: true\n  },\n  precision: {\n    type: Number,\n    default: 0\n  },\n  render: Function,\n  onFinish: Function\n};\nexport default defineComponent({\n  name: 'Countdown',\n  props: countdownProps,\n\n  setup(props) {\n    let timerId = null;\n    let elapsed = 0;\n    let finished = false; // in ms\n\n    const distanceRef = ref(0);\n    watchEffect(() => {\n      distanceRef.value = props.duration;\n    });\n    let pnow = -1;\n\n    function getDistance(time) {\n      return props.duration - elapsed + pnow - time;\n    }\n\n    function getTimeInfo(distance) {\n      const hours = Math.floor(distance / 3600000);\n      const minutes = Math.floor(distance % 3600000 / 60000);\n      const seconds = Math.floor(distance % 60000 / 1000);\n      const milliseconds = Math.floor(distance % 1000);\n      return {\n        hours,\n        minutes,\n        seconds,\n        milliseconds\n      };\n    }\n\n    function getDisplayValue(info) {\n      const {\n        hours,\n        minutes,\n        seconds,\n        milliseconds\n      } = info;\n      const {\n        precision\n      } = props;\n\n      switch (precision) {\n        case 0:\n          return `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\n\n        default:\n          return `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}.${String(Math.floor(milliseconds / (precision === 1 ? 100 : precision === 2 ? 10 : 1))).padStart(precision, '0')}`;\n      }\n    }\n\n    const frame = () => {\n      var _a;\n\n      const {\n        precision\n      } = props;\n      const distance = getDistance(performance.now());\n\n      if (distance <= 0) {\n        distanceRef.value = 0;\n        stopTimer();\n\n        if (!finished) {\n          finished = true;\n          (_a = props.onFinish) === null || _a === void 0 ? void 0 : _a.call(props);\n        }\n\n        return;\n      }\n\n      let leftTime;\n\n      switch (precision) {\n        case 3:\n        case 2:\n          leftTime = distance % 34; // about 30 fps\n\n          break;\n\n        case 1:\n          leftTime = distance % 100;\n          break;\n\n        default:\n          leftTime = distance % 1000;\n      }\n\n      distanceRef.value = distance;\n      timerId = window.setTimeout(() => {\n        frame();\n      }, leftTime);\n    };\n\n    const stopTimer = () => {\n      if (timerId !== null) {\n        window.clearTimeout(timerId);\n        timerId = null;\n      }\n    };\n\n    onMounted(() => {\n      watchEffect(() => {\n        if (props.active) {\n          pnow = performance.now();\n          frame();\n        } else {\n          const now = performance.now();\n\n          if (pnow !== -1) {\n            elapsed += now - pnow;\n          }\n\n          stopTimer();\n        }\n      });\n    });\n    onBeforeUnmount(() => {\n      stopTimer();\n    });\n\n    function reset() {\n      distanceRef.value = props.duration;\n      elapsed = 0;\n      pnow = performance.now();\n\n      if (props.active && finished) {\n        frame();\n      }\n\n      finished = false;\n    }\n\n    const countdownExposedMethod = {\n      reset\n    };\n    return Object.assign(countdownExposedMethod, {\n      distance: distanceRef,\n      getTimeInfo,\n      getDisplayValue\n    });\n  },\n\n  render() {\n    const {\n      render,\n      precision,\n      distance,\n      getTimeInfo,\n      getDisplayValue\n    } = this;\n    let timeInfo;\n\n    switch (precision) {\n      case 0:\n        timeInfo = getTimeInfo(distance + 999);\n        timeInfo.milliseconds = 0;\n        break;\n\n      case 1:\n        timeInfo = getTimeInfo(distance + 99);\n        timeInfo.milliseconds = Math.floor(timeInfo.milliseconds / 100) * 100;\n        break;\n\n      case 2:\n        timeInfo = getTimeInfo(distance + 9);\n        timeInfo.milliseconds = Math.floor(timeInfo.milliseconds / 10) * 10;\n        break;\n\n      case 3:\n        timeInfo = getTimeInfo(distance);\n    }\n\n    if (render) {\n      return render(timeInfo);\n    } else {\n      return getDisplayValue(timeInfo);\n    }\n  }\n\n});","map":{"version":3,"names":["defineComponent","onMounted","onBeforeUnmount","watchEffect","ref","countdownProps","duration","type","Number","default","active","Boolean","precision","render","Function","onFinish","name","props","setup","timerId","elapsed","finished","distanceRef","value","pnow","getDistance","time","getTimeInfo","distance","hours","Math","floor","minutes","seconds","milliseconds","getDisplayValue","info","String","padStart","frame","_a","performance","now","stopTimer","call","leftTime","window","setTimeout","clearTimeout","reset","countdownExposedMethod","Object","assign","timeInfo"],"sources":["E:/VCode/SHC社区管理系统/shc_community_manager_system/node_modules/naive-ui/es/countdown/src/Countdown.js"],"sourcesContent":["import { defineComponent, onMounted, onBeforeUnmount, watchEffect, ref } from 'vue';\nexport const countdownProps = {\n    duration: {\n        type: Number,\n        default: 0\n    },\n    active: {\n        type: Boolean,\n        default: true\n    },\n    precision: {\n        type: Number,\n        default: 0\n    },\n    render: Function,\n    onFinish: Function\n};\nexport default defineComponent({\n    name: 'Countdown',\n    props: countdownProps,\n    setup(props) {\n        let timerId = null;\n        let elapsed = 0;\n        let finished = false;\n        // in ms\n        const distanceRef = ref(0);\n        watchEffect(() => {\n            distanceRef.value = props.duration;\n        });\n        let pnow = -1;\n        function getDistance(time) {\n            return props.duration - elapsed + pnow - time;\n        }\n        function getTimeInfo(distance) {\n            const hours = Math.floor(distance / 3600000);\n            const minutes = Math.floor((distance % 3600000) / 60000);\n            const seconds = Math.floor((distance % 60000) / 1000);\n            const milliseconds = Math.floor(distance % 1000);\n            return {\n                hours,\n                minutes,\n                seconds,\n                milliseconds\n            };\n        }\n        function getDisplayValue(info) {\n            const { hours, minutes, seconds, milliseconds } = info;\n            const { precision } = props;\n            switch (precision) {\n                case 0:\n                    return `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}`;\n                default:\n                    return `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')}:${String(seconds).padStart(2, '0')}.${String(Math.floor(milliseconds / (precision === 1 ? 100 : precision === 2 ? 10 : 1))).padStart(precision, '0')}`;\n            }\n        }\n        const frame = () => {\n            var _a;\n            const { precision } = props;\n            const distance = getDistance(performance.now());\n            if (distance <= 0) {\n                distanceRef.value = 0;\n                stopTimer();\n                if (!finished) {\n                    finished = true;\n                    (_a = props.onFinish) === null || _a === void 0 ? void 0 : _a.call(props);\n                }\n                return;\n            }\n            let leftTime;\n            switch (precision) {\n                case 3:\n                case 2:\n                    leftTime = distance % 34; // about 30 fps\n                    break;\n                case 1:\n                    leftTime = distance % 100;\n                    break;\n                default:\n                    leftTime = distance % 1000;\n            }\n            distanceRef.value = distance;\n            timerId = window.setTimeout(() => {\n                frame();\n            }, leftTime);\n        };\n        const stopTimer = () => {\n            if (timerId !== null) {\n                window.clearTimeout(timerId);\n                timerId = null;\n            }\n        };\n        onMounted(() => {\n            watchEffect(() => {\n                if (props.active) {\n                    pnow = performance.now();\n                    frame();\n                }\n                else {\n                    const now = performance.now();\n                    if (pnow !== -1) {\n                        elapsed += now - pnow;\n                    }\n                    stopTimer();\n                }\n            });\n        });\n        onBeforeUnmount(() => {\n            stopTimer();\n        });\n        function reset() {\n            distanceRef.value = props.duration;\n            elapsed = 0;\n            pnow = performance.now();\n            if (props.active && finished) {\n                frame();\n            }\n            finished = false;\n        }\n        const countdownExposedMethod = {\n            reset\n        };\n        return Object.assign(countdownExposedMethod, {\n            distance: distanceRef,\n            getTimeInfo,\n            getDisplayValue\n        });\n    },\n    render() {\n        const { render, precision, distance, getTimeInfo, getDisplayValue } = this;\n        let timeInfo;\n        switch (precision) {\n            case 0:\n                timeInfo = getTimeInfo(distance + 999);\n                timeInfo.milliseconds = 0;\n                break;\n            case 1:\n                timeInfo = getTimeInfo(distance + 99);\n                timeInfo.milliseconds = Math.floor(timeInfo.milliseconds / 100) * 100;\n                break;\n            case 2:\n                timeInfo = getTimeInfo(distance + 9);\n                timeInfo.milliseconds = Math.floor(timeInfo.milliseconds / 10) * 10;\n                break;\n            case 3:\n                timeInfo = getTimeInfo(distance);\n        }\n        if (render) {\n            return render(timeInfo);\n        }\n        else {\n            return getDisplayValue(timeInfo);\n        }\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}