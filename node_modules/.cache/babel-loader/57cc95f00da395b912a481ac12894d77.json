{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport function flatten(treeNodes, expandedKeys) {\n  const expandedKeySet = expandedKeys ? new Set(expandedKeys) : undefined;\n  const flattenedNodes = [];\n\n  function traverse(treeNodes) {\n    treeNodes.forEach(treeNode => {\n      flattenedNodes.push(treeNode);\n      if (treeNode.isLeaf || !treeNode.children || treeNode.ignored) return;\n\n      if (treeNode.isGroup) {\n        // group node shouldn't be expanded\n        traverse(treeNode.children);\n      } else if ( // normal non-leaf node\n      expandedKeySet === undefined || expandedKeySet.has(treeNode.key)) {\n        traverse(treeNode.children);\n      }\n    });\n  }\n\n  traverse(treeNodes);\n  return flattenedNodes;\n}","map":{"version":3,"names":["flatten","treeNodes","expandedKeys","expandedKeySet","Set","undefined","flattenedNodes","traverse","forEach","treeNode","push","isLeaf","children","ignored","isGroup","has","key"],"sources":["E:/VCode/SHC社区管理系统/shc_community_manager_system/node_modules/treemate/es/flatten.js"],"sourcesContent":["export function flatten(treeNodes, expandedKeys) {\n    const expandedKeySet = expandedKeys ? new Set(expandedKeys) : undefined;\n    const flattenedNodes = [];\n    function traverse(treeNodes) {\n        treeNodes.forEach((treeNode) => {\n            flattenedNodes.push(treeNode);\n            if (treeNode.isLeaf || !treeNode.children || treeNode.ignored)\n                return;\n            if (treeNode.isGroup) {\n                // group node shouldn't be expanded\n                traverse(treeNode.children);\n            }\n            else if (\n            // normal non-leaf node\n            expandedKeySet === undefined ||\n                expandedKeySet.has(treeNode.key)) {\n                traverse(treeNode.children);\n            }\n        });\n    }\n    traverse(treeNodes);\n    return flattenedNodes;\n}\n"],"mappings":";AAAA,OAAO,SAASA,OAAT,CAAiBC,SAAjB,EAA4BC,YAA5B,EAA0C;EAC7C,MAAMC,cAAc,GAAGD,YAAY,GAAG,IAAIE,GAAJ,CAAQF,YAAR,CAAH,GAA2BG,SAA9D;EACA,MAAMC,cAAc,GAAG,EAAvB;;EACA,SAASC,QAAT,CAAkBN,SAAlB,EAA6B;IACzBA,SAAS,CAACO,OAAV,CAAmBC,QAAD,IAAc;MAC5BH,cAAc,CAACI,IAAf,CAAoBD,QAApB;MACA,IAAIA,QAAQ,CAACE,MAAT,IAAmB,CAACF,QAAQ,CAACG,QAA7B,IAAyCH,QAAQ,CAACI,OAAtD,EACI;;MACJ,IAAIJ,QAAQ,CAACK,OAAb,EAAsB;QAClB;QACAP,QAAQ,CAACE,QAAQ,CAACG,QAAV,CAAR;MACH,CAHD,MAIK,KACL;MACAT,cAAc,KAAKE,SAAnB,IACIF,cAAc,CAACY,GAAf,CAAmBN,QAAQ,CAACO,GAA5B,CAHC,EAGiC;QAClCT,QAAQ,CAACE,QAAQ,CAACG,QAAV,CAAR;MACH;IACJ,CAdD;EAeH;;EACDL,QAAQ,CAACN,SAAD,CAAR;EACA,OAAOK,cAAP;AACH"},"metadata":{},"sourceType":"module"}