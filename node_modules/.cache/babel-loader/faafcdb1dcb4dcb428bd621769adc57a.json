{"ast":null,"code":"import { h, ref, toRef, isProxy, toRaw, computed, defineComponent, inject, provide, watchEffect } from 'vue';\nimport { useMergedState } from 'vooks';\nimport { createId } from 'seemly';\nimport { RemoveIcon, AddIcon, ArrowDownIcon, ArrowUpIcon } from '../../_internal/icons';\nimport { formItemInjectionKey } from '../../_mixins/use-form-item';\nimport { NBaseIcon } from '../../_internal';\nimport { NButton } from '../../button';\nimport { NButtonGroup } from '../../button-group';\nimport { useTheme, useLocale, useConfig, useThemeClass } from '../../_mixins';\nimport { call, warnOnce, resolveSlotWithProps, resolveSlot } from '../../_utils';\nimport { dynamicInputLight } from '../styles';\nimport NDynamicInputInputPreset from './InputPreset';\nimport NDynamicInputPairPreset from './PairPreset';\nimport { dynamicInputInjectionKey } from './interface';\nimport style from './styles/index.cssr';\nimport { useRtl } from '../../_mixins/use-rtl';\nconst globalDataKeyMap = new WeakMap();\nexport const dynamicInputProps = Object.assign(Object.assign({}, useTheme.props), {\n  max: Number,\n  min: {\n    type: Number,\n    default: 0\n  },\n  value: Array,\n  // TODO: make it robust for different types\n  defaultValue: {\n    type: Array,\n    default: () => []\n  },\n  preset: {\n    type: String,\n    default: 'input'\n  },\n  keyField: String,\n  itemStyle: [String, Object],\n  // for preset pair\n  keyPlaceholder: {\n    type: String,\n    default: ''\n  },\n  valuePlaceholder: {\n    type: String,\n    default: ''\n  },\n  // for preset input\n  placeholder: {\n    type: String,\n    default: ''\n  },\n  showSortButton: Boolean,\n  createButtonProps: Object,\n  onCreate: Function,\n  onRemove: Function,\n  'onUpdate:value': [Function, Array],\n  onUpdateValue: [Function, Array],\n  // deprecated\n  onClear: Function,\n  onInput: [Function, Array]\n});\nexport default defineComponent({\n  name: 'DynamicInput',\n  props: dynamicInputProps,\n\n  setup(props, {\n    slots\n  }) {\n    if (process.env.NODE_ENV !== 'production') {\n      watchEffect(() => {\n        if (props.onClear !== undefined) {\n          warnOnce('dynamic-input', '`on-clear` is deprecated, it is out of usage anymore.');\n        }\n\n        if (props.onInput !== undefined) {\n          warnOnce('dynamic-input', '`on-input` is deprecated, please use `on-update:value` instead.');\n        }\n      });\n    }\n\n    const {\n      mergedComponentPropsRef,\n      mergedClsPrefixRef,\n      mergedRtlRef,\n      inlineThemeDisabled\n    } = useConfig();\n    const NFormItem = inject(formItemInjectionKey, null);\n    const uncontrolledValueRef = ref(props.defaultValue);\n    const controlledValueRef = toRef(props, 'value');\n    const mergedValueRef = useMergedState(controlledValueRef, uncontrolledValueRef);\n    const themeRef = useTheme('DynamicInput', '-dynamic-input', style, dynamicInputLight, props, mergedClsPrefixRef);\n    const insertionDisabledRef = computed(() => {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n\n      if (Array.isArray(mergedValue)) {\n        const {\n          max\n        } = props;\n        return max !== undefined && mergedValue.length >= max;\n      }\n\n      return false;\n    });\n    const removeDisabledRef = computed(() => {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (Array.isArray(mergedValue)) return mergedValue.length <= props.min;\n      return true;\n    });\n    const buttonSizeRef = computed(() => {\n      var _a, _b;\n\n      return (_b = (_a = mergedComponentPropsRef === null || mergedComponentPropsRef === void 0 ? void 0 : mergedComponentPropsRef.value) === null || _a === void 0 ? void 0 : _a.DynamicInput) === null || _b === void 0 ? void 0 : _b.buttonSize;\n    });\n\n    function doUpdateValue(value) {\n      const {\n        onInput,\n        'onUpdate:value': _onUpdateValue,\n        onUpdateValue\n      } = props;\n      if (onInput) call(onInput, value);\n      if (_onUpdateValue) call(_onUpdateValue, value);\n      if (onUpdateValue) call(onUpdateValue, value);\n      uncontrolledValueRef.value = value;\n    }\n\n    function ensureKey(value, index) {\n      if (value === undefined || value === null) return index;\n      if (typeof value !== 'object') return index;\n      const rawValue = isProxy(value) ? toRaw(value) : value;\n      let key = globalDataKeyMap.get(rawValue);\n\n      if (key === undefined) {\n        globalDataKeyMap.set(rawValue, key = createId());\n      }\n\n      return key;\n    }\n\n    function handleValueChange(index, value) {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      const newValue = Array.from(mergedValue !== null && mergedValue !== void 0 ? mergedValue : []);\n      const originalItem = newValue[index];\n      newValue[index] = value; // update dataKeyMap\n\n      if (originalItem && value && typeof originalItem === 'object' && typeof value === 'object') {\n        const rawOriginal = isProxy(originalItem) ? toRaw(originalItem) : originalItem;\n        const rawNew = isProxy(value) ? toRaw(value) : value; // inherit key is value position is not change\n\n        const originalKey = globalDataKeyMap.get(rawOriginal);\n\n        if (originalKey !== undefined) {\n          globalDataKeyMap.set(rawNew, originalKey);\n        }\n      }\n\n      doUpdateValue(newValue);\n    }\n\n    function handleCreateClick() {\n      createItem(0);\n    }\n\n    function createItem(index) {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      const {\n        onCreate\n      } = props;\n      const newValue = Array.from(mergedValue !== null && mergedValue !== void 0 ? mergedValue : []);\n\n      if (onCreate) {\n        newValue.splice(index + 1, 0, onCreate(index + 1));\n        doUpdateValue(newValue);\n      } else if (slots.default) {\n        newValue.splice(index + 1, 0, null);\n        doUpdateValue(newValue);\n      } else {\n        switch (props.preset) {\n          case 'input':\n            newValue.splice(index + 1, 0, '');\n            doUpdateValue(newValue);\n            break;\n\n          case 'pair':\n            newValue.splice(index + 1, 0, {\n              key: '',\n              value: ''\n            });\n            doUpdateValue(newValue);\n            break;\n        }\n      }\n    }\n\n    function remove(index) {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (!Array.isArray(mergedValue)) return;\n      const {\n        min\n      } = props;\n      if (mergedValue.length <= min) return;\n      const newValue = Array.from(mergedValue);\n      newValue.splice(index, 1);\n      doUpdateValue(newValue);\n      const {\n        onRemove\n      } = props;\n      if (onRemove) onRemove(index);\n    }\n\n    function swap(array, currentIndex, targetIndex) {\n      if (currentIndex < 0 || targetIndex < 0 || currentIndex >= array.length || targetIndex >= array.length) {\n        return;\n      }\n\n      if (currentIndex === targetIndex) return;\n      const currentItem = array[currentIndex];\n      array[currentIndex] = array[targetIndex];\n      array[targetIndex] = currentItem;\n    }\n\n    function move(type, index) {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (!Array.isArray(mergedValue)) return;\n      const newValue = Array.from(mergedValue);\n\n      if (type === 'up') {\n        swap(newValue, index, index - 1);\n      }\n\n      if (type === 'down') {\n        swap(newValue, index, index + 1);\n      }\n\n      doUpdateValue(newValue);\n    }\n\n    provide(dynamicInputInjectionKey, {\n      mergedThemeRef: themeRef,\n      keyPlaceholderRef: toRef(props, 'keyPlaceholder'),\n      valuePlaceholderRef: toRef(props, 'valuePlaceholder'),\n      placeholderRef: toRef(props, 'placeholder')\n    });\n    const rtlEnabledRef = useRtl('DynamicInput', mergedRtlRef, mergedClsPrefixRef);\n    const cssVarsRef = computed(() => {\n      const {\n        self: {\n          actionMargin,\n          actionMarginRtl\n        }\n      } = themeRef.value;\n      return {\n        '--action-margin': actionMargin,\n        '--action-margin-rtl': actionMarginRtl\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('dynamic-input', undefined, cssVarsRef, props) : undefined;\n    return {\n      locale: useLocale('DynamicInput').localeRef,\n      rtlEnabled: rtlEnabledRef,\n      buttonSize: buttonSizeRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      NFormItem,\n      uncontrolledValue: uncontrolledValueRef,\n      mergedValue: mergedValueRef,\n      insertionDisabled: insertionDisabledRef,\n      removeDisabled: removeDisabledRef,\n      handleCreateClick,\n      ensureKey,\n      handleValueChange,\n      remove,\n      move,\n      createItem,\n      mergedTheme: themeRef,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    };\n  },\n\n  render() {\n    const {\n      $slots,\n      buttonSize,\n      mergedClsPrefix,\n      mergedValue,\n      locale,\n      mergedTheme,\n      keyField,\n      itemStyle,\n      preset,\n      showSortButton,\n      NFormItem,\n      ensureKey,\n      handleValueChange,\n      remove,\n      createItem,\n      move,\n      onRender\n    } = this;\n    onRender === null || onRender === void 0 ? void 0 : onRender();\n    return h(\"div\", {\n      class: [`${mergedClsPrefix}-dynamic-input`, this.rtlEnabled && `${mergedClsPrefix}-dynamic-input--rtl`, this.themeClass],\n      style: this.cssVars\n    }, !Array.isArray(mergedValue) || mergedValue.length === 0 ? h(NButton, Object.assign({\n      block: true,\n      ghost: true,\n      dashed: true,\n      size: buttonSize\n    }, this.createButtonProps, {\n      disabled: this.insertionDisabled,\n      theme: mergedTheme.peers.Button,\n      themeOverrides: mergedTheme.peerOverrides.Button,\n      onClick: this.handleCreateClick\n    }), {\n      default: () => resolveSlot($slots['create-button-default'], () => [locale.create]),\n      icon: () => resolveSlot($slots['create-button-icon'], () => [h(NBaseIcon, {\n        clsPrefix: mergedClsPrefix\n      }, {\n        default: () => h(AddIcon, null)\n      })])\n    }) : mergedValue.map((_, index) => h(\"div\", {\n      key: keyField ? _[keyField] : ensureKey(_, index),\n      \"data-key\": keyField ? _[keyField] : ensureKey(_, index),\n      class: `${mergedClsPrefix}-dynamic-input-item`,\n      style: itemStyle\n    }, resolveSlotWithProps($slots.default, {\n      value: mergedValue[index],\n      index\n    }, () => {\n      return [preset === 'input' ? h(NDynamicInputInputPreset, {\n        clsPrefix: mergedClsPrefix,\n        value: mergedValue[index],\n        parentPath: NFormItem ? NFormItem.path.value : undefined,\n        path: (NFormItem === null || NFormItem === void 0 ? void 0 : NFormItem.path.value) ? `${NFormItem.path.value}[${index}]` : undefined,\n        onUpdateValue: v => handleValueChange(index, v)\n      }) : preset === 'pair' ? h(NDynamicInputPairPreset, {\n        clsPrefix: mergedClsPrefix,\n        value: mergedValue[index],\n        parentPath: NFormItem ? NFormItem.path.value : undefined,\n        path: (NFormItem === null || NFormItem === void 0 ? void 0 : NFormItem.path.value) ? `${NFormItem.path.value}[${index}]` : undefined,\n        onUpdateValue: v => handleValueChange(index, v)\n      }) : null];\n    }), h(\"div\", {\n      class: `${mergedClsPrefix}-dynamic-input-item__action`\n    }, h(NButtonGroup, {\n      size: buttonSize\n    }, {\n      default: () => [h(NButton, {\n        disabled: this.removeDisabled,\n        theme: mergedTheme.peers.Button,\n        themeOverrides: mergedTheme.peerOverrides.Button,\n        circle: true,\n        onClick: () => remove(index)\n      }, {\n        icon: () => h(NBaseIcon, {\n          clsPrefix: mergedClsPrefix\n        }, {\n          default: () => h(RemoveIcon, null)\n        })\n      }), h(NButton, {\n        disabled: this.insertionDisabled,\n        circle: true,\n        theme: mergedTheme.peers.Button,\n        themeOverrides: mergedTheme.peerOverrides.Button,\n        onClick: () => createItem(index)\n      }, {\n        icon: () => h(NBaseIcon, {\n          clsPrefix: mergedClsPrefix\n        }, {\n          default: () => h(AddIcon, null)\n        })\n      }), showSortButton ? h(NButton, {\n        disabled: index === 0,\n        circle: true,\n        theme: mergedTheme.peers.Button,\n        themeOverrides: mergedTheme.peerOverrides.Button,\n        onClick: () => move('up', index)\n      }, {\n        icon: () => h(NBaseIcon, {\n          clsPrefix: mergedClsPrefix\n        }, {\n          default: () => h(ArrowUpIcon, null)\n        })\n      }) : null, showSortButton ? h(NButton, {\n        disabled: index === mergedValue.length - 1,\n        circle: true,\n        theme: mergedTheme.peers.Button,\n        themeOverrides: mergedTheme.peerOverrides.Button,\n        onClick: () => move('down', index)\n      }, {\n        icon: () => h(NBaseIcon, {\n          clsPrefix: mergedClsPrefix\n        }, {\n          default: () => h(ArrowDownIcon, null)\n        })\n      }) : null]\n    })))));\n  }\n\n});","map":{"version":3,"names":["h","ref","toRef","isProxy","toRaw","computed","defineComponent","inject","provide","watchEffect","useMergedState","createId","RemoveIcon","AddIcon","ArrowDownIcon","ArrowUpIcon","formItemInjectionKey","NBaseIcon","NButton","NButtonGroup","useTheme","useLocale","useConfig","useThemeClass","call","warnOnce","resolveSlotWithProps","resolveSlot","dynamicInputLight","NDynamicInputInputPreset","NDynamicInputPairPreset","dynamicInputInjectionKey","style","useRtl","globalDataKeyMap","WeakMap","dynamicInputProps","Object","assign","props","max","Number","min","type","default","value","Array","defaultValue","preset","String","keyField","itemStyle","keyPlaceholder","valuePlaceholder","placeholder","showSortButton","Boolean","createButtonProps","onCreate","Function","onRemove","onUpdateValue","onClear","onInput","name","setup","slots","process","env","NODE_ENV","undefined","mergedComponentPropsRef","mergedClsPrefixRef","mergedRtlRef","inlineThemeDisabled","NFormItem","uncontrolledValueRef","controlledValueRef","mergedValueRef","themeRef","insertionDisabledRef","mergedValue","isArray","length","removeDisabledRef","buttonSizeRef","_a","_b","DynamicInput","buttonSize","doUpdateValue","_onUpdateValue","ensureKey","index","rawValue","key","get","set","handleValueChange","newValue","from","originalItem","rawOriginal","rawNew","originalKey","handleCreateClick","createItem","splice","remove","swap","array","currentIndex","targetIndex","currentItem","move","mergedThemeRef","keyPlaceholderRef","valuePlaceholderRef","placeholderRef","rtlEnabledRef","cssVarsRef","self","actionMargin","actionMarginRtl","themeClassHandle","locale","localeRef","rtlEnabled","mergedClsPrefix","uncontrolledValue","insertionDisabled","removeDisabled","mergedTheme","cssVars","themeClass","onRender","render","$slots","class","block","ghost","dashed","size","disabled","theme","peers","Button","themeOverrides","peerOverrides","onClick","create","icon","clsPrefix","map","_","parentPath","path","v","circle"],"sources":["D:/VCode/SHC社区管理系统/shc_community_manager_system/node_modules/naive-ui/es/dynamic-input/src/DynamicInput.js"],"sourcesContent":["import { h, ref, toRef, isProxy, toRaw, computed, defineComponent, inject, provide, watchEffect } from 'vue';\nimport { useMergedState } from 'vooks';\nimport { createId } from 'seemly';\nimport { RemoveIcon, AddIcon, ArrowDownIcon, ArrowUpIcon } from '../../_internal/icons';\nimport { formItemInjectionKey } from '../../_mixins/use-form-item';\nimport { NBaseIcon } from '../../_internal';\nimport { NButton } from '../../button';\nimport { NButtonGroup } from '../../button-group';\nimport { useTheme, useLocale, useConfig, useThemeClass } from '../../_mixins';\nimport { call, warnOnce, resolveSlotWithProps, resolveSlot } from '../../_utils';\nimport { dynamicInputLight } from '../styles';\nimport NDynamicInputInputPreset from './InputPreset';\nimport NDynamicInputPairPreset from './PairPreset';\nimport { dynamicInputInjectionKey } from './interface';\nimport style from './styles/index.cssr';\nimport { useRtl } from '../../_mixins/use-rtl';\nconst globalDataKeyMap = new WeakMap();\nexport const dynamicInputProps = Object.assign(Object.assign({}, useTheme.props), { max: Number, min: {\n        type: Number,\n        default: 0\n    }, value: Array, \n    // TODO: make it robust for different types\n    defaultValue: {\n        type: Array,\n        default: () => []\n    }, preset: {\n        type: String,\n        default: 'input'\n    }, keyField: String, itemStyle: [String, Object], \n    // for preset pair\n    keyPlaceholder: {\n        type: String,\n        default: ''\n    }, valuePlaceholder: {\n        type: String,\n        default: ''\n    }, \n    // for preset input\n    placeholder: {\n        type: String,\n        default: ''\n    }, showSortButton: Boolean, createButtonProps: Object, onCreate: Function, onRemove: Function, 'onUpdate:value': [Function, Array], onUpdateValue: [Function, Array], \n    // deprecated\n    onClear: Function, onInput: [Function, Array] });\nexport default defineComponent({\n    name: 'DynamicInput',\n    props: dynamicInputProps,\n    setup(props, { slots }) {\n        if (process.env.NODE_ENV !== 'production') {\n            watchEffect(() => {\n                if (props.onClear !== undefined) {\n                    warnOnce('dynamic-input', '`on-clear` is deprecated, it is out of usage anymore.');\n                }\n                if (props.onInput !== undefined) {\n                    warnOnce('dynamic-input', '`on-input` is deprecated, please use `on-update:value` instead.');\n                }\n            });\n        }\n        const { mergedComponentPropsRef, mergedClsPrefixRef, mergedRtlRef, inlineThemeDisabled } = useConfig();\n        const NFormItem = inject(formItemInjectionKey, null);\n        const uncontrolledValueRef = ref(props.defaultValue);\n        const controlledValueRef = toRef(props, 'value');\n        const mergedValueRef = useMergedState(controlledValueRef, uncontrolledValueRef);\n        const themeRef = useTheme('DynamicInput', '-dynamic-input', style, dynamicInputLight, props, mergedClsPrefixRef);\n        const insertionDisabledRef = computed(() => {\n            const { value: mergedValue } = mergedValueRef;\n            if (Array.isArray(mergedValue)) {\n                const { max } = props;\n                return max !== undefined && mergedValue.length >= max;\n            }\n            return false;\n        });\n        const removeDisabledRef = computed(() => {\n            const { value: mergedValue } = mergedValueRef;\n            if (Array.isArray(mergedValue))\n                return mergedValue.length <= props.min;\n            return true;\n        });\n        const buttonSizeRef = computed(() => {\n            var _a, _b;\n            return (_b = (_a = mergedComponentPropsRef === null || mergedComponentPropsRef === void 0 ? void 0 : mergedComponentPropsRef.value) === null || _a === void 0 ? void 0 : _a.DynamicInput) === null || _b === void 0 ? void 0 : _b.buttonSize;\n        });\n        function doUpdateValue(value) {\n            const { onInput, 'onUpdate:value': _onUpdateValue, onUpdateValue } = props;\n            if (onInput)\n                call(onInput, value);\n            if (_onUpdateValue)\n                call(_onUpdateValue, value);\n            if (onUpdateValue)\n                call(onUpdateValue, value);\n            uncontrolledValueRef.value = value;\n        }\n        function ensureKey(value, index) {\n            if (value === undefined || value === null)\n                return index;\n            if (typeof value !== 'object')\n                return index;\n            const rawValue = isProxy(value) ? toRaw(value) : value;\n            let key = globalDataKeyMap.get(rawValue);\n            if (key === undefined) {\n                globalDataKeyMap.set(rawValue, (key = createId()));\n            }\n            return key;\n        }\n        function handleValueChange(index, value) {\n            const { value: mergedValue } = mergedValueRef;\n            const newValue = Array.from(mergedValue !== null && mergedValue !== void 0 ? mergedValue : []);\n            const originalItem = newValue[index];\n            newValue[index] = value;\n            // update dataKeyMap\n            if (originalItem &&\n                value &&\n                typeof originalItem === 'object' &&\n                typeof value === 'object') {\n                const rawOriginal = isProxy(originalItem)\n                    ? toRaw(originalItem)\n                    : originalItem;\n                const rawNew = isProxy(value) ? toRaw(value) : value;\n                // inherit key is value position is not change\n                const originalKey = globalDataKeyMap.get(rawOriginal);\n                if (originalKey !== undefined) {\n                    globalDataKeyMap.set(rawNew, originalKey);\n                }\n            }\n            doUpdateValue(newValue);\n        }\n        function handleCreateClick() {\n            createItem(0);\n        }\n        function createItem(index) {\n            const { value: mergedValue } = mergedValueRef;\n            const { onCreate } = props;\n            const newValue = Array.from(mergedValue !== null && mergedValue !== void 0 ? mergedValue : []);\n            if (onCreate) {\n                newValue.splice(index + 1, 0, onCreate(index + 1));\n                doUpdateValue(newValue);\n            }\n            else if (slots.default) {\n                newValue.splice(index + 1, 0, null);\n                doUpdateValue(newValue);\n            }\n            else {\n                switch (props.preset) {\n                    case 'input':\n                        newValue.splice(index + 1, 0, '');\n                        doUpdateValue(newValue);\n                        break;\n                    case 'pair':\n                        newValue.splice(index + 1, 0, { key: '', value: '' });\n                        doUpdateValue(newValue);\n                        break;\n                }\n            }\n        }\n        function remove(index) {\n            const { value: mergedValue } = mergedValueRef;\n            if (!Array.isArray(mergedValue))\n                return;\n            const { min } = props;\n            if (mergedValue.length <= min)\n                return;\n            const newValue = Array.from(mergedValue);\n            newValue.splice(index, 1);\n            doUpdateValue(newValue);\n            const { onRemove } = props;\n            if (onRemove)\n                onRemove(index);\n        }\n        function swap(array, currentIndex, targetIndex) {\n            if (currentIndex < 0 ||\n                targetIndex < 0 ||\n                currentIndex >= array.length ||\n                targetIndex >= array.length) {\n                return;\n            }\n            if (currentIndex === targetIndex)\n                return;\n            const currentItem = array[currentIndex];\n            array[currentIndex] = array[targetIndex];\n            array[targetIndex] = currentItem;\n        }\n        function move(type, index) {\n            const { value: mergedValue } = mergedValueRef;\n            if (!Array.isArray(mergedValue))\n                return;\n            const newValue = Array.from(mergedValue);\n            if (type === 'up') {\n                swap(newValue, index, index - 1);\n            }\n            if (type === 'down') {\n                swap(newValue, index, index + 1);\n            }\n            doUpdateValue(newValue);\n        }\n        provide(dynamicInputInjectionKey, {\n            mergedThemeRef: themeRef,\n            keyPlaceholderRef: toRef(props, 'keyPlaceholder'),\n            valuePlaceholderRef: toRef(props, 'valuePlaceholder'),\n            placeholderRef: toRef(props, 'placeholder')\n        });\n        const rtlEnabledRef = useRtl('DynamicInput', mergedRtlRef, mergedClsPrefixRef);\n        const cssVarsRef = computed(() => {\n            const { self: { actionMargin, actionMarginRtl } } = themeRef.value;\n            return {\n                '--action-margin': actionMargin,\n                '--action-margin-rtl': actionMarginRtl\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('dynamic-input', undefined, cssVarsRef, props)\n            : undefined;\n        return {\n            locale: useLocale('DynamicInput').localeRef,\n            rtlEnabled: rtlEnabledRef,\n            buttonSize: buttonSizeRef,\n            mergedClsPrefix: mergedClsPrefixRef,\n            NFormItem,\n            uncontrolledValue: uncontrolledValueRef,\n            mergedValue: mergedValueRef,\n            insertionDisabled: insertionDisabledRef,\n            removeDisabled: removeDisabledRef,\n            handleCreateClick,\n            ensureKey,\n            handleValueChange,\n            remove,\n            move,\n            createItem,\n            mergedTheme: themeRef,\n            cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n            themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n            onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n        };\n    },\n    render() {\n        const { $slots, buttonSize, mergedClsPrefix, mergedValue, locale, mergedTheme, keyField, itemStyle, preset, showSortButton, NFormItem, ensureKey, handleValueChange, remove, createItem, move, onRender } = this;\n        onRender === null || onRender === void 0 ? void 0 : onRender();\n        return (h(\"div\", { class: [\n                `${mergedClsPrefix}-dynamic-input`,\n                this.rtlEnabled && `${mergedClsPrefix}-dynamic-input--rtl`,\n                this.themeClass\n            ], style: this.cssVars }, !Array.isArray(mergedValue) || mergedValue.length === 0 ? (h(NButton, Object.assign({ block: true, ghost: true, dashed: true, size: buttonSize }, this.createButtonProps, { disabled: this.insertionDisabled, theme: mergedTheme.peers.Button, themeOverrides: mergedTheme.peerOverrides.Button, onClick: this.handleCreateClick }), {\n            default: () => resolveSlot($slots['create-button-default'], () => [\n                locale.create\n            ]),\n            icon: () => resolveSlot($slots['create-button-icon'], () => [\n                h(NBaseIcon, { clsPrefix: mergedClsPrefix }, { default: () => h(AddIcon, null) })\n            ])\n        })) : (mergedValue.map((_, index) => (h(\"div\", { key: keyField ? _[keyField] : ensureKey(_, index), \"data-key\": keyField ? _[keyField] : ensureKey(_, index), class: `${mergedClsPrefix}-dynamic-input-item`, style: itemStyle },\n            resolveSlotWithProps($slots.default, {\n                value: mergedValue[index],\n                index\n            }, () => {\n                return [\n                    preset === 'input' ? (h(NDynamicInputInputPreset, { clsPrefix: mergedClsPrefix, value: mergedValue[index], parentPath: NFormItem ? NFormItem.path.value : undefined, path: (NFormItem === null || NFormItem === void 0 ? void 0 : NFormItem.path.value)\n                            ? `${NFormItem.path.value}[${index}]`\n                            : undefined, onUpdateValue: (v) => handleValueChange(index, v) })) : preset === 'pair' ? (h(NDynamicInputPairPreset, { clsPrefix: mergedClsPrefix, value: mergedValue[index], parentPath: NFormItem ? NFormItem.path.value : undefined, path: (NFormItem === null || NFormItem === void 0 ? void 0 : NFormItem.path.value)\n                            ? `${NFormItem.path.value}[${index}]`\n                            : undefined, onUpdateValue: (v) => handleValueChange(index, v) })) : null\n                ];\n            }),\n            h(\"div\", { class: `${mergedClsPrefix}-dynamic-input-item__action` },\n                h(NButtonGroup, { size: buttonSize }, {\n                    default: () => [\n                        h(NButton, { disabled: this.removeDisabled, theme: mergedTheme.peers.Button, themeOverrides: mergedTheme.peerOverrides.Button, circle: true, onClick: () => remove(index) }, {\n                            icon: () => (h(NBaseIcon, { clsPrefix: mergedClsPrefix }, { default: () => h(RemoveIcon, null) }))\n                        }),\n                        h(NButton, { disabled: this.insertionDisabled, circle: true, theme: mergedTheme.peers.Button, themeOverrides: mergedTheme.peerOverrides.Button, onClick: () => createItem(index) }, {\n                            icon: () => (h(NBaseIcon, { clsPrefix: mergedClsPrefix }, { default: () => h(AddIcon, null) }))\n                        }),\n                        showSortButton ? (h(NButton, { disabled: index === 0, circle: true, theme: mergedTheme.peers.Button, themeOverrides: mergedTheme.peerOverrides.Button, onClick: () => move('up', index) }, {\n                            icon: () => (h(NBaseIcon, { clsPrefix: mergedClsPrefix }, {\n                                default: () => h(ArrowUpIcon, null)\n                            }))\n                        })) : null,\n                        showSortButton ? (h(NButton, { disabled: index === mergedValue.length - 1, circle: true, theme: mergedTheme.peers.Button, themeOverrides: mergedTheme.peerOverrides.Button, onClick: () => move('down', index) }, {\n                            icon: () => (h(NBaseIcon, { clsPrefix: mergedClsPrefix }, { default: () => h(ArrowDownIcon, null) }))\n                        })) : null\n                    ]\n                }))))))));\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}