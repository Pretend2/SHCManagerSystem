{"ast":null,"code":"import { inject, ref } from 'vue';\nimport { treeSelectInjectionKey } from '../../tree-select/src/interface';\nexport function useKeyboard({\n  props,\n  fNodesRef,\n  mergedExpandedKeysRef,\n  mergedSelectedKeysRef,\n  handleSelect,\n  handleSwitcherClick\n}) {\n  const {\n    value: mergedSelectedKeys\n  } = mergedSelectedKeysRef; // If it's used in tree-select, make it take over pending state\n\n  const treeSelectInjection = inject(treeSelectInjectionKey, null);\n  const pendingNodeKeyRef = treeSelectInjection ? treeSelectInjection.pendingNodeKeyRef : ref(mergedSelectedKeys.length ? mergedSelectedKeys[mergedSelectedKeys.length - 1] : null);\n\n  function handleKeydown(e) {\n    if (!props.keyboard) return;\n    const {\n      value: pendingNodeKey\n    } = pendingNodeKeyRef;\n\n    if (pendingNodeKey === null) {\n      if (e.key === 'ArrowDown' || e.key === 'ArrowUp') {\n        e.preventDefault();\n      }\n\n      if (['ArrowDown', 'ArrowUp', 'ArrowLeft', 'ArrowRight'].includes(e.key)) {\n        if (pendingNodeKey === null) {\n          const {\n            value: fNodes\n          } = fNodesRef;\n          let fIndex = 0;\n\n          while (fIndex < fNodes.length) {\n            if (!fNodes[fIndex].disabled) {\n              pendingNodeKeyRef.value = fNodes[fIndex].key;\n              break;\n            }\n\n            fIndex += 1;\n          }\n        }\n      }\n    } else {\n      const {\n        value: fNodes\n      } = fNodesRef;\n      let fIndex = fNodes.findIndex(tmNode => tmNode.key === pendingNodeKey);\n      if (!~fIndex) return;\n\n      if (e.key === 'Enter') {\n        handleSelect(fNodes[fIndex]);\n      } else if (e.key === 'ArrowDown') {\n        e.preventDefault();\n        fIndex += 1;\n\n        while (fIndex < fNodes.length) {\n          if (!fNodes[fIndex].disabled) {\n            pendingNodeKeyRef.value = fNodes[fIndex].key;\n            break;\n          }\n\n          fIndex += 1;\n        }\n      } else if (e.key === 'ArrowUp') {\n        e.preventDefault();\n        fIndex -= 1;\n\n        while (fIndex >= 0) {\n          if (!fNodes[fIndex].disabled) {\n            pendingNodeKeyRef.value = fNodes[fIndex].key;\n            break;\n          }\n\n          fIndex -= 1;\n        }\n      } else if (e.key === 'ArrowLeft') {\n        const pendingNode = fNodes[fIndex];\n\n        if (pendingNode.isLeaf || !mergedExpandedKeysRef.value.includes(pendingNodeKey)) {\n          const parentTmNode = pendingNode.getParent();\n\n          if (parentTmNode) {\n            pendingNodeKeyRef.value = parentTmNode.key;\n          }\n        } else {\n          handleSwitcherClick(pendingNode);\n        }\n      } else if (e.key === 'ArrowRight') {\n        const pendingNode = fNodes[fIndex];\n        if (pendingNode.isLeaf) return;\n\n        if (!mergedExpandedKeysRef.value.includes(pendingNodeKey)) {\n          handleSwitcherClick(pendingNode);\n        } else {\n          // Tha same as ArrowDown\n          fIndex += 1;\n\n          while (fIndex < fNodes.length) {\n            if (!fNodes[fIndex].disabled) {\n              pendingNodeKeyRef.value = fNodes[fIndex].key;\n              break;\n            }\n\n            fIndex += 1;\n          }\n        }\n      }\n    }\n  }\n\n  return {\n    pendingNodeKeyRef,\n    handleKeydown\n  };\n}","map":{"version":3,"names":["inject","ref","treeSelectInjectionKey","useKeyboard","props","fNodesRef","mergedExpandedKeysRef","mergedSelectedKeysRef","handleSelect","handleSwitcherClick","value","mergedSelectedKeys","treeSelectInjection","pendingNodeKeyRef","length","handleKeydown","e","keyboard","pendingNodeKey","key","preventDefault","includes","fNodes","fIndex","disabled","findIndex","tmNode","pendingNode","isLeaf","parentTmNode","getParent"],"sources":["D:/VCode/SHC社区管理系统/shc_community_manager_system/node_modules/naive-ui/es/tree/src/keyboard.js"],"sourcesContent":["import { inject, ref } from 'vue';\nimport { treeSelectInjectionKey } from '../../tree-select/src/interface';\nexport function useKeyboard({ props, fNodesRef, mergedExpandedKeysRef, mergedSelectedKeysRef, handleSelect, handleSwitcherClick }) {\n    const { value: mergedSelectedKeys } = mergedSelectedKeysRef;\n    // If it's used in tree-select, make it take over pending state\n    const treeSelectInjection = inject(treeSelectInjectionKey, null);\n    const pendingNodeKeyRef = treeSelectInjection\n        ? treeSelectInjection.pendingNodeKeyRef\n        : ref(mergedSelectedKeys.length\n            ? mergedSelectedKeys[mergedSelectedKeys.length - 1]\n            : null);\n    function handleKeydown(e) {\n        if (!props.keyboard)\n            return;\n        const { value: pendingNodeKey } = pendingNodeKeyRef;\n        if (pendingNodeKey === null) {\n            if (e.key === 'ArrowDown' || e.key === 'ArrowUp') {\n                e.preventDefault();\n            }\n            if (['ArrowDown', 'ArrowUp', 'ArrowLeft', 'ArrowRight'].includes(e.key)) {\n                if (pendingNodeKey === null) {\n                    const { value: fNodes } = fNodesRef;\n                    let fIndex = 0;\n                    while (fIndex < fNodes.length) {\n                        if (!fNodes[fIndex].disabled) {\n                            pendingNodeKeyRef.value = fNodes[fIndex].key;\n                            break;\n                        }\n                        fIndex += 1;\n                    }\n                }\n            }\n        }\n        else {\n            const { value: fNodes } = fNodesRef;\n            let fIndex = fNodes.findIndex((tmNode) => tmNode.key === pendingNodeKey);\n            if (!~fIndex)\n                return;\n            if (e.key === 'Enter') {\n                handleSelect(fNodes[fIndex]);\n            }\n            else if (e.key === 'ArrowDown') {\n                e.preventDefault();\n                fIndex += 1;\n                while (fIndex < fNodes.length) {\n                    if (!fNodes[fIndex].disabled) {\n                        pendingNodeKeyRef.value = fNodes[fIndex].key;\n                        break;\n                    }\n                    fIndex += 1;\n                }\n            }\n            else if (e.key === 'ArrowUp') {\n                e.preventDefault();\n                fIndex -= 1;\n                while (fIndex >= 0) {\n                    if (!fNodes[fIndex].disabled) {\n                        pendingNodeKeyRef.value = fNodes[fIndex].key;\n                        break;\n                    }\n                    fIndex -= 1;\n                }\n            }\n            else if (e.key === 'ArrowLeft') {\n                const pendingNode = fNodes[fIndex];\n                if (pendingNode.isLeaf ||\n                    !mergedExpandedKeysRef.value.includes(pendingNodeKey)) {\n                    const parentTmNode = pendingNode.getParent();\n                    if (parentTmNode) {\n                        pendingNodeKeyRef.value = parentTmNode.key;\n                    }\n                }\n                else {\n                    handleSwitcherClick(pendingNode);\n                }\n            }\n            else if (e.key === 'ArrowRight') {\n                const pendingNode = fNodes[fIndex];\n                if (pendingNode.isLeaf)\n                    return;\n                if (!mergedExpandedKeysRef.value.includes(pendingNodeKey)) {\n                    handleSwitcherClick(pendingNode);\n                }\n                else {\n                    // Tha same as ArrowDown\n                    fIndex += 1;\n                    while (fIndex < fNodes.length) {\n                        if (!fNodes[fIndex].disabled) {\n                            pendingNodeKeyRef.value = fNodes[fIndex].key;\n                            break;\n                        }\n                        fIndex += 1;\n                    }\n                }\n            }\n        }\n    }\n    return {\n        pendingNodeKeyRef,\n        handleKeydown\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}