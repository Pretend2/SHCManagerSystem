{"ast":null,"code":"import { Fragment, isVNode, Comment } from 'vue';\n\nfunction ensureValidVNode(vnodes) {\n  return vnodes.some(child => {\n    if (!isVNode(child)) {\n      return true;\n    }\n\n    if (child.type === Comment) {\n      return false;\n    }\n\n    if (child.type === Fragment && !ensureValidVNode(child.children)) {\n      return false;\n    }\n\n    return true;\n  }) ? vnodes : null;\n}\n/**\n * We shouldn't use the following functions with slot flags `_: 1, 2, 3`\n */\n\n\nexport function resolveSlot(slot, fallback) {\n  return slot && ensureValidVNode(slot()) || fallback();\n}\nexport function resolveSlotWithProps(slot, props, fallback) {\n  return slot && ensureValidVNode(slot(props)) || fallback(props);\n}\n/**\n * Resolve slot with wrapper if content exists, no fallback\n */\n\nexport function resolveWrappedSlot(slot, wrapper) {\n  const children = slot && ensureValidVNode(slot());\n  return wrapper(children || null);\n}\nexport function isSlotEmpty(slot) {\n  return !(slot && ensureValidVNode(slot()));\n}","map":{"version":3,"names":["Fragment","isVNode","Comment","ensureValidVNode","vnodes","some","child","type","children","resolveSlot","slot","fallback","resolveSlotWithProps","props","resolveWrappedSlot","wrapper","isSlotEmpty"],"sources":["D:/VCode/SHC社区管理系统/shc_community_manager_system/node_modules/naive-ui/es/_utils/vue/resolve-slot.js"],"sourcesContent":["import { Fragment, isVNode, Comment } from 'vue';\nfunction ensureValidVNode(vnodes) {\n    return vnodes.some((child) => {\n        if (!isVNode(child)) {\n            return true;\n        }\n        if (child.type === Comment) {\n            return false;\n        }\n        if (child.type === Fragment &&\n            !ensureValidVNode(child.children)) {\n            return false;\n        }\n        return true;\n    })\n        ? vnodes\n        : null;\n}\n/**\n * We shouldn't use the following functions with slot flags `_: 1, 2, 3`\n */\nexport function resolveSlot(slot, fallback) {\n    return (slot && ensureValidVNode(slot())) || fallback();\n}\nexport function resolveSlotWithProps(slot, props, fallback) {\n    return (slot && ensureValidVNode(slot(props))) || fallback(props);\n}\n/**\n * Resolve slot with wrapper if content exists, no fallback\n */\nexport function resolveWrappedSlot(slot, wrapper) {\n    const children = slot && ensureValidVNode(slot());\n    return wrapper(children || null);\n}\nexport function isSlotEmpty(slot) {\n    return !(slot && ensureValidVNode(slot()));\n}\n"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,OAAnB,EAA4BC,OAA5B,QAA2C,KAA3C;;AACA,SAASC,gBAAT,CAA0BC,MAA1B,EAAkC;EAC9B,OAAOA,MAAM,CAACC,IAAP,CAAaC,KAAD,IAAW;IAC1B,IAAI,CAACL,OAAO,CAACK,KAAD,CAAZ,EAAqB;MACjB,OAAO,IAAP;IACH;;IACD,IAAIA,KAAK,CAACC,IAAN,KAAeL,OAAnB,EAA4B;MACxB,OAAO,KAAP;IACH;;IACD,IAAII,KAAK,CAACC,IAAN,KAAeP,QAAf,IACA,CAACG,gBAAgB,CAACG,KAAK,CAACE,QAAP,CADrB,EACuC;MACnC,OAAO,KAAP;IACH;;IACD,OAAO,IAAP;EACH,CAZM,IAaDJ,MAbC,GAcD,IAdN;AAeH;AACD;AACA;AACA;;;AACA,OAAO,SAASK,WAAT,CAAqBC,IAArB,EAA2BC,QAA3B,EAAqC;EACxC,OAAQD,IAAI,IAAIP,gBAAgB,CAACO,IAAI,EAAL,CAAzB,IAAsCC,QAAQ,EAArD;AACH;AACD,OAAO,SAASC,oBAAT,CAA8BF,IAA9B,EAAoCG,KAApC,EAA2CF,QAA3C,EAAqD;EACxD,OAAQD,IAAI,IAAIP,gBAAgB,CAACO,IAAI,CAACG,KAAD,CAAL,CAAzB,IAA2CF,QAAQ,CAACE,KAAD,CAA1D;AACH;AACD;AACA;AACA;;AACA,OAAO,SAASC,kBAAT,CAA4BJ,IAA5B,EAAkCK,OAAlC,EAA2C;EAC9C,MAAMP,QAAQ,GAAGE,IAAI,IAAIP,gBAAgB,CAACO,IAAI,EAAL,CAAzC;EACA,OAAOK,OAAO,CAACP,QAAQ,IAAI,IAAb,CAAd;AACH;AACD,OAAO,SAASQ,WAAT,CAAqBN,IAArB,EAA2B;EAC9B,OAAO,EAAEA,IAAI,IAAIP,gBAAgB,CAACO,IAAI,EAAL,CAA1B,CAAP;AACH"},"metadata":{},"sourceType":"module"}