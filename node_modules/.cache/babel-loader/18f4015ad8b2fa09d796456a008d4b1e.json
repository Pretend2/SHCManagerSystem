{"ast":null,"code":"import { h, defineComponent, provide, computed } from 'vue';\nimport { avatarGroupInjectionKey } from '../../avatar/src/context';\nimport NAvatar from '../../avatar/src/Avatar';\nimport { useConfig, useTheme } from '../../_mixins';\nimport style from './styles/avatar-group.cssr';\nimport { useRtl } from '../../_mixins/use-rtl';\nimport { avatarGroupLight } from '../styles';\nexport const avatarGroupProps = Object.assign(Object.assign({}, useTheme.props), {\n  max: Number,\n  maxStyle: [Object, String],\n  options: {\n    type: Array,\n    default: () => []\n  },\n  vertical: Boolean,\n  size: [String, Number]\n});\nexport default defineComponent({\n  name: 'AvatarGroup',\n  props: avatarGroupProps,\n\n  setup(props) {\n    const {\n      mergedClsPrefixRef,\n      mergedRtlRef\n    } = useConfig(props);\n    const mergedThemeRef = useTheme('AvatarGroup', '-avatar-group', style, avatarGroupLight, props, mergedClsPrefixRef);\n    provide(avatarGroupInjectionKey, props);\n    const rtlEnabledRef = useRtl('AvatarGroup', mergedRtlRef, mergedClsPrefixRef);\n    const restOptionsRef = computed(() => {\n      const {\n        max\n      } = props;\n      if (max === undefined) return undefined;\n      const {\n        options\n      } = props;\n      if (options.length > max) return options.slice(max - 1, options.length);\n      return [];\n    });\n    const displayedOptionsRef = computed(() => {\n      const {\n        options,\n        max\n      } = props;\n      if (max === undefined) return options;\n      if (options.length > max) return options.slice(0, max - 1);\n      if (options.length === max) return options.slice(0, max);\n      return options;\n    });\n    return {\n      mergedTheme: mergedThemeRef,\n      rtlEnabled: rtlEnabledRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      restOptions: restOptionsRef,\n      displayedOptions: displayedOptionsRef\n    };\n  },\n\n  render() {\n    const {\n      mergedClsPrefix,\n      displayedOptions,\n      restOptions,\n      mergedTheme,\n      $slots\n    } = this;\n    return h(\"div\", {\n      class: [`${mergedClsPrefix}-avatar-group`, this.rtlEnabled && `${mergedClsPrefix}-avatar-group--rtl`, this.vertical && `${mergedClsPrefix}-avatar-group--vertical`],\n      role: \"group\"\n    }, displayedOptions.map(option => {\n      return $slots.avatar ? $slots.avatar({\n        option\n      }) : h(NAvatar, {\n        src: option.src,\n        theme: mergedTheme.peers.Avatar,\n        themeOverrides: mergedTheme.peerOverrides.Avatar\n      });\n    }), restOptions !== undefined && restOptions.length > 0 && ($slots.rest ? $slots.rest({\n      options: restOptions,\n      rest: restOptions.length\n    }) : h(NAvatar, {\n      style: this.maxStyle,\n      theme: mergedTheme.peers.Avatar,\n      themeOverrides: mergedTheme.peerOverrides.Avatar\n    }, {\n      default: () => `+${restOptions.length}`\n    })));\n  }\n\n});","map":{"version":3,"names":["h","defineComponent","provide","computed","avatarGroupInjectionKey","NAvatar","useConfig","useTheme","style","useRtl","avatarGroupLight","avatarGroupProps","Object","assign","props","max","Number","maxStyle","String","options","type","Array","default","vertical","Boolean","size","name","setup","mergedClsPrefixRef","mergedRtlRef","mergedThemeRef","rtlEnabledRef","restOptionsRef","undefined","length","slice","displayedOptionsRef","mergedTheme","rtlEnabled","mergedClsPrefix","restOptions","displayedOptions","render","$slots","class","role","map","option","avatar","src","theme","peers","Avatar","themeOverrides","peerOverrides","rest"],"sources":["E:/VCode/SHC社区管理系统/shc_community_manager_system/node_modules/naive-ui/es/avatar-group/src/AvatarGroup.js"],"sourcesContent":["import { h, defineComponent, provide, computed } from 'vue';\nimport { avatarGroupInjectionKey } from '../../avatar/src/context';\nimport NAvatar from '../../avatar/src/Avatar';\nimport { useConfig, useTheme } from '../../_mixins';\nimport style from './styles/avatar-group.cssr';\nimport { useRtl } from '../../_mixins/use-rtl';\nimport { avatarGroupLight } from '../styles';\nexport const avatarGroupProps = Object.assign(Object.assign({}, useTheme.props), { max: Number, maxStyle: [Object, String], options: {\n        type: Array,\n        default: () => []\n    }, vertical: Boolean, size: [String, Number] });\nexport default defineComponent({\n    name: 'AvatarGroup',\n    props: avatarGroupProps,\n    setup(props) {\n        const { mergedClsPrefixRef, mergedRtlRef } = useConfig(props);\n        const mergedThemeRef = useTheme('AvatarGroup', '-avatar-group', style, avatarGroupLight, props, mergedClsPrefixRef);\n        provide(avatarGroupInjectionKey, props);\n        const rtlEnabledRef = useRtl('AvatarGroup', mergedRtlRef, mergedClsPrefixRef);\n        const restOptionsRef = computed(() => {\n            const { max } = props;\n            if (max === undefined)\n                return undefined;\n            const { options } = props;\n            if (options.length > max)\n                return options.slice(max - 1, options.length);\n            return [];\n        });\n        const displayedOptionsRef = computed(() => {\n            const { options, max } = props;\n            if (max === undefined)\n                return options;\n            if (options.length > max)\n                return options.slice(0, max - 1);\n            if (options.length === max)\n                return options.slice(0, max);\n            return options;\n        });\n        return {\n            mergedTheme: mergedThemeRef,\n            rtlEnabled: rtlEnabledRef,\n            mergedClsPrefix: mergedClsPrefixRef,\n            restOptions: restOptionsRef,\n            displayedOptions: displayedOptionsRef\n        };\n    },\n    render() {\n        const { mergedClsPrefix, displayedOptions, restOptions, mergedTheme, $slots } = this;\n        return (h(\"div\", { class: [\n                `${mergedClsPrefix}-avatar-group`,\n                this.rtlEnabled && `${mergedClsPrefix}-avatar-group--rtl`,\n                this.vertical && `${mergedClsPrefix}-avatar-group--vertical`\n            ], role: \"group\" },\n            displayedOptions.map((option) => {\n                return $slots.avatar ? ($slots.avatar({ option })) : (h(NAvatar, { src: option.src, theme: mergedTheme.peers.Avatar, themeOverrides: mergedTheme.peerOverrides.Avatar }));\n            }),\n            restOptions !== undefined &&\n                restOptions.length > 0 &&\n                ($slots.rest ? ($slots.rest({ options: restOptions, rest: restOptions.length })) : (h(NAvatar, { style: this.maxStyle, theme: mergedTheme.peers.Avatar, themeOverrides: mergedTheme.peerOverrides.Avatar }, {\n                    default: () => `+${restOptions.length}`\n                })))));\n    }\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}