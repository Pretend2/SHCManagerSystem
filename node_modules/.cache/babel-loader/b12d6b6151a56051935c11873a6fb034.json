{"ast":null,"code":"// All the algorithms credit to https://stackoverflow.com/questions/36721830/convert-hsl-to-rgb-and-hex/54014428#54014428\n// original author: Kamil Kiełczewski\n\n/**\n * @param h 360\n * @param s 100\n * @param l 100\n * @returns [h, s, v] 360, 100, 100\n */\nexport function hsl2hsv(h, s, l) {\n  s /= 100;\n  l /= 100;\n  const v = s * Math.min(l, 1 - l) + l;\n  return [h, v ? (2 - 2 * l / v) * 100 : 0, v * 100];\n}\n/**\n * @param h 360\n * @param s 100\n * @param v 100\n * @returns [h, s, l] 360, 100, 100\n */\n\nexport function hsv2hsl(h, s, v) {\n  s /= 100;\n  v /= 100;\n  const l = v - v * s / 2;\n  const m = Math.min(l, 1 - l);\n  return [h, m ? (v - l) / m * 100 : 0, l * 100];\n}\n/**\n * @param h 360\n * @param s 100\n * @param v 100\n * @returns [r, g, b] 255, 255, 255\n */\n\nexport function hsv2rgb(h, s, v) {\n  s /= 100;\n  v /= 100;\n\n  let f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n\n  return [f(5) * 255, f(3) * 255, f(1) * 255];\n}\n/**\n * @param r 255\n * @param g 255\n * @param b 255\n * @returns [360, 100, 100]\n */\n\nexport function rgb2hsv(r, g, b) {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n  let v = Math.max(r, g, b),\n      c = v - Math.min(r, g, b);\n  let h = c && (v == r ? (g - b) / c : v == g ? 2 + (b - r) / c : 4 + (r - g) / c);\n  return [60 * (h < 0 ? h + 6 : h), v && c / v * 100, v * 100];\n}\n/**\n * @param r 255\n * @param g 255\n * @param b 255\n * @returns [360, 100, 100]\n */\n\nexport function rgb2hsl(r, g, b) {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n  let v = Math.max(r, g, b),\n      c = v - Math.min(r, g, b),\n      f = 1 - Math.abs(v + v - c - 1);\n  let h = c && (v == r ? (g - b) / c : v == g ? 2 + (b - r) / c : 4 + (r - g) / c);\n  return [60 * (h < 0 ? h + 6 : h), f ? c / f * 100 : 0, (v + v - c) * 50];\n}\n/**\n * @param h 360\n * @param s 100\n * @param l 100\n * @returns [255, 255, 255]\n */\n\nexport function hsl2rgb(h, s, l) {\n  s /= 100;\n  l /= 100;\n  let a = s * Math.min(l, 1 - l);\n\n  let f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n\n  return [f(0) * 255, f(8) * 255, f(4) * 255];\n}","map":{"version":3,"names":["hsl2hsv","h","s","l","v","Math","min","hsv2hsl","m","hsv2rgb","f","n","k","max","rgb2hsv","r","g","b","c","rgb2hsl","abs","hsl2rgb","a"],"sources":["D:/VCode/SHC社区管理系统/shc_community_manager_system/node_modules/seemly/es/color/convert.js"],"sourcesContent":["// All the algorithms credit to https://stackoverflow.com/questions/36721830/convert-hsl-to-rgb-and-hex/54014428#54014428\n// original author: Kamil Kiełczewski\n/**\n * @param h 360\n * @param s 100\n * @param l 100\n * @returns [h, s, v] 360, 100, 100\n */\nexport function hsl2hsv(h, s, l) {\n    s /= 100;\n    l /= 100;\n    const v = s * Math.min(l, 1 - l) + l;\n    return [h, v ? (2 - (2 * l) / v) * 100 : 0, v * 100];\n}\n/**\n * @param h 360\n * @param s 100\n * @param v 100\n * @returns [h, s, l] 360, 100, 100\n */\nexport function hsv2hsl(h, s, v) {\n    s /= 100;\n    v /= 100;\n    const l = v - (v * s) / 2;\n    const m = Math.min(l, 1 - l);\n    return [h, m ? ((v - l) / m) * 100 : 0, l * 100];\n}\n/**\n * @param h 360\n * @param s 100\n * @param v 100\n * @returns [r, g, b] 255, 255, 255\n */\nexport function hsv2rgb(h, s, v) {\n    s /= 100;\n    v /= 100;\n    let f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n    return [f(5) * 255, f(3) * 255, f(1) * 255];\n}\n/**\n * @param r 255\n * @param g 255\n * @param b 255\n * @returns [360, 100, 100]\n */\nexport function rgb2hsv(r, g, b) {\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    let v = Math.max(r, g, b), c = v - Math.min(r, g, b);\n    let h = c && (v == r ? (g - b) / c : v == g ? 2 + (b - r) / c : 4 + (r - g) / c);\n    return [60 * (h < 0 ? h + 6 : h), v && (c / v) * 100, v * 100];\n}\n/**\n * @param r 255\n * @param g 255\n * @param b 255\n * @returns [360, 100, 100]\n */\nexport function rgb2hsl(r, g, b) {\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    let v = Math.max(r, g, b), c = v - Math.min(r, g, b), f = 1 - Math.abs(v + v - c - 1);\n    let h = c && (v == r ? (g - b) / c : v == g ? 2 + (b - r) / c : 4 + (r - g) / c);\n    return [60 * (h < 0 ? h + 6 : h), f ? (c / f) * 100 : 0, (v + v - c) * 50];\n}\n/**\n * @param h 360\n * @param s 100\n * @param l 100\n * @returns [255, 255, 255]\n */\nexport function hsl2rgb(h, s, l) {\n    s /= 100;\n    l /= 100;\n    let a = s * Math.min(l, 1 - l);\n    let f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n    return [f(0) * 255, f(8) * 255, f(4) * 255];\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}