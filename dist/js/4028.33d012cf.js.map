{"version":3,"file":"js/4028.33d012cf.js","mappings":"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","sources":["webpack://shc_community_manager_system/./node_modules/naive-ui/es/checkbox/src/CheckMark.js","webpack://shc_community_manager_system/./node_modules/naive-ui/es/checkbox/src/LineMark.js","webpack://shc_community_manager_system/./node_modules/naive-ui/es/checkbox/src/CheckboxGroup.js","webpack://shc_community_manager_system/./node_modules/naive-ui/es/checkbox/src/styles/index.cssr.js","webpack://shc_community_manager_system/./node_modules/naive-ui/es/checkbox/src/Checkbox.js"],"sourcesContent":["import { h } from 'vue';\nexport default (h(\"svg\", { viewBox: \"0 0 64 64\", class: \"check-icon\" },\n    h(\"path\", { d: \"M50.42,16.76L22.34,39.45l-8.1-11.46c-1.12-1.58-3.3-1.96-4.88-0.84c-1.58,1.12-1.95,3.3-0.84,4.88l10.26,14.51  c0.56,0.79,1.42,1.31,2.38,1.45c0.16,0.02,0.32,0.03,0.48,0.03c0.8,0,1.57-0.27,2.2-0.78l30.99-25.03c1.5-1.21,1.74-3.42,0.52-4.92  C54.13,15.78,51.93,15.55,50.42,16.76z\" })));\n","import { h } from 'vue';\nexport default (h(\"svg\", { viewBox: \"0 0 100 100\", class: \"line-icon\" },\n    h(\"path\", { d: \"M80.2,55.5H21.4c-2.8,0-5.1-2.5-5.1-5.5l0,0c0-3,2.3-5.5,5.1-5.5h58.7c2.8,0,5.1,2.5,5.1,5.5l0,0C85.2,53.1,82.9,55.5,80.2,55.5z\" })));\n","import { h, defineComponent, provide, computed, toRef, ref, watchEffect } from 'vue';\nimport { useMergedState } from 'vooks';\nimport { useConfig, useFormItem } from '../../_mixins';\nimport { call, createInjectionKey, warnOnce } from '../../_utils';\nexport const checkboxGroupInjectionKey = createInjectionKey('n-checkbox-group');\nexport const checkboxGroupProps = {\n    min: Number,\n    max: Number,\n    size: String,\n    value: Array,\n    defaultValue: {\n        type: Array,\n        default: null\n    },\n    disabled: {\n        type: Boolean,\n        default: undefined\n    },\n    'onUpdate:value': [Function, Array],\n    onUpdateValue: [Function, Array],\n    // deprecated\n    onChange: [Function, Array]\n};\nexport default defineComponent({\n    name: 'CheckboxGroup',\n    props: checkboxGroupProps,\n    setup(props) {\n        if (process.env.NODE_ENV !== 'production') {\n            watchEffect(() => {\n                if (props.onChange !== undefined) {\n                    warnOnce('checkbox-group', '`on-change` is deprecated, please use `on-update:value` instead.');\n                }\n            });\n        }\n        const { mergedClsPrefixRef } = useConfig(props);\n        const formItem = useFormItem(props);\n        const { mergedSizeRef, mergedDisabledRef } = formItem;\n        const uncontrolledValueRef = ref(props.defaultValue);\n        const controlledValueRef = computed(() => props.value);\n        const mergedValueRef = useMergedState(controlledValueRef, uncontrolledValueRef);\n        const checkedCount = computed(() => {\n            var _a;\n            return ((_a = mergedValueRef.value) === null || _a === void 0 ? void 0 : _a.length) || 0;\n        });\n        const valueSetRef = computed(() => {\n            if (Array.isArray(mergedValueRef.value)) {\n                return new Set(mergedValueRef.value);\n            }\n            return new Set();\n        });\n        function toggleCheckbox(checked, checkboxValue) {\n            const { nTriggerFormInput, nTriggerFormChange } = formItem;\n            const { onChange, 'onUpdate:value': _onUpdateValue, onUpdateValue } = props;\n            if (Array.isArray(mergedValueRef.value)) {\n                const groupValue = Array.from(mergedValueRef.value);\n                const index = groupValue.findIndex((value) => value === checkboxValue);\n                if (checked) {\n                    if (!~index) {\n                        groupValue.push(checkboxValue);\n                        if (onUpdateValue) {\n                            call(onUpdateValue, groupValue, {\n                                actionType: 'check',\n                                value: checkboxValue\n                            });\n                        }\n                        if (_onUpdateValue) {\n                            call(_onUpdateValue, groupValue, {\n                                actionType: 'check',\n                                value: checkboxValue\n                            });\n                        }\n                        nTriggerFormInput();\n                        nTriggerFormChange();\n                        uncontrolledValueRef.value = groupValue;\n                        // deprecated\n                        if (onChange)\n                            call(onChange, groupValue);\n                    }\n                }\n                else {\n                    if (~index) {\n                        groupValue.splice(index, 1);\n                        if (onUpdateValue) {\n                            call(onUpdateValue, groupValue, {\n                                actionType: 'uncheck',\n                                value: checkboxValue\n                            });\n                        }\n                        if (_onUpdateValue) {\n                            call(_onUpdateValue, groupValue, {\n                                actionType: 'uncheck',\n                                value: checkboxValue\n                            });\n                        }\n                        if (onChange)\n                            call(onChange, groupValue); // deprecated\n                        uncontrolledValueRef.value = groupValue;\n                        nTriggerFormInput();\n                        nTriggerFormChange();\n                    }\n                }\n            }\n            else {\n                if (checked) {\n                    if (onUpdateValue) {\n                        call(onUpdateValue, [checkboxValue], {\n                            actionType: 'check',\n                            value: checkboxValue\n                        });\n                    }\n                    if (_onUpdateValue) {\n                        call(_onUpdateValue, [checkboxValue], {\n                            actionType: 'check',\n                            value: checkboxValue\n                        });\n                    }\n                    if (onChange)\n                        call(onChange, [checkboxValue]); // deprecated\n                    uncontrolledValueRef.value = [checkboxValue];\n                    nTriggerFormInput();\n                    nTriggerFormChange();\n                }\n                else {\n                    if (onUpdateValue) {\n                        call(onUpdateValue, [], {\n                            actionType: 'uncheck',\n                            value: checkboxValue\n                        });\n                    }\n                    if (_onUpdateValue) {\n                        call(_onUpdateValue, [], {\n                            actionType: 'uncheck',\n                            value: checkboxValue\n                        });\n                    }\n                    if (onChange)\n                        call(onChange, []); // deprecated\n                    uncontrolledValueRef.value = [];\n                    nTriggerFormInput();\n                    nTriggerFormChange();\n                }\n            }\n        }\n        provide(checkboxGroupInjectionKey, {\n            checkedCountRef: checkedCount,\n            maxRef: toRef(props, 'max'),\n            minRef: toRef(props, 'min'),\n            valueSetRef,\n            disabledRef: mergedDisabledRef,\n            mergedSizeRef,\n            toggleCheckbox\n        });\n        return {\n            mergedClsPrefix: mergedClsPrefixRef\n        };\n    },\n    render() {\n        return (h(\"div\", { class: `${this.mergedClsPrefix}-checkbox-group`, role: \"group\" }, this.$slots));\n    }\n});\n","import { c, cB, cE, cM, insideModal, insidePopover } from '../../../_utils/cssr';\nimport { iconSwitchTransition } from '../../../_styles/transitions/icon-switch.cssr'; // vars:\n// --n-label-line-height\n// --n-bezier\n// --n-size\n// --n-border\n// --n-border-focus\n// --n-border-checked\n// --n-border-disabled\n// --n-border-disabled-checked\n// --n-box-shadow-focus\n// --n-color\n// --n-color-checked\n// --n-color-table\n// --n-color-table-modal\n// --n-color-disabled\n// --n-color-disabled-checked\n// --n-text-color\n// --n-text-color-disabled\n// --n-check-mark-color\n// --n-check-mark-color-disabled\n// --n-check-mark-color-disabled-checked\n// --n-border-radius\n// --n-font-size\n// --n-label-padding\n\nexport default c([cB('checkbox', `\n line-height: var(--n-label-line-height);\n font-size: var(--n-font-size);\n outline: none;\n cursor: pointer;\n display: inline-flex;\n flex-wrap: nowrap;\n align-items: flex-start;\n word-break: break-word;\n --n-merged-color-table: var(--n-color-table);\n `, [c('&:hover', [cB('checkbox-box', [cE('border', {\n  border: 'var(--n-border-checked)'\n})])]), c('&:focus:not(:active)', [cB('checkbox-box', [cE('border', `\n border: var(--n-border-focus);\n box-shadow: var(--n-box-shadow-focus);\n `)])]), cM('inside-table', [cB('checkbox-box', `\n background-color: var(--n-merged-color-table);\n `)]), cM('checked', [cB('checkbox-box', `\n background-color: var(--n-color-checked);\n `, [cB('checkbox-icon', [// if not set width to 100%, safari & old chrome won't display the icon\nc('.check-icon', `\n opacity: 1;\n transform: scale(1);\n `)])])]), cM('indeterminate', [cB('checkbox-box', [cB('checkbox-icon', [c('.check-icon', `\n opacity: 0;\n transform: scale(.5);\n `), c('.line-icon', `\n opacity: 1;\n transform: scale(1);\n `)])])]), cM('checked, indeterminate', [c('&:focus:not(:active)', [cB('checkbox-box', [cE('border', `\n border: var(--n-border-checked);\n box-shadow: var(--n-box-shadow-focus);\n `)])]), cB('checkbox-box', `\n background-color: var(--n-color-checked);\n border-left: 0;\n border-top: 0;\n `, [cE('border', {\n  border: 'var(--n-border-checked)'\n})])]), cM('disabled', {\n  cursor: 'not-allowed'\n}, [cM('checked', [cB('checkbox-box', `\n background-color: var(--n-color-disabled-checked);\n `, [cE('border', {\n  border: 'var(--n-border-disabled-checked)'\n}), cB('checkbox-icon', [c('.check-icon, .line-icon', {\n  fill: 'var(--n-check-mark-color-disabled-checked)'\n})])])]), cB('checkbox-box', `\n background-color: var(--n-color-disabled);\n `, [cE('border', {\n  border: 'var(--n-border-disabled)'\n}), cB('checkbox-icon', [c('.check-icon, .line-icon', {\n  fill: 'var(--n-check-mark-color-disabled)'\n})])]), cE('label', {\n  color: 'var(--n-text-color-disabled)'\n})]), cB('checkbox-box-wrapper', `\n position: relative;\n width: var(--n-size);\n flex-shrink: 0;\n flex-grow: 0;\n user-select: none;\n -webkit-user-select: none;\n `), cB('checkbox-box', `\n position: absolute;\n left: 0;\n top: 50%;\n transform: translateY(-50%);\n height: var(--n-size);\n width: var(--n-size);\n display: inline-block;\n box-sizing: border-box;\n border-radius: var(--n-border-radius);\n background-color: var(--n-color);\n transition: background-color 0.3s var(--n-bezier);\n `, [cE('border', `\n transition:\n border-color .3s var(--n-bezier),\n box-shadow .3s var(--n-bezier);\n border-radius: inherit;\n position: absolute;\n left: 0;\n right: 0;\n top: 0;\n bottom: 0;\n border: var(--n-border);\n `), cB('checkbox-icon', `\n display: flex;\n align-items: center;\n justify-content: center;\n position: absolute;\n left: 1px;\n right: 1px;\n top: 1px;\n bottom: 1px;\n `, [c('.check-icon, .line-icon', `\n width: 100%;\n fill: var(--n-check-mark-color);\n opacity: 0;\n transform: scale(0.5);\n transform-origin: center;\n transition:\n fill 0.3s var(--n-bezier),\n transform 0.3s var(--n-bezier),\n opacity 0.3s var(--n-bezier),\n border-color 0.3s var(--n-bezier);\n `), iconSwitchTransition({\n  left: '1px',\n  top: '1px'\n})])]), cE('label', `\n color: var(--n-text-color);\n transition: color .3s var(--n-bezier);\n user-select: none;\n -webkit-user-select: none;\n padding: var(--n-label-padding);\n `, [c('&:empty', {\n  display: 'none'\n})])]), // modal table header checkbox\ninsideModal(cB('checkbox', `\n --n-merged-color-table: var(--n-color-table-modal);\n `)), // popover table header checkbox\ninsidePopover(cB('checkbox', `\n --n-merged-color-table: var(--n-color-table-popover);\n `))]);","import { h, defineComponent, computed, inject, ref, toRef, watchEffect } from 'vue';\nimport { useMergedState, useMemo } from 'vooks';\nimport { createId } from 'seemly';\nimport { on } from 'evtd';\nimport { useConfig, useFormItem, useTheme, useThemeClass } from '../../_mixins';\nimport { NIconSwitchTransition } from '../../_internal';\nimport { call, createKey, warnOnce } from '../../_utils';\nimport { checkboxLight } from '../styles';\nimport CheckMark from './CheckMark';\nimport LineMark from './LineMark';\nimport { checkboxGroupInjectionKey } from './CheckboxGroup';\nimport style from './styles/index.cssr';\nimport { useRtl } from '../../_mixins/use-rtl';\nexport const checkboxProps = Object.assign(Object.assign({}, useTheme.props), { size: String, checked: {\n        type: [Boolean, String, Number],\n        default: undefined\n    }, defaultChecked: {\n        type: [Boolean, String, Number],\n        default: false\n    }, value: [String, Number], disabled: {\n        type: Boolean,\n        default: undefined\n    }, indeterminate: Boolean, label: String, focusable: {\n        type: Boolean,\n        default: true\n    }, checkedValue: {\n        type: [Boolean, String, Number],\n        default: true\n    }, uncheckedValue: {\n        type: [Boolean, String, Number],\n        default: false\n    }, 'onUpdate:checked': [Function, Array], onUpdateChecked: [Function, Array], \n    // private\n    privateInsideTable: Boolean, \n    // deprecated\n    onChange: [Function, Array] });\nexport default defineComponent({\n    name: 'Checkbox',\n    props: checkboxProps,\n    setup(props) {\n        if (process.env.NODE_ENV !== 'production') {\n            watchEffect(() => {\n                if (props.onChange) {\n                    warnOnce('checkbox', '`on-change` is deprecated, please use `on-update:checked` instead.');\n                }\n            });\n        }\n        const selfRef = ref(null);\n        const { mergedClsPrefixRef, inlineThemeDisabled, mergedRtlRef } = useConfig(props);\n        const formItem = useFormItem(props, {\n            mergedSize(NFormItem) {\n                const { size } = props;\n                if (size !== undefined)\n                    return size;\n                if (NCheckboxGroup) {\n                    const { value: mergedSize } = NCheckboxGroup.mergedSizeRef;\n                    if (mergedSize !== undefined) {\n                        return mergedSize;\n                    }\n                }\n                if (NFormItem) {\n                    const { mergedSize } = NFormItem;\n                    if (mergedSize !== undefined)\n                        return mergedSize.value;\n                }\n                return 'medium';\n            },\n            mergedDisabled(NFormItem) {\n                const { disabled } = props;\n                if (disabled !== undefined)\n                    return disabled;\n                if (NCheckboxGroup) {\n                    if (NCheckboxGroup.disabledRef.value)\n                        return true;\n                    const { maxRef: { value: max }, checkedCountRef } = NCheckboxGroup;\n                    if (max !== undefined &&\n                        checkedCountRef.value >= max &&\n                        !renderedCheckedRef.value) {\n                        return true;\n                    }\n                    const { minRef: { value: min } } = NCheckboxGroup;\n                    if (min !== undefined &&\n                        checkedCountRef.value <= min &&\n                        renderedCheckedRef.value) {\n                        return true;\n                    }\n                }\n                if (NFormItem) {\n                    return NFormItem.disabled.value;\n                }\n                return false;\n            }\n        });\n        const { mergedDisabledRef, mergedSizeRef } = formItem;\n        const NCheckboxGroup = inject(checkboxGroupInjectionKey, null);\n        const uncontrolledCheckedRef = ref(props.defaultChecked);\n        const controlledCheckedRef = toRef(props, 'checked');\n        const mergedCheckedRef = useMergedState(controlledCheckedRef, uncontrolledCheckedRef);\n        const renderedCheckedRef = useMemo(() => {\n            if (NCheckboxGroup) {\n                const groupValueSet = NCheckboxGroup.valueSetRef.value;\n                if (groupValueSet && props.value !== undefined) {\n                    return groupValueSet.has(props.value);\n                }\n                return false;\n            }\n            else {\n                return mergedCheckedRef.value === props.checkedValue;\n            }\n        });\n        const themeRef = useTheme('Checkbox', '-checkbox', style, checkboxLight, props, mergedClsPrefixRef);\n        function toggle(e) {\n            if (NCheckboxGroup && props.value !== undefined) {\n                NCheckboxGroup.toggleCheckbox(!renderedCheckedRef.value, props.value);\n            }\n            else {\n                const { onChange, 'onUpdate:checked': _onUpdateCheck, onUpdateChecked } = props;\n                const { nTriggerFormInput, nTriggerFormChange } = formItem;\n                const nextChecked = renderedCheckedRef.value\n                    ? props.uncheckedValue\n                    : props.checkedValue;\n                if (_onUpdateCheck) {\n                    call(_onUpdateCheck, nextChecked, e);\n                }\n                if (onUpdateChecked) {\n                    call(onUpdateChecked, nextChecked, e);\n                }\n                if (onChange)\n                    call(onChange, nextChecked, e); // deprecated\n                nTriggerFormInput();\n                nTriggerFormChange();\n                uncontrolledCheckedRef.value = nextChecked;\n            }\n        }\n        function handleClick(e) {\n            if (!mergedDisabledRef.value) {\n                toggle(e);\n            }\n        }\n        function handleKeyUp(e) {\n            if (mergedDisabledRef.value)\n                return;\n            switch (e.key) {\n                case ' ':\n                case 'Enter':\n                    toggle(e);\n            }\n        }\n        function handleKeyDown(e) {\n            switch (e.key) {\n                case ' ':\n                    e.preventDefault();\n            }\n        }\n        const exposedMethods = {\n            focus: () => {\n                var _a;\n                (_a = selfRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n            },\n            blur: () => {\n                var _a;\n                (_a = selfRef.value) === null || _a === void 0 ? void 0 : _a.blur();\n            }\n        };\n        const rtlEnabledRef = useRtl('Checkbox', mergedRtlRef, mergedClsPrefixRef);\n        const cssVarsRef = computed(() => {\n            const { value: mergedSize } = mergedSizeRef;\n            const { common: { cubicBezierEaseInOut }, self: { borderRadius, color, colorChecked, colorDisabled, colorTableHeader, colorTableHeaderModal, colorTableHeaderPopover, checkMarkColor, checkMarkColorDisabled, border, borderFocus, borderDisabled, borderChecked, boxShadowFocus, textColor, textColorDisabled, checkMarkColorDisabledChecked, colorDisabledChecked, borderDisabledChecked, labelPadding, labelLineHeight, [createKey('fontSize', mergedSize)]: fontSize, [createKey('size', mergedSize)]: size } } = themeRef.value;\n            return {\n                '--n-label-line-height': labelLineHeight,\n                '--n-size': size,\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-border-radius': borderRadius,\n                '--n-border': border,\n                '--n-border-checked': borderChecked,\n                '--n-border-focus': borderFocus,\n                '--n-border-disabled': borderDisabled,\n                '--n-border-disabled-checked': borderDisabledChecked,\n                '--n-box-shadow-focus': boxShadowFocus,\n                '--n-color': color,\n                '--n-color-checked': colorChecked,\n                '--n-color-table': colorTableHeader,\n                '--n-color-table-modal': colorTableHeaderModal,\n                '--n-color-table-popover': colorTableHeaderPopover,\n                '--n-color-disabled': colorDisabled,\n                '--n-color-disabled-checked': colorDisabledChecked,\n                '--n-text-color': textColor,\n                '--n-text-color-disabled': textColorDisabled,\n                '--n-check-mark-color': checkMarkColor,\n                '--n-check-mark-color-disabled': checkMarkColorDisabled,\n                '--n-check-mark-color-disabled-checked': checkMarkColorDisabledChecked,\n                '--n-font-size': fontSize,\n                '--n-label-padding': labelPadding\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('checkbox', computed(() => mergedSizeRef.value[0]), cssVarsRef, props)\n            : undefined;\n        return Object.assign(formItem, exposedMethods, {\n            rtlEnabled: rtlEnabledRef,\n            selfRef,\n            mergedClsPrefix: mergedClsPrefixRef,\n            mergedDisabled: mergedDisabledRef,\n            renderedChecked: renderedCheckedRef,\n            mergedTheme: themeRef,\n            labelId: createId(),\n            handleClick,\n            handleKeyUp,\n            handleKeyDown,\n            cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n            themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n            onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n        });\n    },\n    render() {\n        var _a;\n        const { $slots, renderedChecked, mergedDisabled, indeterminate, privateInsideTable, cssVars, labelId, label, mergedClsPrefix, focusable, handleKeyUp, handleKeyDown, handleClick } = this;\n        (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n        return (h(\"div\", { ref: \"selfRef\", class: [\n                `${mergedClsPrefix}-checkbox`,\n                this.themeClass,\n                this.rtlEnabled && `${mergedClsPrefix}-checkbox--rtl`,\n                renderedChecked && `${mergedClsPrefix}-checkbox--checked`,\n                mergedDisabled && `${mergedClsPrefix}-checkbox--disabled`,\n                indeterminate && `${mergedClsPrefix}-checkbox--indeterminate`,\n                privateInsideTable && `${mergedClsPrefix}-checkbox--inside-table`\n            ], tabindex: mergedDisabled || !focusable ? undefined : 0, role: \"checkbox\", \"aria-checked\": indeterminate ? 'mixed' : renderedChecked, \"aria-labelledby\": labelId, style: cssVars, onKeyup: handleKeyUp, onKeydown: handleKeyDown, onClick: handleClick, onMousedown: () => {\n                on('selectstart', window, (e) => {\n                    e.preventDefault();\n                }, {\n                    once: true\n                });\n            } },\n            h(\"div\", { class: `${mergedClsPrefix}-checkbox-box-wrapper` },\n                \"\\u00A0\",\n                h(\"div\", { class: `${mergedClsPrefix}-checkbox-box` },\n                    h(NIconSwitchTransition, null, {\n                        default: () => this.indeterminate ? (h(\"div\", { key: \"indeterminate\", class: `${mergedClsPrefix}-checkbox-icon` }, LineMark)) : (h(\"div\", { key: \"check\", class: `${mergedClsPrefix}-checkbox-icon` }, CheckMark))\n                    }),\n                    h(\"div\", { class: `${mergedClsPrefix}-checkbox-box__border` }))),\n            label !== null || $slots.default ? (h(\"span\", { class: `${mergedClsPrefix}-checkbox__label`, id: labelId }, $slots.default ? $slots.default() : label)) : null));\n    }\n});\n"],"names":["h","viewBox","class","d","checkboxGroupInjectionKey","createInjectionKey","checkboxGroupProps","min","Number","max","size","String","value","Array","defaultValue","type","default","disabled","Boolean","undefined","Function","onUpdateValue","onChange","defineComponent","name","props","setup","mergedClsPrefixRef","useConfig","formItem","useFormItem","mergedSizeRef","mergedDisabledRef","uncontrolledValueRef","ref","controlledValueRef","computed","mergedValueRef","useMergedState","checkedCount","_a","length","valueSetRef","isArray","Set","toggleCheckbox","checked","checkboxValue","nTriggerFormInput","nTriggerFormChange","_onUpdateValue","groupValue","from","index","findIndex","push","call","actionType","splice","provide","checkedCountRef","maxRef","toRef","minRef","disabledRef","mergedClsPrefix","render","this","role","$slots","c","cB","cE","border","cM","cursor","fill","color","iconSwitchTransition","left","top","display","insideModal","insidePopover","checkboxProps","Object","assign","useTheme","defaultChecked","indeterminate","label","focusable","checkedValue","uncheckedValue","onUpdateChecked","privateInsideTable","selfRef","inlineThemeDisabled","mergedRtlRef","mergedSize","NFormItem","NCheckboxGroup","mergedDisabled","renderedCheckedRef","inject","uncontrolledCheckedRef","controlledCheckedRef","mergedCheckedRef","useMemo","groupValueSet","has","themeRef","style","checkboxLight","toggle","e","_onUpdateCheck","nextChecked","handleClick","handleKeyUp","key","handleKeyDown","preventDefault","exposedMethods","focus","blur","rtlEnabledRef","useRtl","cssVarsRef","common","cubicBezierEaseInOut","self","borderRadius","colorChecked","colorDisabled","colorTableHeader","colorTableHeaderModal","colorTableHeaderPopover","checkMarkColor","checkMarkColorDisabled","borderFocus","borderDisabled","borderChecked","boxShadowFocus","textColor","textColorDisabled","checkMarkColorDisabledChecked","colorDisabledChecked","borderDisabledChecked","labelPadding","labelLineHeight","createKey","fontSize","themeClassHandle","useThemeClass","rtlEnabled","renderedChecked","mergedTheme","labelId","createId","cssVars","themeClass","onRender","tabindex","onKeyup","onKeydown","onClick","onMousedown","on","window","once","NIconSwitchTransition","LineMark","CheckMark","id"],"sourceRoot":""}